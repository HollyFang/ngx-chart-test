{"version":3,"file":"swimlane-ngx-charts.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","../../../../projects/swimlane/ngx-charts/src/lib/common/tooltip/injection.service.ts","../../../../projects/swimlane/ngx-charts/src/lib/utils/throttle.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/tooltip/position/placement.type.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/tooltip/position/position.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/tooltip/tooltip.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/tooltip/injection-registery.service.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/tooltip/tooltip.service.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/charts/chart.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/utils/visibility-observer.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/base-chart.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/axes/axis-label.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/trim-label.helper.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/axes/ticks.helper.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/axes/x-axis-ticks.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/axes/x-axis.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/shape.helper.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/axes/y-axis-ticks.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/axes/y-axis.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/axes/axes.module.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/tooltip/style.type.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/tooltip/alignment.type.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/tooltip/show.type.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/tooltip/tooltip.directive.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/tooltip/tooltip.module.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/label.helper.ts","../../../../projects/swimlane/ngx-charts/src/lib/utils/id.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/circle-series.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/circle.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/grid-panel.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/grid-panel-series.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/svg-linear-gradient.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/svg-radial-gradient.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/area.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/count/count.helper.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/count/count.directive.ts","../../../../projects/swimlane/ngx-charts/src/lib/events.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/tooltip-area.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/timeline/timeline.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/legend/legend.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/legend/legend-entry.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/legend/scale-legend.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/legend/advanced-legend.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/chart-common.module.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/view-dimensions.helper.ts","../../../../projects/swimlane/ngx-charts/src/lib/utils/color-sets.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/color.helper.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/domain.helper.ts","../../../../projects/swimlane/ngx-charts/src/lib/area-chart/area-chart.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/area-chart/area-chart-normalized.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/area-chart/area-chart-stacked.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/utils/sort.ts","../../../../projects/swimlane/ngx-charts/src/lib/area-chart/area-series.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/area-chart/area-chart.module.ts","../../../../projects/swimlane/ngx-charts/src/lib/bar-chart/bar.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/bar-chart/bar-horizontal.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/bar-chart/bar-horizontal-2d.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/bar-chart/bar-horizontal-normalized.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/bar-chart/bar-horizontal-stacked.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/bar-chart/bar-vertical.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/bar-chart/bar-vertical-2d.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/bar-chart/bar-vertical-normalized.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/bar-chart/bar-vertical-stacked.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/bar-chart/series-vertical.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/bar-chart/series-horizontal.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/bar-chart/bar-label.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/bar-chart/bar-chart.module.ts","../../../../projects/swimlane/ngx-charts/src/lib/bubble-chart/bubble-chart.utils.ts","../../../../projects/swimlane/ngx-charts/src/lib/bubble-chart/bubble-chart.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/bubble-chart/bubble-series.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/bubble-chart/bubble-chart.module.ts","../../../../projects/swimlane/ngx-charts/src/lib/heat-map/heat-map-cell.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/heat-map/heat-map-cell-series.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/heat-map/heat-map.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/heat-map/heat-map.module.ts","../../../../projects/swimlane/ngx-charts/src/lib/line-chart/line.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/line-chart/line-chart.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/line-chart/line-series.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/line-chart/line-chart.module.ts","../../../../projects/swimlane/ngx-charts/src/lib/utils/types.ts","../../../../projects/swimlane/ngx-charts/src/lib/polar-chart/polar-chart.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/polar-chart/polar-series.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/pie-chart/advanced-pie-chart.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/pie-chart/pie-label.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/pie-chart/pie-arc.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/pie-chart/pie-chart.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/grid-layout.helper.ts","../../../../projects/swimlane/ngx-charts/src/lib/pie-chart/pie-grid.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/pie-chart/pie-grid-series.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/pie-chart/pie-series.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/pie-chart/pie-chart.module.ts","../../../../projects/swimlane/ngx-charts/src/lib/polar-chart/polar-chart.module.ts","../../../../projects/swimlane/ngx-charts/src/lib/number-card/card.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/utils/color-utils.ts","../../../../projects/swimlane/ngx-charts/src/lib/number-card/card-series.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/number-card/number-card.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/number-card/number-card.module.ts","../../../../projects/swimlane/ngx-charts/src/lib/tree-map/tree-map-cell.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/tree-map/tree-map-cell-series.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/tree-map/tree-map.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/tree-map/tree-map.module.ts","../../../../projects/swimlane/ngx-charts/src/lib/gauge/linear-gauge.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/gauge/gauge.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/gauge/gauge-arc.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/gauge/gauge-axis.component.ts","../../../../projects/swimlane/ngx-charts/src/lib/gauge/gauge.module.ts","../../../../projects/swimlane/ngx-charts/src/lib/polyfills.ts","../../../../projects/swimlane/ngx-charts/src/lib/ngx-charts.module.ts","../../../../projects/swimlane/ngx-charts/src/lib/common/tick-format.helper.ts","../../../../projects/swimlane/ngx-charts/src/public-api.ts","../../../../projects/swimlane/ngx-charts/src/swimlane-ngx-charts.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {\r\n  ApplicationRef,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Injectable,\r\n  Injector,\r\n  ViewContainerRef,\r\n  EmbeddedViewRef,\r\n  Type\r\n} from '@angular/core';\r\nimport { DomPortalHost, ComponentPortal } from '@angular/cdk/portal';\r\n\r\nfunction isViewContainerRef(x: any): x is ViewContainerRef {\r\n  return x.element;\r\n}\r\n\r\n/**\r\n * Injection service is a helper to append components\r\n * dynamically to a known location in the DOM, most\r\n * noteably for dialogs/tooltips appending to body.\r\n *\r\n * @export\r\n */\r\n@Injectable()\r\nexport class InjectionService {\r\n  static globalRootViewContainer: ViewContainerRef = null;\r\n\r\n  /**\r\n   * Sets a default global root view container. This is useful for\r\n   * things like ngUpgrade that doesn't have a ApplicationRef root.\r\n   *\r\n   * @param container\r\n   */\r\n  static setGlobalRootViewContainer(container: ViewContainerRef): void {\r\n    InjectionService.globalRootViewContainer = container;\r\n  }\r\n\r\n  private _container: ViewContainerRef;\r\n\r\n  constructor(\r\n    private applicationRef: ApplicationRef,\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private injector: Injector\r\n  ) {}\r\n\r\n  /**\r\n   * Gets the root view container to inject the component to.\r\n   *\r\n   * @memberOf InjectionService\r\n   */\r\n  getRootViewContainer(): ViewContainerRef | ComponentRef<any> {\r\n    if (this._container) return this._container;\r\n    if (InjectionService.globalRootViewContainer) return InjectionService.globalRootViewContainer;\r\n\r\n    if (this.applicationRef.components.length) return this.applicationRef.components[0];\r\n\r\n    throw new Error(\r\n      'View Container not found! ngUpgrade needs to manually set this via setRootViewContainer or setGlobalRootViewContainer.'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Overrides the default root view container. This is useful for\r\n   * things like ngUpgrade that doesn't have a ApplicationRef root.\r\n   *\r\n   * @param container\r\n   *\r\n   * @memberOf InjectionService\r\n   */\r\n  setRootViewContainer(container: ViewContainerRef): void {\r\n    this._container = container;\r\n  }\r\n\r\n  /**\r\n   * Gets the html element for a component ref.\r\n   *\r\n   * @param componentRef\r\n   *\r\n   * @memberOf InjectionService\r\n   */\r\n  getComponentRootNode(component: ViewContainerRef | ComponentRef<any>): HTMLElement {\r\n    if (isViewContainerRef(component)) {\r\n      return component.element.nativeElement;\r\n    }\r\n    if (component.hostView && (component.hostView as EmbeddedViewRef<any>).rootNodes.length > 0) {\r\n      return (component.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\r\n    }\r\n\r\n    // the top most component root node has no `hostView`\r\n    return component.location.nativeElement;\r\n  }\r\n\r\n  /**\r\n   * Gets the root component container html element.\r\n   *\r\n   * @memberOf InjectionService\r\n   */\r\n  getRootViewContainerNode(component: ViewContainerRef | ComponentRef<any>): HTMLElement {\r\n    return this.getComponentRootNode(component);\r\n  }\r\n\r\n  /**\r\n   * Projects the bindings onto the component\r\n   *\r\n   * @param component\r\n   * @param options\r\n   *\r\n   * @memberOf InjectionService\r\n   */\r\n  projectComponentBindings(component: ComponentRef<any>, bindings: any): ComponentRef<any> {\r\n    if (bindings) {\r\n      if (bindings.inputs !== undefined) {\r\n        const bindingKeys = Object.getOwnPropertyNames(bindings.inputs);\r\n        for (const bindingName of bindingKeys) {\r\n          component.instance[bindingName] = bindings.inputs[bindingName];\r\n        }\r\n      }\r\n\r\n      if (bindings.outputs !== undefined) {\r\n        const eventKeys = Object.getOwnPropertyNames(bindings.outputs);\r\n        for (const eventName of eventKeys) {\r\n          component.instance[eventName] = bindings.outputs[eventName];\r\n        }\r\n      }\r\n    }\r\n\r\n    return component;\r\n  }\r\n\r\n  /**\r\n   * Appends a component to a adjacent location\r\n   *\r\n   * @param componentClass\r\n   * @param [options={}]\r\n   * @param [location]\r\n   *\r\n   * @memberOf InjectionService\r\n   */\r\n  appendComponent<T>(componentClass: Type<T>, bindings: any = {}, location?: any): ComponentRef<any> {\r\n    if (!location) location = this.getRootViewContainer();\r\n    const appendLocation = this.getComponentRootNode(location);\r\n\r\n    const portalHost = new DomPortalHost(\r\n      appendLocation,\r\n      this.componentFactoryResolver,\r\n      this.applicationRef,\r\n      this.injector\r\n    );\r\n\r\n    const portal = new ComponentPortal(componentClass);\r\n\r\n    const componentRef = portalHost.attach(portal);\r\n    this.projectComponentBindings(componentRef, bindings);\r\n    return componentRef;\r\n  }\r\n}\r\n","/**\r\n * Throttle a function\r\n *\r\n */\r\nexport function throttle(func: any, wait: number, options?: any) {\r\n  options = options || {};\r\n  let context;\r\n  let args;\r\n  let result;\r\n  let timeout = null;\r\n  let previous = 0;\r\n\r\n  function later() {\r\n    previous = options.leading === false ? 0 : +new Date();\r\n    timeout = null;\r\n    result = func.apply(context, args);\r\n  }\r\n\r\n  return function () {\r\n    const now = +new Date();\r\n\r\n    if (!previous && options.leading === false) {\r\n      previous = now;\r\n    }\r\n\r\n    const remaining = wait - (now - previous);\r\n    context = this;\r\n    args = arguments;\r\n\r\n    if (remaining <= 0) {\r\n      clearTimeout(timeout);\r\n      timeout = null;\r\n      previous = now;\r\n      result = func.apply(context, args);\r\n    } else if (!timeout && options.trailing !== false) {\r\n      timeout = setTimeout(later, remaining);\r\n    }\r\n\r\n    return result;\r\n  };\r\n}\r\n\r\n/**\r\n * Throttle decorator\r\n *\r\n *  class MyClass {\r\n *    throttleable(10)\r\n *    myFn() { ... }\r\n *  }\r\n */\r\nexport function throttleable(duration: number, options?: any) {\r\n  return function innerDecorator(target, key, descriptor) {\r\n    return {\r\n      configurable: true,\r\n      enumerable: descriptor.enumerable,\r\n      get: function getter() {\r\n        Object.defineProperty(this, key, {\r\n          configurable: true,\r\n          enumerable: descriptor.enumerable,\r\n          value: throttle(descriptor.value, duration, options)\r\n        });\r\n\r\n        return this[key];\r\n      }\r\n    };\r\n  };\r\n}\r\n","export enum PlacementTypes {\r\n  top = 'top' as any,\r\n  bottom = 'bottom' as any,\r\n  left = 'left' as any,\r\n  right = 'right' as any\r\n}\r\n","import { PlacementTypes } from './placement.type';\r\n\r\nconst caretOffset = 7;\r\n\r\nfunction verticalPosition(elDimensions, popoverDimensions, alignment) {\r\n  if (alignment === 'top') {\r\n    return elDimensions.top - caretOffset;\r\n  }\r\n\r\n  if (alignment === 'bottom') {\r\n    return elDimensions.top + elDimensions.height - popoverDimensions.height + caretOffset;\r\n  }\r\n\r\n  if (alignment === 'center') {\r\n    return elDimensions.top + elDimensions.height / 2 - popoverDimensions.height / 2;\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\nfunction horizontalPosition(elDimensions, popoverDimensions, alignment) {\r\n  if (alignment === 'left') {\r\n    return elDimensions.left - caretOffset;\r\n  }\r\n\r\n  if (alignment === 'right') {\r\n    return elDimensions.left + elDimensions.width - popoverDimensions.width + caretOffset;\r\n  }\r\n\r\n  if (alignment === 'center') {\r\n    return elDimensions.left + elDimensions.width / 2 - popoverDimensions.width / 2;\r\n  }\r\n\r\n  return undefined;\r\n}\r\n\r\n/**\r\n * Position helper for the popover directive.\r\n *\r\n * @export\r\n */\r\nexport class PositionHelper {\r\n  /**\r\n   * Calculate vertical alignment position\r\n   *\r\n   * @memberOf PositionHelper\r\n   */\r\n  static calculateVerticalAlignment(elDimensions, popoverDimensions, alignment): number {\r\n    let result = verticalPosition(elDimensions, popoverDimensions, alignment);\r\n\r\n    if (result + popoverDimensions.height > window.innerHeight) {\r\n      result = window.innerHeight - popoverDimensions.height;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Calculate vertical caret position\r\n   *\r\n   * @memberOf PositionHelper\r\n   */\r\n  static calculateVerticalCaret(elDimensions, popoverDimensions, caretDimensions, alignment): number {\r\n    let result;\r\n\r\n    if (alignment === 'top') {\r\n      result = elDimensions.height / 2 - caretDimensions.height / 2 + caretOffset;\r\n    }\r\n\r\n    if (alignment === 'bottom') {\r\n      result = popoverDimensions.height - elDimensions.height / 2 - caretDimensions.height / 2 - caretOffset;\r\n    }\r\n\r\n    if (alignment === 'center') {\r\n      result = popoverDimensions.height / 2 - caretDimensions.height / 2;\r\n    }\r\n\r\n    const popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\r\n    if (popoverPosition + popoverDimensions.height > window.innerHeight) {\r\n      result += popoverPosition + popoverDimensions.height - window.innerHeight;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Calculate horz alignment position\r\n   *\r\n   * @memberOf PositionHelper\r\n   */\r\n  static calculateHorizontalAlignment(elDimensions, popoverDimensions, alignment): number {\r\n    let result = horizontalPosition(elDimensions, popoverDimensions, alignment);\r\n\r\n    if (result + popoverDimensions.width > window.innerWidth) {\r\n      result = window.innerWidth - popoverDimensions.width;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Calculate horz caret position\r\n   *\r\n   * @memberOf PositionHelper\r\n   */\r\n  static calculateHorizontalCaret(elDimensions, popoverDimensions, caretDimensions, alignment): number {\r\n    let result;\r\n\r\n    if (alignment === 'left') {\r\n      result = elDimensions.width / 2 - caretDimensions.width / 2 + caretOffset;\r\n    }\r\n\r\n    if (alignment === 'right') {\r\n      result = popoverDimensions.width - elDimensions.width / 2 - caretDimensions.width / 2 - caretOffset;\r\n    }\r\n\r\n    if (alignment === 'center') {\r\n      result = popoverDimensions.width / 2 - caretDimensions.width / 2;\r\n    }\r\n\r\n    const popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\r\n    if (popoverPosition + popoverDimensions.width > window.innerWidth) {\r\n      result += popoverPosition + popoverDimensions.width - window.innerWidth;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Checks if the element's position should be flipped\r\n   *\r\n   * @memberOf PositionHelper\r\n   */\r\n  static shouldFlip(elDimensions, popoverDimensions, placement, spacing): boolean {\r\n    let flip = false;\r\n\r\n    if (placement === 'right') {\r\n      if (elDimensions.left + elDimensions.width + popoverDimensions.width + spacing > window.innerWidth) {\r\n        flip = true;\r\n      }\r\n    }\r\n\r\n    if (placement === 'left') {\r\n      if (elDimensions.left - popoverDimensions.width - spacing < 0) {\r\n        flip = true;\r\n      }\r\n    }\r\n\r\n    if (placement === 'top') {\r\n      if (elDimensions.top - popoverDimensions.height - spacing < 0) {\r\n        flip = true;\r\n      }\r\n    }\r\n\r\n    if (placement === 'bottom') {\r\n      if (elDimensions.top + elDimensions.height + popoverDimensions.height + spacing > window.innerHeight) {\r\n        flip = true;\r\n      }\r\n    }\r\n\r\n    return flip;\r\n  }\r\n\r\n  /**\r\n   * Position caret\r\n   *\r\n   * @memberOf PositionHelper\r\n   */\r\n  static positionCaret(placement, elmDim, hostDim, caretDimensions, alignment): any {\r\n    let top = 0;\r\n    let left = 0;\r\n\r\n    if (placement === PlacementTypes.right) {\r\n      left = -7;\r\n      top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\r\n    } else if (placement === PlacementTypes.left) {\r\n      left = elmDim.width;\r\n      top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\r\n    } else if (placement === PlacementTypes.top) {\r\n      top = elmDim.height;\r\n      left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\r\n    } else if (placement === PlacementTypes.bottom) {\r\n      top = -7;\r\n      left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\r\n    }\r\n\r\n    return { top, left };\r\n  }\r\n\r\n  /**\r\n   * Position content\r\n   *\r\n   * @memberOf PositionHelper\r\n   */\r\n  static positionContent(placement, elmDim, hostDim, spacing, alignment): any {\r\n    let top = 0;\r\n    let left = 0;\r\n\r\n    if (placement === PlacementTypes.right) {\r\n      left = hostDim.left + hostDim.width + spacing;\r\n      top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\r\n    } else if (placement === PlacementTypes.left) {\r\n      left = hostDim.left - elmDim.width - spacing;\r\n      top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\r\n    } else if (placement === PlacementTypes.top) {\r\n      top = hostDim.top - elmDim.height - spacing;\r\n      left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\r\n    } else if (placement === PlacementTypes.bottom) {\r\n      top = hostDim.top + hostDim.height + spacing;\r\n      left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\r\n    }\r\n\r\n    return { top, left };\r\n  }\r\n\r\n  /**\r\n   * Determine placement based on flip\r\n   *\r\n   * @memberOf PositionHelper\r\n   */\r\n  static determinePlacement(placement, elmDim, hostDim, spacing): any {\r\n    const shouldFlip = PositionHelper.shouldFlip(hostDim, elmDim, placement, spacing);\r\n\r\n    if (shouldFlip) {\r\n      if (placement === PlacementTypes.right) {\r\n        return PlacementTypes.left;\r\n      } else if (placement === PlacementTypes.left) {\r\n        return PlacementTypes.right;\r\n      } else if (placement === PlacementTypes.top) {\r\n        return PlacementTypes.bottom;\r\n      } else if (placement === PlacementTypes.bottom) {\r\n        return PlacementTypes.top;\r\n      }\r\n    }\r\n\r\n    return placement;\r\n  }\r\n}\r\n","import {\r\n  Input,\r\n  Component,\r\n  ElementRef,\r\n  AfterViewInit,\r\n  ViewEncapsulation,\r\n  HostListener,\r\n  ViewChild,\r\n  HostBinding,\r\n  Renderer2\r\n} from '@angular/core';\r\n\r\nimport { throttleable } from '../../utils/throttle';\r\nimport { PositionHelper, PlacementTypes } from './position';\r\n\r\nimport { StyleTypes } from './style.type';\r\nimport { AlignmentTypes } from './alignment.type';\r\n\r\n@Component({\r\n  selector: 'ngx-tooltip-content',\r\n  template: `\r\n    <div>\r\n      <span #caretElm [hidden]=\"!showCaret\" class=\"tooltip-caret position-{{ this.placement }}\"> </span>\r\n      <div class=\"tooltip-content\">\r\n        <span *ngIf=\"!title\">\r\n          <ng-template [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ model: context }\"> </ng-template>\r\n        </span>\r\n        <span *ngIf=\"title\" [innerHTML]=\"title\"> </span>\r\n      </div>\r\n    </div>\r\n  `,\r\n  encapsulation: ViewEncapsulation.None,\r\n  styleUrls: ['./tooltip.component.scss']\r\n})\r\nexport class TooltipContentComponent implements AfterViewInit {\r\n  @Input() host: any;\r\n  @Input() showCaret: boolean;\r\n  @Input() type: StyleTypes;\r\n  @Input() placement: PlacementTypes;\r\n  @Input() alignment: AlignmentTypes;\r\n  @Input() spacing: number;\r\n  @Input() cssClass: string;\r\n  @Input() title: string;\r\n  @Input() template: any;\r\n  @Input() context: any;\r\n\r\n  @ViewChild('caretElm') caretElm;\r\n\r\n  @HostBinding('class')\r\n  get cssClasses(): string {\r\n    let clz = 'ngx-charts-tooltip-content';\r\n    clz += ` position-${this.placement}`;\r\n    clz += ` type-${this.type}`;\r\n    clz += ` ${this.cssClass}`;\r\n    return clz;\r\n  }\r\n\r\n  constructor(public element: ElementRef, private renderer: Renderer2) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(this.position.bind(this));\r\n  }\r\n\r\n  position(): void {\r\n    const nativeElm = this.element.nativeElement;\r\n    const hostDim = this.host.nativeElement.getBoundingClientRect();\r\n\r\n    // if no dims were found, never show\r\n    if (!hostDim.height && !hostDim.width) return;\r\n\r\n    const elmDim = nativeElm.getBoundingClientRect();\r\n    this.checkFlip(hostDim, elmDim);\r\n    this.positionContent(nativeElm, hostDim, elmDim);\r\n\r\n    if (this.showCaret) {\r\n      this.positionCaret(hostDim, elmDim);\r\n    }\r\n\r\n    // animate its entry\r\n    setTimeout(() => this.renderer.addClass(nativeElm, 'animate'), 1);\r\n  }\r\n\r\n  positionContent(nativeElm, hostDim, elmDim): void {\r\n    const { top, left } = PositionHelper.positionContent(this.placement, elmDim, hostDim, this.spacing, this.alignment);\r\n\r\n    this.renderer.setStyle(nativeElm, 'top', `${top}px`);\r\n    this.renderer.setStyle(nativeElm, 'left', `${left}px`);\r\n  }\r\n\r\n  positionCaret(hostDim, elmDim): void {\r\n    const caretElm = this.caretElm.nativeElement;\r\n    const caretDimensions = caretElm.getBoundingClientRect();\r\n    const { top, left } = PositionHelper.positionCaret(\r\n      this.placement,\r\n      elmDim,\r\n      hostDim,\r\n      caretDimensions,\r\n      this.alignment\r\n    );\r\n\r\n    this.renderer.setStyle(caretElm, 'top', `${top}px`);\r\n    this.renderer.setStyle(caretElm, 'left', `${left}px`);\r\n  }\r\n\r\n  checkFlip(hostDim, elmDim): void {\r\n    this.placement = PositionHelper.determinePlacement(this.placement, elmDim, hostDim, this.spacing);\r\n  }\r\n\r\n  @HostListener('window:resize')\r\n  @throttleable(100)\r\n  onWindowResize(): void {\r\n    this.position();\r\n  }\r\n}\r\n","import { ComponentRef, Type } from '@angular/core';\r\nimport { InjectionService } from './injection.service';\r\n\r\nexport interface PartialBindings {\r\n  inputs?: object;\r\n  outputs?: object;\r\n}\r\n\r\nexport abstract class InjectionRegisteryService<T = any> {\r\n  protected abstract type: Type<T>;\r\n\r\n  protected defaults: PartialBindings = {};\r\n  protected components: Map<any, Array<ComponentRef<T>>> = new Map();\r\n\r\n  constructor(public injectionService: InjectionService) {}\r\n\r\n  getByType(type: Type<T> = this.type) {\r\n    return this.components.get(type);\r\n  }\r\n\r\n  create(bindings: object): ComponentRef<T> {\r\n    return this.createByType(this.type, bindings);\r\n  }\r\n\r\n  createByType(type: Type<T>, bindings: PartialBindings): ComponentRef<T> {\r\n    bindings = this.assignDefaults(bindings);\r\n\r\n    const component = this.injectComponent(type, bindings);\r\n    this.register(type, component);\r\n\r\n    return component;\r\n  }\r\n\r\n  destroy(instance: ComponentRef<T>): void {\r\n    const compsByType = this.components.get(instance.componentType);\r\n\r\n    if (compsByType && compsByType.length) {\r\n      const idx = compsByType.indexOf(instance);\r\n\r\n      if (idx > -1) {\r\n        const component = compsByType[idx];\r\n        component.destroy();\r\n        compsByType.splice(idx, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  destroyAll(): void {\r\n    this.destroyByType(this.type);\r\n  }\r\n\r\n  destroyByType(type: Type<T>): void {\r\n    const comps = this.components.get(type);\r\n\r\n    if (comps && comps.length) {\r\n      let i = comps.length - 1;\r\n      while (i >= 0) {\r\n        this.destroy(comps[i--]);\r\n      }\r\n    }\r\n  }\r\n\r\n  protected injectComponent(type: Type<T>, bindings: PartialBindings): ComponentRef<T> {\r\n    return this.injectionService.appendComponent(type, bindings);\r\n  }\r\n\r\n  protected assignDefaults(bindings: PartialBindings): PartialBindings {\r\n    const inputs = { ...this.defaults.inputs };\r\n    const outputs = { ...this.defaults.outputs };\r\n\r\n    if (!bindings.inputs && !bindings.outputs) {\r\n      bindings = { inputs: bindings };\r\n    }\r\n\r\n    if (inputs) {\r\n      bindings.inputs = { ...inputs, ...bindings.inputs };\r\n    }\r\n\r\n    if (outputs) {\r\n      bindings.outputs = { ...outputs, ...bindings.outputs };\r\n    }\r\n\r\n    return bindings;\r\n  }\r\n\r\n  protected register(type: Type<T>, component: ComponentRef<T>): void {\r\n    if (!this.components.has(type)) {\r\n      this.components.set(type, []);\r\n    }\r\n\r\n    const types = this.components.get(type);\r\n    types.push(component);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { InjectionService } from './injection.service';\r\nimport { TooltipContentComponent } from './tooltip.component';\r\nimport { InjectionRegisteryService } from './injection-registery.service';\r\n@Injectable()\r\nexport class TooltipService extends InjectionRegisteryService<TooltipContentComponent> {\r\n  type: any = TooltipContentComponent;\r\n\r\n  constructor(injectionService: InjectionService) {\r\n    super(injectionService);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  ChangeDetectionStrategy,\r\n  EventEmitter,\r\n  Output,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\nimport { TooltipService } from '../tooltip/tooltip.service';\r\n\r\n@Component({\r\n  providers: [TooltipService],\r\n  selector: 'ngx-charts-chart',\r\n  template: `\r\n    <div class=\"ngx-charts-outer\" [style.width.px]=\"view[0]\" [@animationState]=\"'active'\" [@.disabled]=\"!animations\">\r\n      <svg class=\"ngx-charts\" [attr.width]=\"chartWidth\" [attr.height]=\"view[1]\">\r\n        <ng-content></ng-content>\r\n      </svg>\r\n      <ngx-charts-scale-legend\r\n        *ngIf=\"showLegend && legendType === 'scaleLegend'\"\r\n        class=\"chart-legend\"\r\n        [horizontal]=\"legendOptions && legendOptions.position === 'below'\"\r\n        [valueRange]=\"legendOptions.domain\"\r\n        [colors]=\"legendOptions.colors\"\r\n        [height]=\"view[1]\"\r\n        [width]=\"legendWidth\"\r\n      >\r\n      </ngx-charts-scale-legend>\r\n      <ngx-charts-legend\r\n        *ngIf=\"showLegend && legendType === 'legend'\"\r\n        class=\"chart-legend\"\r\n        [horizontal]=\"legendOptions && legendOptions.position === 'below'\"\r\n        [data]=\"legendOptions.domain\"\r\n        [title]=\"legendOptions.title\"\r\n        [colors]=\"legendOptions.colors\"\r\n        [height]=\"view[1]\"\r\n        [width]=\"legendWidth\"\r\n        [activeEntries]=\"activeEntries\"\r\n        (labelClick)=\"legendLabelClick.emit($event)\"\r\n        (labelActivate)=\"legendLabelActivate.emit($event)\"\r\n        (labelDeactivate)=\"legendLabelDeactivate.emit($event)\"\r\n      >\r\n      </ngx-charts-legend>\r\n    </div>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('animationState', [\r\n      transition(':enter', [style({ opacity: 0 }), animate('500ms 100ms', style({ opacity: 1 }))])\r\n    ])\r\n  ]\r\n})\r\nexport class ChartComponent implements OnChanges {\r\n  @Input() view;\r\n  @Input() showLegend = false;\r\n  @Input() legendOptions: any;\r\n\r\n  // remove\r\n  @Input() data;\r\n  @Input() legendData;\r\n  @Input() legendType: any;\r\n  @Input() colors: any;\r\n  @Input() activeEntries: any[];\r\n  @Input() animations: boolean = true;\r\n\r\n  @Output() legendLabelClick: EventEmitter<any> = new EventEmitter();\r\n  @Output() legendLabelActivate: EventEmitter<any> = new EventEmitter();\r\n  @Output() legendLabelDeactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  chartWidth: any;\r\n  title: any;\r\n  legendWidth: any;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    let legendColumns = 0;\r\n    if (this.showLegend) {\r\n      this.legendType = this.getLegendType();\r\n\r\n      if (!this.legendOptions || this.legendOptions.position === 'right') {\r\n        if (this.legendType === 'scaleLegend') {\r\n          legendColumns = 1;\r\n        } else {\r\n          legendColumns = 2;\r\n        }\r\n      }\r\n    }\r\n\r\n    const chartColumns = 12 - legendColumns;\r\n\r\n    this.chartWidth = Math.floor((this.view[0] * chartColumns) / 12.0);\r\n    this.legendWidth =\r\n      !this.legendOptions || this.legendOptions.position === 'right'\r\n        ? Math.floor((this.view[0] * legendColumns) / 12.0)\r\n        : this.chartWidth;\r\n  }\r\n\r\n  getLegendType(): string {\r\n    if (this.legendOptions.scaleType === 'linear') {\r\n      return 'scaleLegend';\r\n    } else {\r\n      return 'legend';\r\n    }\r\n  }\r\n}\r\n","import { Output, EventEmitter, NgZone, Directive, ElementRef } from '@angular/core';\r\n\r\n/**\r\n * Visibility Observer\r\n */\r\n@Directive({\r\n  selector: 'visibility-observer'\r\n})\r\nexport class VisibilityObserver {\r\n  @Output() visible: EventEmitter<any> = new EventEmitter();\r\n\r\n  timeout: any;\r\n  isVisible: boolean = false;\r\n\r\n  constructor(private element: ElementRef, private zone: NgZone) {\r\n    this.runCheck();\r\n  }\r\n\r\n  destroy(): void {\r\n    clearTimeout(this.timeout);\r\n  }\r\n\r\n  onVisibilityChange(): void {\r\n    // trigger zone recalc for columns\r\n    this.zone.run(() => {\r\n      this.isVisible = true;\r\n      this.visible.emit(true);\r\n    });\r\n  }\r\n\r\n  runCheck(): void {\r\n    const check = () => {\r\n      if (!this.element) {\r\n        return;\r\n      }\r\n\r\n      // https://davidwalsh.name/offsetheight-visibility\r\n      const { offsetHeight, offsetWidth } = this.element.nativeElement;\r\n\r\n      if (offsetHeight && offsetWidth) {\r\n        clearTimeout(this.timeout);\r\n        this.onVisibilityChange();\r\n      } else {\r\n        clearTimeout(this.timeout);\r\n        this.zone.runOutsideAngular(() => {\r\n          this.timeout = setTimeout(() => check(), 100);\r\n        });\r\n      }\r\n    };\r\n\r\n    this.zone.runOutsideAngular(() => {\r\n      this.timeout = setTimeout(() => check());\r\n    });\r\n  }\r\n}\r\n","import {\r\n  ElementRef,\r\n  NgZone,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  AfterViewInit,\r\n  OnDestroy,\r\n  OnChanges,\r\n  SimpleChanges\r\n} from '@angular/core';\r\n\r\nimport { fromEvent as observableFromEvent } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { VisibilityObserver } from '../utils/visibility-observer';\r\n\r\n@Component({\r\n  selector: 'base-chart',\r\n  template: ` <div></div> `\r\n})\r\nexport class BaseChartComponent implements OnChanges, AfterViewInit, OnDestroy {\r\n  @Input() results: any;\r\n  @Input() view: [number, number];\r\n  @Input() scheme: any = 'cool';\r\n  @Input() schemeType: string = 'ordinal';\r\n  @Input() customColors: any;\r\n  @Input() animations: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n\r\n  width: number;\r\n  height: number;\r\n  resizeSubscription: any;\r\n  visibilityObserver: VisibilityObserver;\r\n\r\n  constructor(protected chartElement: ElementRef, protected zone: NgZone, protected cd: ChangeDetectorRef) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.bindWindowResizeEvent();\r\n\r\n    // listen for visibility of the element for hidden by default scenario\r\n    this.visibilityObserver = new VisibilityObserver(this.chartElement, this.zone);\r\n    this.visibilityObserver.visible.subscribe(this.update.bind(this));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unbindEvents();\r\n    if (this.visibilityObserver) {\r\n      this.visibilityObserver.visible.unsubscribe();\r\n      this.visibilityObserver.destroy();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    if (this.results) {\r\n      this.results = this.cloneData(this.results);\r\n    } else {\r\n      this.results = [];\r\n    }\r\n\r\n    if (this.view) {\r\n      this.width = this.view[0];\r\n      this.height = this.view[1];\r\n    } else {\r\n      const dims = this.getContainerDims();\r\n      if (dims) {\r\n        this.width = dims.width;\r\n        this.height = dims.height;\r\n      }\r\n    }\r\n\r\n    // default values if width or height are 0 or undefined\r\n    if (!this.width) {\r\n      this.width = 600;\r\n    }\r\n\r\n    if (!this.height) {\r\n      this.height = 400;\r\n    }\r\n\r\n    this.width = Math.floor(this.width);\r\n    this.height = Math.floor(this.height);\r\n\r\n    if (this.cd) {\r\n      this.cd.markForCheck();\r\n    }\r\n  }\r\n\r\n  getContainerDims(): any {\r\n    let width;\r\n    let height;\r\n    const hostElem = this.chartElement.nativeElement;\r\n\r\n    if (hostElem.parentNode !== null) {\r\n      // Get the container dimensions\r\n      const dims = hostElem.parentNode.getBoundingClientRect();\r\n      width = dims.width;\r\n      height = dims.height;\r\n    }\r\n\r\n    if (width && height) {\r\n      return { width, height };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Converts all date objects that appear as name\r\n   * into formatted date strings\r\n   */\r\n  formatDates(): void {\r\n    for (let i = 0; i < this.results.length; i++) {\r\n      const g = this.results[i];\r\n      g.label = g.name;\r\n      if (g.label instanceof Date) {\r\n        g.label = g.label.toLocaleDateString();\r\n      }\r\n\r\n      if (g.series) {\r\n        for (let j = 0; j < g.series.length; j++) {\r\n          const d = g.series[j];\r\n          d.label = d.name;\r\n          if (d.label instanceof Date) {\r\n            d.label = d.label.toLocaleDateString();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  protected unbindEvents(): void {\r\n    if (this.resizeSubscription) {\r\n      this.resizeSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private bindWindowResizeEvent(): void {\r\n    const source = observableFromEvent(window, 'resize');\r\n    const subscription = source.pipe(debounceTime(200)).subscribe(e => {\r\n      this.update();\r\n      if (this.cd) {\r\n        this.cd.markForCheck();\r\n      }\r\n    });\r\n    this.resizeSubscription = subscription;\r\n  }\r\n\r\n  /**\r\n   * Clones the data into a new object\r\n   *\r\n   * @memberOf BaseChart\r\n   */\r\n  private cloneData(data): any {\r\n    const results = [];\r\n\r\n    for (const item of data) {\r\n      const copy = {\r\n        name: item['name']\r\n      };\r\n\r\n      if (item['value'] !== undefined) {\r\n        copy['value'] = item['value'];\r\n      }\r\n\r\n      if (item['series'] !== undefined) {\r\n        copy['series'] = [];\r\n        for (const seriesItem of item['series']) {\r\n          const seriesItemCopy = Object.assign({}, seriesItem);\r\n          copy['series'].push(seriesItemCopy);\r\n        }\r\n      }\r\n\r\n      if (item['extra'] !== undefined) {\r\n        copy['extra'] = JSON.parse(JSON.stringify(item['extra']));\r\n      }\r\n\r\n      results.push(copy);\r\n    }\r\n\r\n    return results;\r\n  }\r\n}\r\n","import { Component, Input, ElementRef, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-axis-label]',\r\n  template: `\r\n    <svg:text\r\n      [attr.stroke-width]=\"strokeWidth\"\r\n      [attr.x]=\"x\"\r\n      [attr.y]=\"y\"\r\n      [attr.text-anchor]=\"textAnchor\"\r\n      [attr.transform]=\"transform\"\r\n    >\r\n      {{ label }}\r\n    </svg:text>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AxisLabelComponent implements OnChanges {\r\n  @Input() orient;\r\n  @Input() label;\r\n  @Input() offset;\r\n  @Input() width;\r\n  @Input() height;\r\n\r\n  x: any;\r\n  y: any;\r\n  transform: any;\r\n  strokeWidth: any;\r\n  textAnchor: any;\r\n  element: ElementRef;\r\n  textHeight = 25;\r\n  margin = 5;\r\n\r\n  constructor(element: ElementRef) {\r\n    this.element = element.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    this.strokeWidth = '0.01';\r\n    this.textAnchor = 'middle';\r\n    this.transform = '';\r\n\r\n    switch (this.orient) {\r\n      case 'top':\r\n        this.y = this.offset;\r\n        this.x = this.width / 2;\r\n        break;\r\n      case 'bottom':\r\n        this.y = this.offset;\r\n        this.x = this.width / 2;\r\n        break;\r\n      case 'left':\r\n        this.y = -(this.offset + this.textHeight + this.margin);\r\n        this.x = -this.height / 2;\r\n        this.transform = 'rotate(270)';\r\n        break;\r\n      case 'right':\r\n        this.y = this.offset + this.margin;\r\n        this.x = -this.height / 2;\r\n        this.transform = 'rotate(270)';\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n}\r\n","export function trimLabel(s, max = 16): string {\r\n  if (typeof s !== 'string') {\r\n    if (typeof s === 'number') {\r\n      return s + '';\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  s = s.trim();\r\n  if (s.length <= max) {\r\n    return s;\r\n  } else {\r\n    return `${s.slice(0, max)}...`;\r\n  }\r\n}\r\n","export function reduceTicks(ticks, maxTicks) {\r\n  if (ticks.length > maxTicks) {\r\n    const reduced = [];\r\n    const modulus = Math.floor(ticks.length / maxTicks);\r\n    for (let i = 0; i < ticks.length; i++) {\r\n      if (i % modulus === 0) {\r\n        reduced.push(ticks[i]);\r\n      }\r\n    }\r\n    ticks = reduced;\r\n  }\r\n\r\n  return ticks;\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  ElementRef,\r\n  ViewChild,\r\n  SimpleChanges,\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { trimLabel } from '../trim-label.helper';\r\nimport { reduceTicks } from './ticks.helper';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-x-axis-ticks]',\r\n  template: `\r\n    <svg:g #ticksel>\r\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"tickTransform(tick)\">\r\n        <title>{{ tickFormat(tick) }}</title>\r\n        <svg:text\r\n          stroke-width=\"0.01\"\r\n          [attr.text-anchor]=\"textAnchor\"\r\n          [attr.transform]=\"textTransform\"\r\n          [style.font-size]=\"'12px'\"\r\n        >\r\n          {{ tickTrim(tickFormat(tick)) }}\r\n        </svg:text>\r\n      </svg:g>\r\n    </svg:g>\r\n\r\n\r\n    <svg:g *ngIf=\"activeTime\">\r\n      <svg:line\r\n        class=\"refline-path gridline-path-horizontal\"\r\n        [attr.x1]=\"activeVal\"\r\n        y1=\"0\"\r\n        style=\"stroke: #000;stroke-dasharray:none;\"\r\n        [attr.x2]=\"activeVal\"\r\n        [attr.y2]=\"gridLineHeight+6\"\r\n        [attr.transform]=\"gridLineTransform()\"\r\n      />\r\n      <svg:text\r\n        class=\"refline-label\"\r\n        [attr.y]=\"-gridLineHeight-8\"\r\n        [attr.x]=\"activeVal\"\r\n        [attr.text-anchor]=\"(activeVal>width-70)?'end':'middle'\"\r\n      >\r\n        {{ activeTime.toLocaleString() }}\r\n      </svg:text>\r\n    </svg:g>\r\n\r\n\r\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"tickTransform(tick)\">\r\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\r\n        <svg:line class=\"gridline-path gridline-path-vertical\" [attr.y1]=\"-gridLineHeight\" y2=\"0\" />\r\n      </svg:g>\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class XAxisTicksComponent implements OnChanges, AfterViewInit {\r\n  @Input() scale;\r\n  @Input() orient;\r\n  @Input() tickArguments = [5];\r\n  @Input() tickValues: any[];\r\n  @Input() tickStroke = '#ccc';\r\n  @Input() trimTicks: boolean = true;\r\n  @Input() maxTickLength: number = 16;\r\n  @Input() tickFormatting;\r\n  @Input() showGridLines = false;\r\n  @Input() gridLineHeight;\r\n  @Input() width;\r\n  @Input() activeTime;\r\n  @Input() rotateTicks: boolean = true;\r\n\r\n  @Output() dimensionsChanged = new EventEmitter();\r\n\r\n  verticalSpacing: number = 20;\r\n  rotateLabels: boolean = false;\r\n  innerTickSize: number = 6;\r\n  outerTickSize: number = 6;\r\n  tickPadding: number = 3;\r\n  textAnchor: string = 'middle';\r\n  maxTicksLength: number = 0;\r\n  maxAllowedLength: number = 16;\r\n  adjustedScale: any;\r\n  textTransform: any;\r\n  ticks: any;\r\n  tickFormat: (o: any) => any;\r\n  height: number = 0;\r\n  activeVal;\r\n\r\n  @ViewChild('ticksel') ticksElement: ElementRef;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => this.updateDims());\r\n  }\r\n\r\n  updateDims(): void {\r\n    const height = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().height, 10);\r\n    if (height !== this.height) {\r\n      this.height = height;\r\n      this.dimensionsChanged.emit({ height });\r\n      setTimeout(() => this.updateDims());\r\n    }\r\n  }\r\n\r\n  update(): void {\r\n    const scale = this.scale;\r\n    this.ticks = this.getTicks();\r\n\r\n    if (this.tickFormatting) {\r\n      this.tickFormat = this.tickFormatting;\r\n    } else if (scale.tickFormat) {\r\n      this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\r\n    } else {\r\n      this.tickFormat = function (d) {\r\n        if (d.constructor.name === 'Date') {\r\n          return d.toLocaleDateString();\r\n        }\r\n        return d.toLocaleString();\r\n      };\r\n    }\r\n\r\n    const angle = this.rotateTicks ? this.getRotationAngle(this.ticks) : null;\r\n\r\n    this.adjustedScale = this.scale.bandwidth\r\n      ? function (d) {\r\n          return this.scale(d) + this.scale.bandwidth() * 0.5;\r\n        }\r\n      : this.scale;\r\n\r\n    this.textTransform = '';\r\n    if (angle && angle !== 0) {\r\n      this.textTransform = `rotate(${angle})`;\r\n      this.textAnchor = 'end';\r\n      this.verticalSpacing = 10;\r\n    } else {\r\n      this.textAnchor = 'middle';\r\n    }\r\n\r\n    if(this.activeTime){\r\n      this.setActiveTime();\r\n    }\r\n    setTimeout(() => this.updateDims());\r\n  }\r\n\r\n  setActiveTime(): void {\r\n    this.activeVal = this.adjustedScale(this.activeTime);\r\n    /*this.activeTimePath = roundedRect(activeVal, this.height+6, 1, 0, 0, [\r\n      false,\r\n      false,\r\n      false,\r\n      false\r\n    ]);*/\r\n  }\r\n  getRotationAngle(ticks): number {\r\n    let angle = 0;\r\n    this.maxTicksLength = 0;\r\n    for (let i = 0; i < ticks.length; i++) {\r\n      const tick = this.tickFormat(ticks[i]).toString();\r\n      let tickLength = tick.length;\r\n      if (this.trimTicks) {\r\n        tickLength = this.tickTrim(tick).length;\r\n      }\r\n\r\n      if (tickLength > this.maxTicksLength) {\r\n        this.maxTicksLength = tickLength;\r\n      }\r\n    }\r\n\r\n    const len = Math.min(this.maxTicksLength, this.maxAllowedLength);\r\n    const charWidth = 8; // need to measure this\r\n    const wordWidth = len * charWidth;\r\n\r\n    let baseWidth = wordWidth;\r\n    const maxBaseWidth = Math.floor(this.width / ticks.length);\r\n\r\n    // calculate optimal angle\r\n    while (baseWidth > maxBaseWidth && angle > -90) {\r\n      angle -= 30;\r\n      baseWidth = Math.cos(angle * (Math.PI / 180)) * wordWidth;\r\n    }\r\n\r\n    return angle;\r\n  }\r\n\r\n  getTicks() {\r\n    let ticks;\r\n    const maxTicks = this.getMaxTicks(20);\r\n    const maxScaleTicks = this.getMaxTicks(100);\r\n\r\n    if (this.tickValues) {\r\n      ticks = this.tickValues;\r\n    } else if (this.scale.ticks) {\r\n      ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\r\n    } else {\r\n      ticks = this.scale.domain();\r\n      ticks = reduceTicks(ticks, maxTicks);\r\n    }\r\n\r\n    return ticks;\r\n  }\r\n\r\n  getMaxTicks(tickWidth: number): number {\r\n    return Math.floor(this.width / tickWidth);\r\n  }\r\n\r\n  tickTransform(tick): string {\r\n    return 'translate(' + this.adjustedScale(tick) + ',' + this.verticalSpacing + ')';\r\n  }\r\n\r\n  gridLineTransform(): string {\r\n    return `translate(0,${-this.verticalSpacing - 5})`;\r\n  }\r\n\r\n  tickTrim(label: string): string {\r\n    return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  SimpleChanges,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  ViewChild,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\n\r\nimport { XAxisTicksComponent } from './x-axis-ticks.component';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-x-axis]',\r\n  template: `\r\n    <svg:g [attr.class]=\"xAxisClassName\" [attr.transform]=\"transform\">\r\n      <svg:g\r\n        ngx-charts-x-axis-ticks\r\n        *ngIf=\"xScale\"\r\n        [trimTicks]=\"trimTicks\"\r\n        [rotateTicks]=\"rotateTicks\"\r\n        [maxTickLength]=\"maxTickLength\"\r\n        [tickFormatting]=\"tickFormatting\"\r\n        [tickArguments]=\"tickArguments\"\r\n        [tickStroke]=\"tickStroke\"\r\n        [scale]=\"xScale\"\r\n        [orient]=\"xOrient\"\r\n        [showGridLines]=\"showGridLines\"\r\n        [gridLineHeight]=\"dims.height\"\r\n        [width]=\"dims.width\"\r\n        [tickValues]=\"ticks\"\r\n        [activeTime]=\"activeTime\"\r\n        (dimensionsChanged)=\"emitTicksHeight($event)\"\r\n      />\r\n      <svg:g\r\n        ngx-charts-axis-label\r\n        *ngIf=\"showLabel\"\r\n        [label]=\"labelText\"\r\n        [offset]=\"labelOffset\"\r\n        [orient]=\"'bottom'\"\r\n        [height]=\"dims.height\"\r\n        [width]=\"dims.width\"\r\n      ></svg:g>\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class XAxisComponent implements OnChanges {\r\n  @Input() xScale;\r\n  @Input() dims;\r\n  @Input() trimTicks: boolean;\r\n  @Input() rotateTicks: boolean = true;\r\n  @Input() maxTickLength: number;\r\n  @Input() tickFormatting;\r\n  @Input() showGridLines = false;\r\n  @Input() showLabel;\r\n  @Input() labelText;\r\n  @Input() ticks: any[];\r\n  @Input() xAxisTickInterval;\r\n  @Input() xAxisTickCount: any;\r\n  @Input() xOrient: string = 'bottom';\r\n  @Input() xAxisOffset: number = 0;\r\n  @Input() activeTime;\r\n\r\n  @Output() dimensionsChanged = new EventEmitter();\r\n\r\n  xAxisClassName: string = 'x axis';\r\n\r\n  tickArguments: any;\r\n  transform: any;\r\n  labelOffset: number = 0;\r\n  fill: string = 'none';\r\n  stroke: string = 'stroke';\r\n  tickStroke: string = '#ccc';\r\n  strokeWidth: string = 'none';\r\n  padding: number = 5;\r\n\r\n  @ViewChild(XAxisTicksComponent) ticksComponent: XAxisTicksComponent;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    this.transform = `translate(0,${this.xAxisOffset + this.padding + this.dims.height})`;\r\n\r\n    if (typeof this.xAxisTickCount !== 'undefined') {\r\n      this.tickArguments = [this.xAxisTickCount];\r\n    }\r\n  }\r\n\r\n  emitTicksHeight({ height }): void {\r\n    const newLabelOffset = height + 25 + 5;\r\n    if (newLabelOffset !== this.labelOffset) {\r\n      this.labelOffset = newLabelOffset;\r\n      setTimeout(() => {\r\n        this.dimensionsChanged.emit({ height });\r\n      }, 0);\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Generates a rounded rectanglar path\r\n *\r\n * @export\r\n * @param x, y, w, h, r, tl, tr, bl, br\r\n */\r\nexport function roundedRect(x, y, w, h, r, [tl, tr, bl, br]: boolean[]) {\r\n  let retval = '';\r\n\r\n  w = Math.floor(w);\r\n  h = Math.floor(h);\r\n\r\n  w = w === 0 ? 1 : w;\r\n  h = h === 0 ? 1 : h;\r\n\r\n  retval = `M${[x + r, y]}`;\r\n  retval += `h${w - 2 * r}`;\r\n\r\n  if (tr) {\r\n    retval += `a${[r, r]} 0 0 1 ${[r, r]}`;\r\n  } else {\r\n    retval += `h${r}v${r}`;\r\n  }\r\n\r\n  retval += `v${h - 2 * r}`;\r\n\r\n  if (br) {\r\n    retval += `a${[r, r]} 0 0 1 ${[-r, r]}`;\r\n  } else {\r\n    retval += `v${r}h${-r}`;\r\n  }\r\n\r\n  retval += `h${2 * r - w}`;\r\n\r\n  if (bl) {\r\n    retval += `a${[r, r]} 0 0 1 ${[-r, -r]}`;\r\n  } else {\r\n    retval += `h${-r}v${-r}`;\r\n  }\r\n\r\n  retval += `v${2 * r - h}`;\r\n\r\n  if (tl) {\r\n    retval += `a${[r, r]} 0 0 1 ${[r, -r]}`;\r\n  } else {\r\n    retval += `v${-r}h${r}`;\r\n  }\r\n\r\n  retval += `z`;\r\n\r\n  return retval;\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  OnChanges,\r\n  ElementRef,\r\n  ViewChild,\r\n  EventEmitter,\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport { trimLabel } from '../trim-label.helper';\r\nimport { reduceTicks } from './ticks.helper';\r\nimport { roundedRect } from '../../common/shape.helper';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-y-axis-ticks]',\r\n  template: `\r\n    <svg:g #ticksel>\r\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"transform(tick)\">\r\n        <title>{{ tickFormat(tick) }}</title>\r\n        <svg:text\r\n          stroke-width=\"0.01\"\r\n          [attr.dy]=\"dy\"\r\n          [attr.x]=\"x1\"\r\n          [attr.y]=\"y1\"\r\n          [attr.text-anchor]=\"textAnchor\"\r\n          [style.font-size]=\"'12px'\"\r\n        >\r\n          {{ tickTrim(tickFormat(tick)) }}\r\n        </svg:text>\r\n      </svg:g>\r\n    </svg:g>\r\n\r\n    <svg:path\r\n      *ngIf=\"referenceLineLength > 1 && refMax && refMin && showRefLines\"\r\n      class=\"reference-area\"\r\n      [attr.d]=\"referenceAreaPath\"\r\n      [attr.transform]=\"gridLineTransform()\"\r\n    />\r\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"transform(tick)\">\r\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\r\n        <svg:line\r\n          *ngIf=\"orient === 'left'\"\r\n          class=\"gridline-path gridline-path-horizontal\"\r\n          x1=\"0\"\r\n          [attr.x2]=\"gridLineWidth\"\r\n        />\r\n        <svg:line\r\n          *ngIf=\"orient === 'right'\"\r\n          class=\"gridline-path gridline-path-horizontal\"\r\n          x1=\"0\"\r\n          [attr.x2]=\"-gridLineWidth\"\r\n        />\r\n      </svg:g>\r\n    </svg:g>\r\n\r\n    <svg:g *ngFor=\"let refLine of referenceLines\">\r\n      <svg:g *ngIf=\"showRefLines\" [attr.transform]=\"transform(refLine.value)\">\r\n        <svg:line\r\n          class=\"refline-path gridline-path-horizontal\"\r\n          x1=\"0\"\r\n          [attr.x2]=\"gridLineWidth\"\r\n          [attr.transform]=\"gridLineTransform()\"\r\n        />\r\n        <svg:g *ngIf=\"showRefLabels\">\r\n          <title>{{ tickTrim(tickFormat(refLine.value)) }}</title>\r\n          <svg:text\r\n            class=\"refline-label\"\r\n            [attr.dy]=\"dy\"\r\n            [attr.y]=\"-6\"\r\n            [attr.x]=\"gridLineWidth\"\r\n            [attr.text-anchor]=\"textAnchor\"\r\n          >\r\n            {{ refLine.name }}\r\n          </svg:text>\r\n        </svg:g>\r\n      </svg:g>\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class YAxisTicksComponent implements OnChanges, AfterViewInit {\r\n  @Input() scale;\r\n  @Input() orient;\r\n  @Input() tickArguments = [5];\r\n  @Input() tickValues: any[];\r\n  @Input() tickStroke = '#ccc';\r\n  @Input() trimTicks: boolean = true;\r\n  @Input() maxTickLength: number = 16;\r\n  @Input() tickFormatting;\r\n  @Input() showGridLines = false;\r\n  @Input() gridLineWidth;\r\n  @Input() height;\r\n  @Input() referenceLines;\r\n  @Input() showRefLabels: boolean = false;\r\n  @Input() showRefLines: boolean = false;\r\n\r\n  @Output() dimensionsChanged = new EventEmitter();\r\n\r\n  innerTickSize: any = 6;\r\n  tickPadding: any = 3;\r\n  tickSpacing: any;\r\n  verticalSpacing: number = 20;\r\n  textAnchor: any = 'middle';\r\n  dy: any;\r\n  x1: any;\r\n  x2: any;\r\n  y1: any;\r\n  y2: any;\r\n  adjustedScale: any;\r\n  transform: (o: any) => string;\r\n  tickFormat: (o: any) => string;\r\n  ticks: any;\r\n  width: number = 0;\r\n  outerTickSize: number = 6;\r\n  rotateLabels: boolean = false;\r\n  refMax: number;\r\n  refMin: number;\r\n  referenceLineLength: number = 0;\r\n  referenceAreaPath: string;\r\n\r\n  @ViewChild('ticksel') ticksElement: ElementRef;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => this.updateDims());\r\n  }\r\n\r\n  updateDims(): void {\r\n    const width = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().width, 10);\r\n    if (width !== this.width) {\r\n      this.width = width;\r\n      this.dimensionsChanged.emit({ width });\r\n      setTimeout(() => this.updateDims());\r\n    }\r\n  }\r\n\r\n  update(): void {\r\n    let scale;\r\n    const sign = this.orient === 'top' || this.orient === 'right' ? -1 : 1;\r\n    this.tickSpacing = Math.max(this.innerTickSize, 0) + this.tickPadding;\r\n\r\n    scale = this.scale;\r\n    this.ticks = this.getTicks();\r\n\r\n    if (this.tickFormatting) {\r\n      this.tickFormat = this.tickFormatting;\r\n    } else if (scale.tickFormat) {\r\n      this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\r\n    } else {\r\n      this.tickFormat = function (d) {\r\n        if (d.constructor.name === 'Date') {\r\n          return d.toLocaleDateString();\r\n        }\r\n        return d.toLocaleString();\r\n      };\r\n    }\r\n\r\n    this.adjustedScale = scale.bandwidth\r\n      ? function (d) {\r\n          return scale(d) + scale.bandwidth() * 0.5;\r\n        }\r\n      : scale;\r\n\r\n    if (this.showRefLines && this.referenceLines) {\r\n      this.setReferencelines();\r\n    }\r\n\r\n    switch (this.orient) {\r\n      case 'top':\r\n        this.transform = function (tick) {\r\n          return 'translate(' + this.adjustedScale(tick) + ',0)';\r\n        };\r\n        this.textAnchor = 'middle';\r\n        this.y2 = this.innerTickSize * sign;\r\n        this.y1 = this.tickSpacing * sign;\r\n        this.dy = sign < 0 ? '0em' : '.71em';\r\n        break;\r\n      case 'bottom':\r\n        this.transform = function (tick) {\r\n          return 'translate(' + this.adjustedScale(tick) + ',0)';\r\n        };\r\n        this.textAnchor = 'middle';\r\n        this.y2 = this.innerTickSize * sign;\r\n        this.y1 = this.tickSpacing * sign;\r\n        this.dy = sign < 0 ? '0em' : '.71em';\r\n        break;\r\n      case 'left':\r\n        this.transform = function (tick) {\r\n          return 'translate(0,' + this.adjustedScale(tick) + ')';\r\n        };\r\n        this.textAnchor = 'end';\r\n        this.x2 = this.innerTickSize * -sign;\r\n        this.x1 = this.tickSpacing * -sign;\r\n        this.dy = '.32em';\r\n        break;\r\n      case 'right':\r\n        this.transform = function (tick) {\r\n          return 'translate(0,' + this.adjustedScale(tick) + ')';\r\n        };\r\n        this.textAnchor = 'start';\r\n        this.x2 = this.innerTickSize * -sign;\r\n        this.x1 = this.tickSpacing * -sign;\r\n        this.dy = '.32em';\r\n        break;\r\n      default:\r\n    }\r\n    setTimeout(() => this.updateDims());\r\n  }\r\n\r\n  setReferencelines(): void {\r\n    this.refMin = this.adjustedScale(\r\n      Math.min.apply(\r\n        null,\r\n        this.referenceLines.map(item => item.value)\r\n      )\r\n    );\r\n    this.refMax = this.adjustedScale(\r\n      Math.max.apply(\r\n        null,\r\n        this.referenceLines.map(item => item.value)\r\n      )\r\n    );\r\n    this.referenceLineLength = this.referenceLines.length;\r\n\r\n    this.referenceAreaPath = roundedRect(0, this.refMax, this.gridLineWidth, this.refMin - this.refMax, 0, [\r\n      false,\r\n      false,\r\n      false,\r\n      false\r\n    ]);\r\n  }\r\n\r\n  getTicks(): any {\r\n    let ticks;\r\n    const maxTicks = this.getMaxTicks(20);\r\n    const maxScaleTicks = this.getMaxTicks(50);\r\n\r\n    if (this.tickValues) {\r\n      ticks = this.tickValues;\r\n    } else if (this.scale.ticks) {\r\n      ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\r\n    } else {\r\n      ticks = this.scale.domain();\r\n      ticks = reduceTicks(ticks, maxTicks);\r\n    }\r\n\r\n    return ticks;\r\n  }\r\n\r\n  getMaxTicks(tickHeight: number): number {\r\n    return Math.floor(this.height / tickHeight);\r\n  }\r\n\r\n  tickTransform(tick): string {\r\n    return `translate(${this.adjustedScale(tick)},${this.verticalSpacing})`;\r\n  }\r\n\r\n  gridLineTransform(): string {\r\n    return `translate(5,0)`;\r\n  }\r\n\r\n  tickTrim(label: string): string {\r\n    return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  ViewChild,\r\n  SimpleChanges,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { YAxisTicksComponent } from './y-axis-ticks.component';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-y-axis]',\r\n  template: `\r\n    <svg:g [attr.class]=\"yAxisClassName\" [attr.transform]=\"transform\">\r\n      <svg:g\r\n        ngx-charts-y-axis-ticks\r\n        *ngIf=\"yScale\"\r\n        [trimTicks]=\"trimTicks\"\r\n        [maxTickLength]=\"maxTickLength\"\r\n        [tickFormatting]=\"tickFormatting\"\r\n        [tickArguments]=\"tickArguments\"\r\n        [tickValues]=\"ticks\"\r\n        [tickStroke]=\"tickStroke\"\r\n        [scale]=\"yScale\"\r\n        [orient]=\"yOrient\"\r\n        [showGridLines]=\"showGridLines\"\r\n        [gridLineWidth]=\"dims.width\"\r\n        [referenceLines]=\"referenceLines\"\r\n        [showRefLines]=\"showRefLines\"\r\n        [showRefLabels]=\"showRefLabels\"\r\n        [height]=\"dims.height\"\r\n        (dimensionsChanged)=\"emitTicksWidth($event)\"\r\n      />\r\n\r\n      <svg:g\r\n        ngx-charts-axis-label\r\n        *ngIf=\"showLabel\"\r\n        [label]=\"labelText\"\r\n        [offset]=\"labelOffset\"\r\n        [orient]=\"yOrient\"\r\n        [height]=\"dims.height\"\r\n        [width]=\"dims.width\"\r\n      ></svg:g>\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class YAxisComponent implements OnChanges {\r\n  @Input() yScale;\r\n  @Input() dims;\r\n  @Input() trimTicks: boolean;\r\n  @Input() maxTickLength: number;\r\n  @Input() tickFormatting;\r\n  @Input() ticks: any[];\r\n  @Input() showGridLines = false;\r\n  @Input() showLabel;\r\n  @Input() labelText;\r\n  @Input() yAxisTickInterval;\r\n  @Input() yAxisTickCount: any;\r\n  @Input() yOrient: string = 'left';\r\n  @Input() referenceLines;\r\n  @Input() showRefLines;\r\n  @Input() showRefLabels;\r\n  @Input() yAxisOffset: number = 0;\r\n  @Output() dimensionsChanged = new EventEmitter();\r\n\r\n  yAxisClassName: string = 'y axis';\r\n  tickArguments: any;\r\n  offset: any;\r\n  transform: any;\r\n  labelOffset: number = 15;\r\n  fill: string = 'none';\r\n  stroke: string = '#CCC';\r\n  tickStroke: string = '#CCC';\r\n  strokeWidth: number = 1;\r\n  padding: number = 5;\r\n\r\n  @ViewChild(YAxisTicksComponent) ticksComponent: YAxisTicksComponent;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    this.offset = -(this.yAxisOffset + this.padding);\r\n    if (this.yOrient === 'right') {\r\n      this.labelOffset = 65;\r\n      this.transform = `translate(${this.offset + this.dims.width} , 0)`;\r\n    } else {\r\n      this.offset = this.offset;\r\n      this.transform = `translate(${this.offset} , 0)`;\r\n    }\r\n\r\n    if (this.yAxisTickCount !== undefined) {\r\n      this.tickArguments = [this.yAxisTickCount];\r\n    }\r\n  }\r\n\r\n  emitTicksWidth({ width }): void {\r\n    if (width !== this.labelOffset && this.yOrient === 'right') {\r\n      this.labelOffset = width + this.labelOffset;\r\n      setTimeout(() => {\r\n        this.dimensionsChanged.emit({ width });\r\n      }, 0);\r\n    } else if (width !== this.labelOffset) {\r\n      this.labelOffset = width;\r\n      setTimeout(() => {\r\n        this.dimensionsChanged.emit({ width });\r\n      }, 0);\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { AxisLabelComponent } from './axis-label.component';\r\nimport { XAxisComponent } from './x-axis.component';\r\nimport { XAxisTicksComponent } from './x-axis-ticks.component';\r\nimport { YAxisComponent } from './y-axis.component';\r\nimport { YAxisTicksComponent } from './y-axis-ticks.component';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent],\r\n  exports: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent]\r\n})\r\nexport class AxesModule {}\r\n","export enum StyleTypes {\r\n  popover = 'popover' as any,\r\n  tooltip = 'tooltip' as any\r\n}\r\n","export enum AlignmentTypes {\r\n  left = 'left' as any,\r\n  center = 'center' as any,\r\n  right = 'right' as any\r\n}\r\n","export enum ShowTypes {\r\n  all = 'all' as any,\r\n  focus = 'focus' as any,\r\n  mouseover = 'mouseover' as any\r\n}\r\n","import {\r\n  Directive,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  HostListener,\r\n  ViewContainerRef,\r\n  Renderer2,\r\n  OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { PlacementTypes } from './position';\r\nimport { StyleTypes } from './style.type';\r\nimport { AlignmentTypes } from './alignment.type';\r\nimport { ShowTypes } from './show.type';\r\n\r\nimport { TooltipService } from './tooltip.service';\r\n\r\n@Directive({ selector: '[ngx-tooltip]' })\r\nexport class TooltipDirective implements OnDestroy {\r\n  @Input() tooltipCssClass: string = '';\r\n  @Input() tooltipTitle: string = '';\r\n  @Input() tooltipAppendToBody: boolean = true;\r\n  @Input() tooltipSpacing: number = 10;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() tooltipShowCaret: boolean = true;\r\n  @Input() tooltipPlacement: PlacementTypes = PlacementTypes.top;\r\n  @Input() tooltipAlignment: AlignmentTypes = AlignmentTypes.center;\r\n  @Input() tooltipType: StyleTypes = StyleTypes.popover;\r\n  @Input() tooltipCloseOnClickOutside: boolean = true;\r\n  @Input() tooltipCloseOnMouseLeave: boolean = true;\r\n  @Input() tooltipHideTimeout: number = 300;\r\n  @Input() tooltipShowTimeout: number = 100;\r\n  @Input() tooltipTemplate: any;\r\n  @Input() tooltipShowEvent: ShowTypes = ShowTypes.all;\r\n  @Input() tooltipContext: any;\r\n  @Input() tooltipImmediateExit: boolean = false;\r\n\r\n  @Output() show = new EventEmitter();\r\n  @Output() hide = new EventEmitter();\r\n\r\n  private get listensForFocus(): boolean {\r\n    return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.focus;\r\n  }\r\n\r\n  private get listensForHover(): boolean {\r\n    return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.mouseover;\r\n  }\r\n\r\n  private component: any;\r\n  private timeout: any;\r\n  private mouseLeaveContentEvent: any;\r\n  private mouseEnterContentEvent: any;\r\n  private documentClickEvent: any;\r\n\r\n  constructor(\r\n    private tooltipService: TooltipService,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private renderer: Renderer2\r\n  ) {}\r\n\r\n  ngOnDestroy(): void {\r\n    this.hideTooltip(true);\r\n  }\r\n\r\n  @HostListener('focusin')\r\n  onFocus(): void {\r\n    if (this.listensForFocus) {\r\n      this.showTooltip();\r\n    }\r\n  }\r\n\r\n  @HostListener('blur')\r\n  onBlur(): void {\r\n    if (this.listensForFocus) {\r\n      this.hideTooltip(true);\r\n    }\r\n  }\r\n\r\n  @HostListener('mouseenter')\r\n  onMouseEnter(): void {\r\n    if (this.listensForHover) {\r\n      this.showTooltip();\r\n    }\r\n  }\r\n\r\n  @HostListener('mouseleave', ['$event.target'])\r\n  onMouseLeave(target): void {\r\n    if (this.listensForHover && this.tooltipCloseOnMouseLeave) {\r\n      clearTimeout(this.timeout);\r\n\r\n      if (this.component) {\r\n        const contentDom = this.component.instance.element.nativeElement;\r\n        const contains = contentDom.contains(target);\r\n        if (contains) return;\r\n      }\r\n\r\n      this.hideTooltip(this.tooltipImmediateExit);\r\n    }\r\n  }\r\n\r\n  @HostListener('click')\r\n  onMouseClick() {\r\n    if (this.listensForHover) {\r\n      this.hideTooltip(true);\r\n    }\r\n  }\r\n\r\n  showTooltip(immediate?: boolean): void {\r\n    if (this.component || this.tooltipDisabled) return;\r\n\r\n    const time = immediate\r\n      ? 0\r\n      : this.tooltipShowTimeout + (navigator.userAgent.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/) ? 300 : 0);\r\n\r\n    clearTimeout(this.timeout);\r\n    this.timeout = setTimeout(() => {\r\n      this.tooltipService.destroyAll();\r\n\r\n      const options = this.createBoundOptions();\r\n      this.component = this.tooltipService.create(options);\r\n\r\n      // add a tiny timeout to avoid event re-triggers\r\n      setTimeout(() => {\r\n        if (this.component) {\r\n          this.addHideListeners(this.component.instance.element.nativeElement);\r\n        }\r\n      }, 10);\r\n\r\n      this.show.emit(true);\r\n    }, time);\r\n  }\r\n\r\n  addHideListeners(tooltip): void {\r\n    // on mouse enter, cancel the hide triggered by the leave\r\n    this.mouseEnterContentEvent = this.renderer.listen(tooltip, 'mouseenter', () => {\r\n      clearTimeout(this.timeout);\r\n    });\r\n\r\n    // content mouse leave listener\r\n    if (this.tooltipCloseOnMouseLeave) {\r\n      this.mouseLeaveContentEvent = this.renderer.listen(tooltip, 'mouseleave', () => {\r\n        this.hideTooltip(this.tooltipImmediateExit);\r\n      });\r\n    }\r\n\r\n    // content close on click outside\r\n    if (this.tooltipCloseOnClickOutside) {\r\n      this.documentClickEvent = this.renderer.listen(document, 'click', event => {\r\n        const contains = tooltip.contains(event.target);\r\n        if (!contains) this.hideTooltip();\r\n      });\r\n    }\r\n  }\r\n\r\n  hideTooltip(immediate: boolean = false): void {\r\n    if (!this.component) return;\r\n\r\n    const destroyFn = () => {\r\n      // remove events\r\n      if (this.mouseLeaveContentEvent) this.mouseLeaveContentEvent();\r\n      if (this.mouseEnterContentEvent) this.mouseEnterContentEvent();\r\n      if (this.documentClickEvent) this.documentClickEvent();\r\n\r\n      // emit events\r\n      this.hide.emit(true);\r\n\r\n      // destroy component\r\n      this.tooltipService.destroy(this.component);\r\n      this.component = undefined;\r\n    };\r\n\r\n    clearTimeout(this.timeout);\r\n    if (!immediate) {\r\n      this.timeout = setTimeout(destroyFn, this.tooltipHideTimeout);\r\n    } else {\r\n      destroyFn();\r\n    }\r\n  }\r\n\r\n  private createBoundOptions(): any {\r\n    return {\r\n      title: this.tooltipTitle,\r\n      template: this.tooltipTemplate,\r\n      host: this.viewContainerRef.element,\r\n      placement: this.tooltipPlacement,\r\n      alignment: this.tooltipAlignment,\r\n      type: this.tooltipType,\r\n      showCaret: this.tooltipShowCaret,\r\n      cssClass: this.tooltipCssClass,\r\n      spacing: this.tooltipSpacing,\r\n      context: this.tooltipContext\r\n    };\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TooltipDirective } from './tooltip.directive';\r\nimport { TooltipContentComponent } from './tooltip.component';\r\nimport { TooltipService } from './tooltip.service';\r\n\r\nimport { InjectionService } from './injection.service';\r\n\r\n@NgModule({\r\n  declarations: [TooltipContentComponent, TooltipDirective],\r\n  providers: [InjectionService, TooltipService],\r\n  exports: [TooltipContentComponent, TooltipDirective],\r\n  imports: [CommonModule],\r\n  entryComponents: [TooltipContentComponent]\r\n})\r\nexport class TooltipModule {}\r\n","/**\r\n * Formats a label given a date, number or string.\r\n *\r\n * @export\r\n */\r\nexport function formatLabel(label: any): string {\r\n  if (label instanceof Date) {\r\n    label = label.toLocaleDateString();\r\n  } else {\r\n    label = label.toLocaleString();\r\n  }\r\n\r\n  return label;\r\n}\r\n\r\n/**\r\n * Escapes a label.\r\n *\r\n * @export\r\n */\r\nexport function escapeLabel(label: any): string {\r\n  return label.toLocaleString().replace(/[&'`\"<>]/g, match => {\r\n    return {\r\n      '&': '&amp;',\r\n      // tslint:disable-next-line: quotemark\r\n      \"'\": '&#x27;',\r\n      '`': '&#x60;',\r\n      '\"': '&quot;',\r\n      '<': '&lt;',\r\n      '>': '&gt;'\r\n    }[match];\r\n  });\r\n}\r\n","const cache = {};\r\n\r\n/**\r\n * Generates a short id.\r\n *\r\n * Description:\r\n *   A 4-character alphanumeric sequence (364 = 1.6 million)\r\n *   This should only be used for JavaScript specific models.\r\n *   http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\r\n *\r\n *   Example: `ebgf`\r\n */\r\nexport function id(): string {\r\n  let newId = ('0000' + ((Math.random() * Math.pow(36, 4)) << 0).toString(36)).slice(-4);\r\n\r\n  // append a 'a' because neo gets mad\r\n  newId = `a${newId}`;\r\n\r\n  // ensure not already used\r\n  if (!cache[newId]) {\r\n    cache[newId] = true;\r\n    return newId;\r\n  }\r\n\r\n  return id();\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  SimpleChanges,\r\n  EventEmitter,\r\n  OnChanges,\r\n  OnInit,\r\n  ChangeDetectionStrategy,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\nimport { formatLabel, escapeLabel } from '../common/label.helper';\r\nimport { id } from '../utils/id';\r\nimport { ColorHelper } from '../common/color.helper';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-circle-series]',\r\n  template: `\r\n    <svg:g *ngIf=\"circle\">\r\n      <defs>\r\n        <svg:g\r\n          ngx-charts-svg-linear-gradient\r\n          orientation=\"vertical\"\r\n          [name]=\"gradientId\"\r\n          [stops]=\"circle.gradientStops\"\r\n        />\r\n      </defs>\r\n      <svg:rect\r\n        *ngIf=\"barVisible && type === 'standard'\"\r\n        [@animationState]=\"'active'\"\r\n        [attr.x]=\"circle.cx - circle.radius\"\r\n        [attr.y]=\"circle.cy\"\r\n        [attr.width]=\"circle.radius * 2\"\r\n        [attr.height]=\"circle.height\"\r\n        [attr.fill]=\"gradientFill\"\r\n        class=\"tooltip-bar\"\r\n      />\r\n      <svg:g\r\n        ngx-charts-circle\r\n        class=\"circle\"\r\n        [cx]=\"circle.cx\"\r\n        [cy]=\"circle.cy\"\r\n        [r]=\"circle.radius\"\r\n        [fill]=\"circle.color\"\r\n        [class.active]=\"isActive({ name: circle.seriesName })\"\r\n        [pointerEvents]=\"circle.value === 0 ? 'none' : 'all'\"\r\n        [data]=\"circle.value\"\r\n        [classNames]=\"circle.classNames\"\r\n        (select)=\"onClick(circle.data)\"\r\n        (activate)=\"activateCircle()\"\r\n        (deactivate)=\"deactivateCircle()\"\r\n        ngx-tooltip\r\n        [tooltipDisabled]=\"tooltipDisabled\"\r\n        [tooltipPlacement]=\"'top'\"\r\n        [tooltipType]=\"'tooltip'\"\r\n        [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\r\n        [tooltipTemplate]=\"tooltipTemplate\"\r\n        [tooltipContext]=\"circle.data\"\r\n      />\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('animationState', [\r\n      transition(':enter', [\r\n        style({\r\n          opacity: 0\r\n        }),\r\n        animate(250, style({ opacity: 1 }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class CircleSeriesComponent implements OnChanges, OnInit {\r\n  @Input() data;\r\n  @Input() type = 'standard';\r\n  @Input() xScale;\r\n  @Input() yScale;\r\n  @Input() colors: ColorHelper;\r\n  @Input() scaleType;\r\n  @Input() visibleValue;\r\n  @Input() activeEntries: any[];\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() tooltipTemplate: TemplateRef<any>;\r\n\r\n  @Output() select = new EventEmitter();\r\n  @Output() activate = new EventEmitter();\r\n  @Output() deactivate = new EventEmitter();\r\n\r\n  areaPath: any;\r\n  circle: any; // active circle\r\n  barVisible: boolean = false;\r\n  gradientId: string;\r\n  gradientFill: string;\r\n\r\n  ngOnInit() {\r\n    this.gradientId = 'grad' + id().toString();\r\n    this.gradientFill = `url(#${this.gradientId})`;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    this.circle = this.getActiveCircle();\r\n  }\r\n\r\n  getActiveCircle(): {} {\r\n    const indexActiveDataPoint = this.data.series.findIndex(d => {\r\n      const label = d.name;\r\n      return label && this.visibleValue && label.toString() === this.visibleValue.toString() && d.value !== undefined;\r\n    });\r\n\r\n    if (indexActiveDataPoint === -1) {\r\n      // No valid point is 'active/hovered over' at this moment.\r\n      return undefined;\r\n    }\r\n\r\n    return this.mapDataPointToCircle(this.data.series[indexActiveDataPoint], indexActiveDataPoint);\r\n  }\r\n\r\n  mapDataPointToCircle(d: any, i: number): any {\r\n    const seriesName = this.data.name;\r\n\r\n    const value = d.value;\r\n    const label = d.name;\r\n    const tooltipLabel = formatLabel(label);\r\n\r\n    let cx;\r\n    if (this.scaleType === 'time') {\r\n      cx = this.xScale(label);\r\n    } else if (this.scaleType === 'linear') {\r\n      cx = this.xScale(Number(label));\r\n    } else {\r\n      cx = this.xScale(label);\r\n    }\r\n\r\n    const cy = this.yScale(this.type === 'standard' ? value : d.d1);\r\n    const radius = 5;\r\n    const height = this.yScale.range()[0] - cy;\r\n    const opacity = 1;\r\n\r\n    let color;\r\n    if (this.colors.scaleType === 'linear') {\r\n      if (this.type === 'standard') {\r\n        color = this.colors.getColor(value);\r\n      } else {\r\n        color = this.colors.getColor(d.d1);\r\n      }\r\n    } else {\r\n      color = this.colors.getColor(seriesName);\r\n    }\r\n\r\n    const data = Object.assign({}, d, {\r\n      series: seriesName,\r\n      value,\r\n      name: label\r\n    });\r\n\r\n    return {\r\n      classNames: [`circle-data-${i}`],\r\n      value,\r\n      label,\r\n      data,\r\n      cx,\r\n      cy,\r\n      radius,\r\n      height,\r\n      tooltipLabel,\r\n      color,\r\n      opacity,\r\n      seriesName,\r\n      gradientStops: this.getGradientStops(color),\r\n      min: d.min,\r\n      max: d.max\r\n    };\r\n  }\r\n\r\n  getTooltipText({ tooltipLabel, value, seriesName, min, max }): string {\r\n    return `\r\n      <span class=\"tooltip-label\">${escapeLabel(seriesName)} â¢ ${escapeLabel(tooltipLabel)}</span>\r\n      <span class=\"tooltip-val\">${value.toLocaleString()}${this.getTooltipMinMaxText(min, max)}</span>\r\n    `;\r\n  }\r\n\r\n  getTooltipMinMaxText(min: any, max: any) {\r\n    if (min !== undefined || max !== undefined) {\r\n      let result = ' (';\r\n      if (min !== undefined) {\r\n        if (max === undefined) {\r\n          result += 'â¥';\r\n        }\r\n        result += min.toLocaleString();\r\n        if (max !== undefined) {\r\n          result += ' - ';\r\n        }\r\n      } else if (max !== undefined) {\r\n        result += 'â¤';\r\n      }\r\n      if (max !== undefined) {\r\n        result += max.toLocaleString();\r\n      }\r\n      result += ')';\r\n      return result;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  getGradientStops(color) {\r\n    return [\r\n      {\r\n        offset: 0,\r\n        color,\r\n        opacity: 0.2\r\n      },\r\n      {\r\n        offset: 100,\r\n        color,\r\n        opacity: 1\r\n      }\r\n    ];\r\n  }\r\n\r\n  onClick(data): void {\r\n    this.select.emit(data);\r\n  }\r\n\r\n  isActive(entry): boolean {\r\n    if (!this.activeEntries) return false;\r\n    const item = this.activeEntries.find(d => {\r\n      return entry.name === d.name;\r\n    });\r\n    return item !== undefined;\r\n  }\r\n\r\n  activateCircle(): void {\r\n    this.barVisible = true;\r\n    this.activate.emit({ name: this.data.name });\r\n  }\r\n\r\n  deactivateCircle(): void {\r\n    this.barVisible = false;\r\n    this.circle.opacity = 0;\r\n    this.deactivate.emit({ name: this.data.name });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  SimpleChanges,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  ChangeDetectionStrategy,\r\n  HostListener\r\n} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-circle]',\r\n  template: `\r\n    <svg:circle\r\n      [attr.cx]=\"cx\"\r\n      [attr.cy]=\"cy\"\r\n      [attr.r]=\"r\"\r\n      [attr.fill]=\"fill\"\r\n      [attr.stroke]=\"stroke\"\r\n      [attr.opacity]=\"circleOpacity\"\r\n      [attr.class]=\"classNames\"\r\n      [attr.pointer-events]=\"pointerEvents\"\r\n    />\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CircleComponent implements OnChanges {\r\n  @Input() cx;\r\n  @Input() cy;\r\n  @Input() r;\r\n  @Input() fill;\r\n  @Input() stroke;\r\n  @Input() data;\r\n  @Input() classNames;\r\n  @Input() circleOpacity;\r\n  @Input() pointerEvents;\r\n\r\n  @Output() select = new EventEmitter();\r\n  @Output() activate = new EventEmitter();\r\n  @Output() deactivate = new EventEmitter();\r\n\r\n  @HostListener('click')\r\n  onClick() {\r\n    this.select.emit(this.data);\r\n  }\r\n\r\n  @HostListener('mouseenter')\r\n  onMouseEnter(): void {\r\n    this.activate.emit(this.data);\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  onMouseLeave(): void {\r\n    this.deactivate.emit(this.data);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.classNames = Array.isArray(this.classNames) ? this.classNames.join(' ') : '';\r\n    this.classNames += 'circle';\r\n  }\r\n}\r\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-grid-panel]',\r\n  template: `\r\n    <svg:rect [attr.height]=\"height\" [attr.width]=\"width\" [attr.x]=\"x\" [attr.y]=\"y\" stroke=\"none\" class=\"gridpanel\" />\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GridPanelComponent {\r\n  @Input() path;\r\n  @Input() width;\r\n  @Input() height;\r\n  @Input() x;\r\n  @Input() y;\r\n}\r\n","import { Component, SimpleChanges, Input, OnChanges, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-grid-panel-series]',\r\n  template: `\r\n    <svg:g\r\n      ngx-charts-grid-panel\r\n      *ngFor=\"let gridPanel of gridPanels\"\r\n      [height]=\"gridPanel.height\"\r\n      [width]=\"gridPanel.width\"\r\n      [x]=\"gridPanel.x\"\r\n      [y]=\"gridPanel.y\"\r\n      [class.grid-panel]=\"true\"\r\n      [class.odd]=\"gridPanel.class === 'odd'\"\r\n      [class.even]=\"gridPanel.class === 'even'\"\r\n    ></svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GridPanelSeriesComponent implements OnChanges {\r\n  gridPanels: any[];\r\n\r\n  @Input()\r\n  data;\r\n\r\n  @Input()\r\n  dims;\r\n\r\n  @Input()\r\n  xScale;\r\n\r\n  @Input()\r\n  yScale;\r\n\r\n  @Input()\r\n  orient;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    this.gridPanels = this.getGridPanels();\r\n  }\r\n\r\n  getGridPanels(): any[] {\r\n    return this.data.map(d => {\r\n      let offset;\r\n      let width;\r\n      let height;\r\n      let x;\r\n      let y;\r\n      let className = 'odd';\r\n\r\n      if (this.orient === 'vertical') {\r\n        const position: number = this.xScale(d.name);\r\n        const positionIndex = Number.parseInt((position / this.xScale.step()).toString(), 10);\r\n\r\n        if (positionIndex % 2 === 1) {\r\n          className = 'even';\r\n        }\r\n        offset = this.xScale.bandwidth() * this.xScale.paddingInner();\r\n        width = this.xScale.bandwidth() + offset;\r\n        height = this.dims.height;\r\n        x = this.xScale(d.name) - offset / 2;\r\n        y = 0;\r\n      } else if (this.orient === 'horizontal') {\r\n        const position = this.yScale(d.name);\r\n        const positionIndex = Number.parseInt((position / this.yScale.step()).toString(), 10);\r\n\r\n        if (positionIndex % 2 === 1) {\r\n          className = 'even';\r\n        }\r\n        offset = this.yScale.bandwidth() * this.yScale.paddingInner();\r\n\r\n        width = this.dims.width;\r\n        height = this.yScale.bandwidth() + offset;\r\n        x = 0;\r\n        y = this.yScale(d.name) - offset / 2;\r\n      }\r\n\r\n      return {\r\n        name: d.name,\r\n        class: className,\r\n        height,\r\n        width,\r\n        x,\r\n        y\r\n      };\r\n    });\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-svg-linear-gradient]',\r\n  template: `\r\n    <svg:linearGradient [id]=\"name\" [attr.x1]=\"x1\" [attr.y1]=\"y1\" [attr.x2]=\"x2\" [attr.y2]=\"y2\">\r\n      <svg:stop\r\n        *ngFor=\"let stop of stops\"\r\n        [attr.offset]=\"stop.offset + '%'\"\r\n        [style.stop-color]=\"stop.color\"\r\n        [style.stop-opacity]=\"stop.opacity\"\r\n      />\r\n    </svg:linearGradient>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SvgLinearGradientComponent implements OnChanges {\r\n  @Input() orientation = 'vertical';\r\n  @Input() name;\r\n  @Input() stops: any[];\r\n\r\n  x1: any;\r\n  x2: any;\r\n  y1: any;\r\n  y2: any;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.x1 = '0%';\r\n    this.x2 = '0%';\r\n    this.y1 = '0%';\r\n    this.y2 = '0%';\r\n\r\n    if (this.orientation === 'horizontal') {\r\n      this.x2 = '100%';\r\n    } else if (this.orientation === 'vertical') {\r\n      this.y1 = '100%';\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-svg-radial-gradient]',\r\n  template: `\r\n    <svg:radialGradient [id]=\"name\" [attr.cx]=\"cx\" [attr.cy]=\"cy\" [attr.r]=\"r\" gradientUnits=\"userSpaceOnUse\">\r\n      <svg:stop\r\n        *ngFor=\"let stop of stops\"\r\n        [attr.offset]=\"stop.offset + '%'\"\r\n        [style.stop-color]=\"stop.color\"\r\n        [style.stop-opacity]=\"stop.opacity\"\r\n      />\r\n    </svg:radialGradient>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SvgRadialGradientComponent implements OnChanges {\r\n  @Input() color: string;\r\n  @Input() name: string;\r\n  @Input() startOpacity: number;\r\n  @Input() endOpacity = 1;\r\n  @Input() cx: number = 0;\r\n  @Input() cy: number = 0;\r\n\r\n  @Input()\r\n  get stops(): any[] {\r\n    return this.stopsInput || this.stopsDefault;\r\n  }\r\n\r\n  set stops(value: any[]) {\r\n    this.stopsInput = value;\r\n  }\r\n\r\n  r: string;\r\n\r\n  private stopsInput: any[];\r\n  private stopsDefault: any[];\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.r = '30%';\r\n    if ('color' in changes || 'startOpacity' in changes || 'endOpacity' in changes) {\r\n      this.stopsDefault = [\r\n        {\r\n          offset: 0,\r\n          color: this.color,\r\n          opacity: this.startOpacity\r\n        },\r\n        {\r\n          offset: 100,\r\n          color: this.color,\r\n          opacity: this.endOpacity\r\n        }\r\n      ];\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  SimpleChanges,\r\n  EventEmitter,\r\n  ElementRef,\r\n  OnChanges,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { select } from 'd3-selection';\r\nimport { id } from '../utils/id';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-area]',\r\n  template: `\r\n    <svg:defs *ngIf=\"gradient\">\r\n      <svg:g ngx-charts-svg-linear-gradient orientation=\"vertical\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\r\n    </svg:defs>\r\n    <svg:path class=\"area\" [attr.d]=\"areaPath\" [attr.fill]=\"gradient ? gradientFill : fill\" [style.opacity]=\"opacity\" />\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AreaComponent implements OnChanges {\r\n  @Input() data;\r\n  @Input() path;\r\n  @Input() startingPath;\r\n  @Input() fill;\r\n  @Input() opacity = 1;\r\n  @Input() startOpacity = 0.5;\r\n  @Input() endOpacity = 1;\r\n  @Input() activeLabel;\r\n  @Input() gradient: boolean = false;\r\n  @Input() stops: any[];\r\n  @Input() animations: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n\r\n  element: HTMLElement;\r\n  gradientId: string;\r\n  gradientFill: string;\r\n  areaPath: string;\r\n  initialized: boolean = false;\r\n  gradientStops: any[];\r\n  hasGradient: boolean = false;\r\n\r\n  constructor(element: ElementRef) {\r\n    this.element = element.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (!this.initialized) {\r\n      this.loadAnimation();\r\n      this.initialized = true;\r\n    } else {\r\n      this.update();\r\n    }\r\n  }\r\n\r\n  update(): void {\r\n    this.gradientId = 'grad' + id().toString();\r\n    this.gradientFill = `url(#${this.gradientId})`;\r\n\r\n    if (this.gradient || this.stops) {\r\n      this.gradientStops = this.getGradient();\r\n      this.hasGradient = true;\r\n    } else {\r\n      this.hasGradient = false;\r\n    }\r\n\r\n    this.updatePathEl();\r\n  }\r\n\r\n  loadAnimation(): void {\r\n    this.areaPath = this.startingPath;\r\n    setTimeout(this.update.bind(this), 100);\r\n  }\r\n\r\n  updatePathEl(): void {\r\n    const node = select(this.element).select('.area');\r\n\r\n    if (this.animations) {\r\n      node.transition().duration(750).attr('d', this.path);\r\n    } else {\r\n      node.attr('d', this.path);\r\n    }\r\n  }\r\n\r\n  getGradient() {\r\n    if (this.stops) {\r\n      return this.stops;\r\n    }\r\n\r\n    return [\r\n      {\r\n        offset: 0,\r\n        color: this.fill,\r\n        opacity: this.startOpacity\r\n      },\r\n      {\r\n        offset: 100,\r\n        color: this.fill,\r\n        opacity: this.endOpacity\r\n      }\r\n    ];\r\n  }\r\n}\r\n","// Robert Penner's easeOutExpo\r\nfunction easeOutExpo(t, b, c, d) {\r\n  return (c * (-Math.pow(2, (-10 * t) / d) + 1) * 1024) / 1023 + b;\r\n}\r\n\r\n/**\r\n * Counts from a number to the end incrementally.\r\n */\r\nexport function count(countFrom, countTo, countDecimals, countDuration, callback) {\r\n  const startVal = Number(countFrom);\r\n  const endVal = Number(countTo);\r\n  const countDown = startVal > endVal;\r\n  const decimals = Math.max(0, countDecimals);\r\n  const dec = Math.pow(10, decimals);\r\n  const duration = Number(countDuration) * 1000;\r\n  let startTime;\r\n\r\n  function runCount(timestamp) {\r\n    let frameVal;\r\n    const progress = timestamp - startTime;\r\n\r\n    if (countDown) {\r\n      frameVal = startVal - easeOutExpo(progress, 0, startVal - endVal, duration);\r\n    } else {\r\n      frameVal = easeOutExpo(progress, startVal, endVal - startVal, duration);\r\n    }\r\n\r\n    if (countDown) {\r\n      frameVal = frameVal < endVal ? endVal : frameVal;\r\n    } else {\r\n      frameVal = frameVal > endVal ? endVal : frameVal;\r\n    }\r\n\r\n    frameVal = Math.round(frameVal * dec) / dec;\r\n\r\n    const tick = progress < duration;\r\n    callback({\r\n      value: frameVal,\r\n      progress,\r\n      timestamp,\r\n      finished: !tick\r\n    });\r\n\r\n    if (tick) {\r\n      return requestAnimationFrame(val => runCount(val));\r\n    }\r\n  }\r\n\r\n  return requestAnimationFrame(timestamp => {\r\n    startTime = timestamp;\r\n    return runCount(timestamp);\r\n  });\r\n}\r\n\r\n/**\r\n * Determine decimals places\r\n *\r\n * @export\r\n */\r\nexport function decimalChecker(countTo) {\r\n  const endVal = Number(countTo);\r\n\r\n  if (endVal % 1 !== 0 && Math.abs(endVal) <= 10) {\r\n    return 2;\r\n  }\r\n\r\n  return 0;\r\n}\r\n","import { Component, Input, Output, EventEmitter, ChangeDetectorRef, OnDestroy, ElementRef } from '@angular/core';\r\nimport { count, decimalChecker } from './count.helper';\r\n\r\n/**\r\n * Count up component\r\n *\r\n * Loosely inspired by:\r\n *  - https://github.com/izupet/angular2-counto\r\n *  - https://inorganik.github.io/countUp.js/\r\n *\r\n * @export\r\n */\r\n@Component({\r\n  selector: '[ngx-charts-count-up]',\r\n  template: ` {{ value }} `\r\n})\r\nexport class CountUpDirective implements OnDestroy {\r\n  @Input() countDuration: number = 1;\r\n  @Input() countPrefix: string = '';\r\n  @Input() countSuffix: string = '';\r\n  @Input() valueFormatting: any;\r\n\r\n  @Input()\r\n  set countDecimals(val: number) {\r\n    this._countDecimals = val;\r\n  }\r\n\r\n  get countDecimals(): number {\r\n    if (this._countDecimals) return this._countDecimals;\r\n    return decimalChecker(this.countTo);\r\n  }\r\n\r\n  @Input()\r\n  set countTo(val) {\r\n    this._countTo = parseFloat(val);\r\n    this.start();\r\n  }\r\n\r\n  get countTo(): any {\r\n    return this._countTo;\r\n  }\r\n\r\n  @Input()\r\n  set countFrom(val) {\r\n    this._countFrom = parseFloat(val);\r\n    this.start();\r\n  }\r\n\r\n  get countFrom(): any {\r\n    return this._countFrom;\r\n  }\r\n\r\n  @Output() countChange = new EventEmitter();\r\n  @Output() countFinish = new EventEmitter();\r\n\r\n  nativeElement: any;\r\n\r\n  value: any = '';\r\n  formattedValue: string;\r\n\r\n  private animationReq: any;\r\n\r\n  private _countDecimals: number = 0;\r\n  private _countTo: number = 0;\r\n  private _countFrom: number = 0;\r\n\r\n  constructor(private cd: ChangeDetectorRef, element: ElementRef) {\r\n    this.nativeElement = element.nativeElement;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    cancelAnimationFrame(this.animationReq);\r\n  }\r\n\r\n  start(): void {\r\n    cancelAnimationFrame(this.animationReq);\r\n\r\n    const valueFormatting =\r\n      this.valueFormatting || (value => `${this.countPrefix}${value.toLocaleString()}${this.countSuffix}`);\r\n\r\n    const callback = ({ value, progress, finished }) => {\r\n      this.value = valueFormatting(value);\r\n      this.cd.markForCheck();\r\n      if (!finished) this.countChange.emit({ value: this.value, progress });\r\n      if (finished) this.countFinish.emit({ value: this.value, progress });\r\n    };\r\n\r\n    this.animationReq = count(this.countFrom, this.countTo, this.countDecimals, this.countDuration, callback);\r\n  }\r\n}\r\n","declare let global: any;\r\n\r\n// If we don't check whether 'window' and 'global' variables are defined,\r\n// code will fail in browser/node with 'variable is undefined' error.\r\nlet root: any;\r\nif (typeof window !== 'undefined') {\r\n  root = window;\r\n} else if (typeof global !== 'undefined') {\r\n  root = global;\r\n}\r\n\r\n// tslint:disable-next-line:variable-name\r\nexport const MouseEvent = root.MouseEvent as MouseEvent & {\r\n  prototype?: MouseEvent;\r\n  new (typeArg: string, eventInitDict?: MouseEventInit): MouseEvent;\r\n};\r\n\r\nexport function createMouseEvent(name: string, bubbles: boolean = false, cancelable: boolean = true): MouseEvent {\r\n  // Calling new of an event does not work correctly on IE. The following is a tested workaround\r\n  // See https://stackoverflow.com/questions/27176983/dispatchevent-not-working-in-ie11\r\n  if (typeof MouseEvent === 'function') {\r\n    // Sane browsers\r\n    return new MouseEvent(name, { bubbles, cancelable });\r\n  } else {\r\n    // IE\r\n    const event = document.createEvent('MouseEvent');\r\n    event.initEvent(name, bubbles, cancelable);\r\n    return event;\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, ViewChild, ChangeDetectionStrategy, TemplateRef } from '@angular/core';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\nimport { createMouseEvent } from '../events';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-tooltip-area]',\r\n  template: `\r\n    <svg:g>\r\n      <svg:rect\r\n        class=\"tooltip-area\"\r\n        [attr.x]=\"0\"\r\n        y=\"0\"\r\n        [attr.width]=\"dims.width\"\r\n        [attr.height]=\"dims.height\"\r\n        style=\"opacity: 0; cursor: 'auto';\"\r\n        (mousemove)=\"mouseMove($event)\"\r\n        (mouseleave)=\"hideTooltip()\"\r\n      />\r\n      <ng-template #defaultTooltipTemplate let-model=\"model\">\r\n        <xhtml:div class=\"area-tooltip-container\">\r\n          <xhtml:div *ngFor=\"let tooltipItem of model\" class=\"tooltip-item\">\r\n            <xhtml:span class=\"tooltip-item-color\" [style.background-color]=\"tooltipItem.color\"></xhtml:span>\r\n            {{ getToolTipText(tooltipItem) }}\r\n          </xhtml:div>\r\n        </xhtml:div>\r\n      </ng-template>\r\n      <svg:rect\r\n        #tooltipAnchor\r\n        [@animationState]=\"anchorOpacity !== 0 ? 'active' : 'inactive'\"\r\n        class=\"tooltip-anchor\"\r\n        [attr.x]=\"anchorPos\"\r\n        y=\"0\"\r\n        [attr.width]=\"1\"\r\n        [attr.height]=\"dims.height\"\r\n        [style.opacity]=\"anchorOpacity\"\r\n        [style.pointer-events]=\"'none'\"\r\n        ngx-tooltip\r\n        [tooltipDisabled]=\"tooltipDisabled\"\r\n        [tooltipPlacement]=\"'right'\"\r\n        [tooltipType]=\"'tooltip'\"\r\n        [tooltipSpacing]=\"15\"\r\n        [tooltipTemplate]=\"tooltipTemplate ? tooltipTemplate : defaultTooltipTemplate\"\r\n        [tooltipContext]=\"anchorValues\"\r\n        [tooltipImmediateExit]=\"true\"\r\n      />\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('animationState', [\r\n      transition('inactive => active', [\r\n        style({\r\n          opacity: 0\r\n        }),\r\n        animate(250, style({ opacity: 0.7 }))\r\n      ]),\r\n      transition('active => inactive', [\r\n        style({\r\n          opacity: 0.7\r\n        }),\r\n        animate(250, style({ opacity: 0 }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class TooltipArea {\r\n  anchorOpacity: number = 0;\r\n  anchorPos: number = -1;\r\n  anchorValues: any[] = [];\r\n  lastAnchorPos: number;\r\n\r\n  @Input() dims;\r\n  @Input() xSet;\r\n  @Input() xScale;\r\n  @Input() yScale;\r\n  @Input() results;\r\n  @Input() colors;\r\n  @Input() showPercentage: boolean = false;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() tooltipTemplate: TemplateRef<any>;\r\n\r\n  @Output() hover = new EventEmitter();\r\n\r\n  @ViewChild('tooltipAnchor', { static: false }) tooltipAnchor;\r\n\r\n  getValues(xVal): any[] {\r\n    const results = [];\r\n\r\n    for (const group of this.results) {\r\n      const item = group.series.find(d => d.name.toString() === xVal.toString());\r\n      let groupName = group.name;\r\n      if (groupName instanceof Date) {\r\n        groupName = groupName.toLocaleDateString();\r\n      }\r\n\r\n      if (item) {\r\n        const label = item.name;\r\n        let val = item.value;\r\n        if (this.showPercentage) {\r\n          val = (item.d1 - item.d0).toFixed(2) + '%';\r\n        }\r\n        let color;\r\n        if (this.colors.scaleType === 'linear') {\r\n          let v = val;\r\n          if (item.d1) {\r\n            v = item.d1;\r\n          }\r\n          color = this.colors.getColor(v);\r\n        } else {\r\n          color = this.colors.getColor(group.name);\r\n        }\r\n\r\n        const data = Object.assign({}, item, {\r\n          value: val,\r\n          name: label,\r\n          series: groupName,\r\n          min: item.min,\r\n          max: item.max,\r\n          color\r\n        });\r\n\r\n        results.push(data);\r\n      }\r\n    }\r\n\r\n    return results;\r\n  }\r\n\r\n  mouseMove(event) {\r\n    const xPos = event.pageX - event.target.getBoundingClientRect().left;\r\n\r\n    const closestIndex = this.findClosestPointIndex(xPos);\r\n    const closestPoint = this.xSet[closestIndex];\r\n    this.anchorPos = this.xScale(closestPoint);\r\n    this.anchorPos = Math.max(0, this.anchorPos);\r\n    this.anchorPos = Math.min(this.dims.width, this.anchorPos);\r\n\r\n    this.anchorValues = this.getValues(closestPoint);\r\n    if (this.anchorPos !== this.lastAnchorPos) {\r\n      const ev = createMouseEvent('mouseleave');\r\n      this.tooltipAnchor.nativeElement.dispatchEvent(ev);\r\n      this.anchorOpacity = 0.7;\r\n      this.hover.emit({\r\n        value: closestPoint\r\n      });\r\n      this.showTooltip();\r\n\r\n      this.lastAnchorPos = this.anchorPos;\r\n    }\r\n  }\r\n\r\n  findClosestPointIndex(xPos) {\r\n    let minIndex = 0;\r\n    let maxIndex = this.xSet.length - 1;\r\n    let minDiff = Number.MAX_VALUE;\r\n    let closestIndex = 0;\r\n\r\n    while (minIndex <= maxIndex) {\r\n      const currentIndex = ((minIndex + maxIndex) / 2) | 0;\r\n      const currentElement = this.xScale(this.xSet[currentIndex]);\r\n\r\n      const curDiff = Math.abs(currentElement - xPos);\r\n\r\n      if (curDiff < minDiff) {\r\n        minDiff = curDiff;\r\n        closestIndex = currentIndex;\r\n      }\r\n\r\n      if (currentElement < xPos) {\r\n        minIndex = currentIndex + 1;\r\n      } else if (currentElement > xPos) {\r\n        maxIndex = currentIndex - 1;\r\n      } else {\r\n        minDiff = 0;\r\n        closestIndex = currentIndex;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return closestIndex;\r\n  }\r\n\r\n  showTooltip(): void {\r\n    const event = createMouseEvent('mouseenter');\r\n    this.tooltipAnchor.nativeElement.dispatchEvent(event);\r\n  }\r\n\r\n  hideTooltip(): void {\r\n    const event = createMouseEvent('mouseleave');\r\n    this.tooltipAnchor.nativeElement.dispatchEvent(event);\r\n    this.anchorOpacity = 0;\r\n    this.lastAnchorPos = -1;\r\n  }\r\n\r\n  getToolTipText(tooltipItem: any): string {\r\n    let result: string = '';\r\n    if (tooltipItem.series !== undefined) {\r\n      result += tooltipItem.series;\r\n    } else {\r\n      result += '???';\r\n    }\r\n    result += ': ';\r\n    if (tooltipItem.value !== undefined) {\r\n      result += tooltipItem.value.toLocaleString();\r\n    }\r\n    if (tooltipItem.min !== undefined || tooltipItem.max !== undefined) {\r\n      result += ' (';\r\n      if (tooltipItem.min !== undefined) {\r\n        if (tooltipItem.max === undefined) {\r\n          result += 'â¥';\r\n        }\r\n        result += tooltipItem.min.toLocaleString();\r\n        if (tooltipItem.max !== undefined) {\r\n          result += ' - ';\r\n        }\r\n      } else if (tooltipItem.max !== undefined) {\r\n        result += 'â¤';\r\n      }\r\n      if (tooltipItem.max !== undefined) {\r\n        result += tooltipItem.max.toLocaleString();\r\n      }\r\n      result += ')';\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ElementRef,\r\n  OnChanges,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  SimpleChanges,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { brushX } from 'd3-brush';\r\nimport { scaleLinear, scaleTime, scalePoint } from 'd3-scale';\r\nimport { select, event as d3event } from 'd3-selection';\r\nimport { id } from '../..//utils/id';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-timeline]',\r\n  template: `\r\n    <svg:g class=\"timeline\" [attr.transform]=\"transform\">\r\n      <svg:filter [attr.id]=\"filterId\">\r\n        <svg:feColorMatrix\r\n          in=\"SourceGraphic\"\r\n          type=\"matrix\"\r\n          values=\"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"\r\n        />\r\n      </svg:filter>\r\n      <svg:g class=\"embedded-chart\">\r\n        <ng-content></ng-content>\r\n      </svg:g>\r\n      <svg:rect x=\"0\" [attr.width]=\"view[0]\" y=\"0\" [attr.height]=\"height\" class=\"brush-background\" />\r\n      <svg:g class=\"brush\"></svg:g>\r\n    </svg:g>\r\n  `,\r\n  styleUrls: ['./timeline.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class Timeline implements OnChanges {\r\n  @Input() view;\r\n  @Input() state;\r\n  @Input() results;\r\n  @Input() scheme;\r\n  @Input() customColors;\r\n  @Input() legend;\r\n  @Input() miniChart;\r\n  @Input() autoScale;\r\n  @Input() scaleType;\r\n  @Input() height: number = 50;\r\n\r\n  @Output() select = new EventEmitter();\r\n  @Output() onDomainChange = new EventEmitter();\r\n\r\n  element: HTMLElement;\r\n  dims: any;\r\n  xDomain: any[];\r\n  xScale: any;\r\n  brush: any;\r\n  transform: string;\r\n  initialized: boolean = false;\r\n  filterId: any;\r\n  filter: any;\r\n\r\n  constructor(element: ElementRef, private cd: ChangeDetectorRef) {\r\n    this.element = element.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n\r\n    if (!this.initialized) {\r\n      this.addBrush();\r\n      this.initialized = true;\r\n    }\r\n  }\r\n\r\n  update(): void {\r\n    this.dims = this.getDims();\r\n    this.height = this.dims.height;\r\n    const offsetY = this.view[1] - this.height;\r\n\r\n    this.xDomain = this.getXDomain();\r\n    this.xScale = this.getXScale();\r\n\r\n    if (this.brush) {\r\n      this.updateBrush();\r\n    }\r\n\r\n    this.transform = `translate(0 , ${offsetY})`;\r\n\r\n    this.filterId = 'filter' + id().toString();\r\n    this.filter = `url(#${this.filterId})`;\r\n\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  getXDomain(): any[] {\r\n    let values = [];\r\n\r\n    for (const results of this.results) {\r\n      for (const d of results.series) {\r\n        if (!values.includes(d.name)) {\r\n          values.push(d.name);\r\n        }\r\n      }\r\n    }\r\n\r\n    let domain = [];\r\n    if (this.scaleType === 'time') {\r\n      const min = Math.min(...values);\r\n      const max = Math.max(...values);\r\n      domain = [min, max];\r\n    } else if (this.scaleType === 'linear') {\r\n      values = values.map(v => Number(v));\r\n      const min = Math.min(...values);\r\n      const max = Math.max(...values);\r\n      domain = [min, max];\r\n    } else {\r\n      domain = values;\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getXScale() {\r\n    let scale;\r\n\r\n    if (this.scaleType === 'time') {\r\n      scale = scaleTime().range([0, this.dims.width]).domain(this.xDomain);\r\n    } else if (this.scaleType === 'linear') {\r\n      scale = scaleLinear().range([0, this.dims.width]).domain(this.xDomain);\r\n    } else if (this.scaleType === 'ordinal') {\r\n      scale = scalePoint().range([0, this.dims.width]).padding(0.1).domain(this.xDomain);\r\n    }\r\n\r\n    return scale;\r\n  }\r\n\r\n  addBrush(): void {\r\n    if (this.brush) return;\r\n\r\n    const height = this.height;\r\n    const width = this.view[0];\r\n\r\n    this.brush = brushX()\r\n      .extent([\r\n        [0, 0],\r\n        [width, height]\r\n      ])\r\n      .on('brush end', () => {\r\n        const selection = d3event.selection || this.xScale.range();\r\n        const newDomain = selection.map(this.xScale.invert);\r\n\r\n        this.onDomainChange.emit(newDomain);\r\n        this.cd.markForCheck();\r\n      });\r\n\r\n    select(this.element).select('.brush').call(this.brush);\r\n  }\r\n\r\n  updateBrush(): void {\r\n    if (!this.brush) return;\r\n\r\n    const height = this.height;\r\n    const width = this.view[0];\r\n\r\n    this.brush.extent([\r\n      [0, 0],\r\n      [width, height]\r\n    ]);\r\n    select(this.element).select('.brush').call(this.brush);\r\n\r\n    // clear hardcoded properties so they can be defined by CSS\r\n    select(this.element)\r\n      .select('.selection')\r\n      .attr('fill', undefined)\r\n      .attr('stroke', undefined)\r\n      .attr('fill-opacity', undefined);\r\n\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  getDims(): any {\r\n    const width = this.view[0];\r\n\r\n    const dims = {\r\n      width,\r\n      height: this.height\r\n    };\r\n\r\n    return dims;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ChangeDetectionStrategy,\r\n  Output,\r\n  EventEmitter,\r\n  SimpleChanges,\r\n  OnChanges,\r\n  ChangeDetectorRef,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { formatLabel } from '../label.helper';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-legend',\r\n  template: `\r\n    <div [style.width.px]=\"width\">\r\n      <header class=\"legend-title\" *ngIf=\"title?.length > 0\">\r\n        <span class=\"legend-title-text\">{{ title }}</span>\r\n      </header>\r\n      <div class=\"legend-wrap\">\r\n        <ul class=\"legend-labels\" [class.horizontal-legend]=\"horizontal\" [style.max-height.px]=\"height - 45\">\r\n          <li *ngFor=\"let entry of legendEntries; trackBy: trackBy\" class=\"legend-label\">\r\n            <ngx-charts-legend-entry\r\n              [label]=\"entry.label\"\r\n              [formattedLabel]=\"entry.formattedLabel\"\r\n              [color]=\"entry.color\"\r\n              [isActive]=\"isActive(entry)\"\r\n              (select)=\"labelClick.emit($event)\"\r\n              (activate)=\"activate($event)\"\r\n              (deactivate)=\"deactivate($event)\"\r\n            >\r\n            </ngx-charts-legend-entry>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./legend.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LegendComponent implements OnChanges {\r\n  @Input() data;\r\n  @Input() title;\r\n  @Input() colors;\r\n  @Input() height;\r\n  @Input() width;\r\n  @Input() activeEntries;\r\n  @Input() horizontal = false;\r\n\r\n  @Output() labelClick: EventEmitter<any> = new EventEmitter();\r\n  @Output() labelActivate: EventEmitter<any> = new EventEmitter();\r\n  @Output() labelDeactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  legendEntries: any[] = [];\r\n\r\n  constructor(private cd: ChangeDetectorRef) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    this.cd.markForCheck();\r\n    this.legendEntries = this.getLegendEntries();\r\n  }\r\n\r\n  getLegendEntries(): any[] {\r\n    const items = [];\r\n\r\n    for (const label of this.data) {\r\n      const formattedLabel = formatLabel(label);\r\n\r\n      const idx = items.findIndex(i => {\r\n        return i.label === formattedLabel;\r\n      });\r\n\r\n      if (idx === -1) {\r\n        items.push({\r\n          label,\r\n          formattedLabel,\r\n          color: this.colors.getColor(label)\r\n        });\r\n      }\r\n    }\r\n\r\n    return items;\r\n  }\r\n\r\n  isActive(entry): boolean {\r\n    if (!this.activeEntries) return false;\r\n    const item = this.activeEntries.find(d => {\r\n      return entry.label === d.name;\r\n    });\r\n    return item !== undefined;\r\n  }\r\n\r\n  activate(item) {\r\n    this.labelActivate.emit(item);\r\n  }\r\n\r\n  deactivate(item) {\r\n    this.labelDeactivate.emit(item);\r\n  }\r\n\r\n  trackBy(index, item): string {\r\n    return item.label;\r\n  }\r\n}\r\n","import { Component, Input, Output, ChangeDetectionStrategy, HostListener, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-legend-entry',\r\n  template: `\r\n    <span [title]=\"formattedLabel\" tabindex=\"-1\" [class.active]=\"isActive\" (click)=\"select.emit(formattedLabel)\">\r\n      <span class=\"legend-label-color\" [style.background-color]=\"color\" (click)=\"toggle.emit(formattedLabel)\"> </span>\r\n      <span class=\"legend-label-text\">\r\n        {{ trimmedLabel }}\r\n      </span>\r\n    </span>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LegendEntryComponent {\r\n  @Input() color: string;\r\n  @Input() label: any;\r\n  @Input() formattedLabel: string;\r\n  @Input() isActive: boolean = false;\r\n\r\n  @Output() select: EventEmitter<any> = new EventEmitter();\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n  @Output() toggle: EventEmitter<any> = new EventEmitter();\r\n\r\n  get trimmedLabel(): string {\r\n    return this.formattedLabel || '(empty)';\r\n  }\r\n\r\n  @HostListener('mouseenter')\r\n  onMouseEnter(): void {\r\n    this.activate.emit({ name: this.label });\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  onMouseLeave(): void {\r\n    this.deactivate.emit({ name: this.label });\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-scale-legend',\r\n  template: `\r\n    <div\r\n      class=\"scale-legend\"\r\n      [class.horizontal-legend]=\"horizontal\"\r\n      [style.height.px]=\"horizontal ? undefined : height\"\r\n      [style.width.px]=\"width\"\r\n    >\r\n      <div class=\"scale-legend-label\">\r\n        <span>{{ valueRange[1].toLocaleString() }}</span>\r\n      </div>\r\n      <div class=\"scale-legend-wrap\" [style.background]=\"gradient\"></div>\r\n      <div class=\"scale-legend-label\">\r\n        <span>{{ valueRange[0].toLocaleString() }}</span>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./scale-legend.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ScaleLegendComponent implements OnChanges {\r\n  @Input() valueRange;\r\n  @Input() colors;\r\n  @Input() height;\r\n  @Input() width;\r\n  @Input() horizontal = false;\r\n\r\n  gradient: any;\r\n\r\n  constructor(private sanitizer: DomSanitizer) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const gradientValues = this.gradientString(this.colors.range(), this.colors.domain());\r\n    const direction = this.horizontal ? 'right' : 'bottom';\r\n    this.gradient = this.sanitizer.bypassSecurityTrustStyle(`linear-gradient(to ${direction}, ${gradientValues})`);\r\n  }\r\n\r\n  /**\r\n   * Generates the string used in the gradient stylesheet properties\r\n   * @param colors array of colors\r\n   * @param splits array of splits on a scale of (0, 1)\r\n   */\r\n  gradientString(colors, splits): string {\r\n    // add the 100%\r\n    splits.push(1);\r\n    const pairs = [];\r\n    colors.reverse().forEach((c, i) => {\r\n      pairs.push(`${c} ${Math.round(splits[i] * 100)}%`);\r\n    });\r\n\r\n    return pairs.join(', ');\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { trimLabel } from '../trim-label.helper';\r\nimport { formatLabel } from '../label.helper';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-advanced-legend',\r\n  template: `\r\n    <div class=\"advanced-pie-legend\" [style.width.px]=\"width\">\r\n      <div\r\n        *ngIf=\"animations\"\r\n        class=\"total-value\"\r\n        ngx-charts-count-up\r\n        [countTo]=\"roundedTotal\"\r\n        [valueFormatting]=\"valueFormatting\"\r\n      ></div>\r\n      <div class=\"total-value\" *ngIf=\"!animations\">\r\n        {{ valueFormatting ? valueFormatting(roundedTotal) : defaultValueFormatting(roundedTotal) }}\r\n      </div>\r\n      <div class=\"total-label\">\r\n        {{ label }}\r\n      </div>\r\n      <div class=\"legend-items-container\">\r\n        <div class=\"legend-items\">\r\n          <div\r\n            *ngFor=\"let legendItem of legendItems; trackBy: trackBy\"\r\n            tabindex=\"-1\"\r\n            class=\"legend-item\"\r\n            (mouseenter)=\"activate.emit(legendItem.data)\"\r\n            (mouseleave)=\"deactivate.emit(legendItem.data)\"\r\n            (click)=\"select.emit(legendItem.data)\"\r\n          >\r\n            <div class=\"item-color\" [style.border-left-color]=\"legendItem.color\"></div>\r\n            <div\r\n              *ngIf=\"animations\"\r\n              class=\"item-value\"\r\n              ngx-charts-count-up\r\n              [countTo]=\"legendItem._value\"\r\n              [valueFormatting]=\"valueFormatting\"\r\n            ></div>\r\n            <div *ngIf=\"!animations\" class=\"item-value\">\r\n              {{ valueFormatting ? valueFormatting(legendItem.value) : defaultValueFormatting(legendItem.value) }}\r\n            </div>\r\n            <div class=\"item-label\">{{ legendItem.displayLabel }}</div>\r\n            <div\r\n              *ngIf=\"animations\"\r\n              class=\"item-percent\"\r\n              ngx-charts-count-up\r\n              [countTo]=\"legendItem.percentage\"\r\n              [countSuffix]=\"'%'\"\r\n            ></div>\r\n            <div *ngIf=\"!animations\" class=\"item-percent\">{{ legendItem.percentage.toLocaleString() }}%</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./advanced-legend.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AdvancedLegendComponent implements OnChanges {\r\n  @Input() width: number;\r\n  @Input() data;\r\n  @Input() colors;\r\n  @Input() label: string = 'Total';\r\n  @Input() animations: boolean = true;\r\n\r\n  @Output() select: EventEmitter<any> = new EventEmitter();\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  legendItems: any[] = [];\r\n  total: number;\r\n  roundedTotal: number;\r\n\r\n  @Input() valueFormatting: (value: number) => any;\r\n  @Input() labelFormatting: (value: string) => any = label => label;\r\n  @Input() percentageFormatting: (value: number) => any = percentage => percentage;\r\n\r\n  defaultValueFormatting: (value: number) => any = value => value.toLocaleString();\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  getTotal(): number {\r\n    return this.data.map(d => d.value).reduce((sum, d) => sum + d, 0);\r\n  }\r\n\r\n  update(): void {\r\n    this.total = this.getTotal();\r\n    this.roundedTotal = this.total;\r\n\r\n    this.legendItems = this.getLegendItems();\r\n  }\r\n\r\n  getLegendItems(): any {\r\n    return this.data.map(d => {\r\n      const label = formatLabel(d.name);\r\n      const value = d.value;\r\n      const color = this.colors.getColor(label);\r\n      const percentage = this.total > 0 ? (value / this.total) * 100 : 0;\r\n      const formattedLabel = typeof this.labelFormatting === 'function' ? this.labelFormatting(label) : label;\r\n\r\n      return {\r\n        _value: value,\r\n        data: d,\r\n        value,\r\n        color,\r\n        label: formattedLabel,\r\n        displayLabel: trimLabel(formattedLabel, 20),\r\n        origialLabel: d.name,\r\n        percentage: this.percentageFormatting ? this.percentageFormatting(percentage) : percentage.toLocaleString()\r\n      };\r\n    });\r\n  }\r\n\r\n  trackBy(item) {\r\n    return item.formattedLabel;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ChartComponent } from './charts/chart.component';\r\nimport { BaseChartComponent } from './base-chart.component';\r\nimport { AxesModule } from './axes/axes.module';\r\nimport { TooltipModule } from './tooltip/tooltip.module';\r\nimport { CircleSeriesComponent } from './circle-series.component';\r\nimport { CircleComponent } from './circle.component';\r\nimport { GridPanelComponent } from './grid-panel.component';\r\nimport { GridPanelSeriesComponent } from './grid-panel-series.component';\r\nimport { SvgLinearGradientComponent } from './svg-linear-gradient.component';\r\nimport { SvgRadialGradientComponent } from './svg-radial-gradient.component';\r\nimport { AreaComponent } from './area.component';\r\nimport { CountUpDirective } from './count/count.directive';\r\nimport { TooltipArea } from './tooltip-area.component';\r\nimport { Timeline } from './timeline/timeline.component';\r\nimport { VisibilityObserver } from '../utils/visibility-observer';\r\nimport { LegendComponent } from './legend/legend.component';\r\nimport { LegendEntryComponent } from './legend/legend-entry.component';\r\nimport { ScaleLegendComponent } from './legend/scale-legend.component';\r\nimport { AdvancedLegendComponent } from './legend/advanced-legend.component';\r\n\r\nconst COMPONENTS = [\r\n  AreaComponent,\r\n  BaseChartComponent,\r\n  CountUpDirective,\r\n  TooltipArea,\r\n  ChartComponent,\r\n  LegendComponent,\r\n  LegendEntryComponent,\r\n  ScaleLegendComponent,\r\n  CircleComponent,\r\n  CircleSeriesComponent,\r\n  GridPanelComponent,\r\n  GridPanelSeriesComponent,\r\n  SvgLinearGradientComponent,\r\n  SvgRadialGradientComponent,\r\n  Timeline,\r\n  AdvancedLegendComponent\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, AxesModule, TooltipModule],\r\n  declarations: [...COMPONENTS, VisibilityObserver],\r\n  exports: [CommonModule, AxesModule, TooltipModule, ...COMPONENTS, VisibilityObserver]\r\n})\r\nexport class ChartCommonModule {}\r\n","export interface ViewDimensions {\r\n  width: number;\r\n  height: number;\r\n  xOffset: number;\r\n}\r\n\r\nexport function calculateViewDimensions({\r\n  width,\r\n  height,\r\n  margins,\r\n  showXAxis = false,\r\n  showYAxis = false,\r\n  xAxisHeight = 0,\r\n  yAxisWidth = 0,\r\n  showXLabel = false,\r\n  showYLabel = false,\r\n  showLegend = false,\r\n  legendType = 'ordinal',\r\n  legendPosition = 'right',\r\n  columns = 12\r\n}): ViewDimensions {\r\n  let xOffset = margins[3];\r\n  let chartWidth = width;\r\n  let chartHeight = height - margins[0] - margins[2];\r\n\r\n  if (showLegend && legendPosition === 'right') {\r\n    if (legendType === 'ordinal') {\r\n      columns -= 2;\r\n    } else {\r\n      columns -= 1;\r\n    }\r\n  }\r\n\r\n  chartWidth = (chartWidth * columns) / 12;\r\n\r\n  chartWidth = chartWidth - margins[1] - margins[3];\r\n\r\n  if (showXAxis) {\r\n    chartHeight -= 5;\r\n    chartHeight -= xAxisHeight;\r\n\r\n    if (showXLabel) {\r\n      // text height + spacing between axis label and tick labels\r\n      const offset = 25 + 5;\r\n      chartHeight -= offset;\r\n    }\r\n  }\r\n\r\n  if (showYAxis) {\r\n    chartWidth -= 5;\r\n    chartWidth -= yAxisWidth;\r\n    xOffset += yAxisWidth;\r\n    xOffset += 10;\r\n\r\n    if (showYLabel) {\r\n      // text height + spacing between axis label and tick labels\r\n      const offset = 25 + 5;\r\n      chartWidth -= offset;\r\n      xOffset += offset;\r\n    }\r\n  }\r\n\r\n  chartWidth = Math.max(0, chartWidth);\r\n  chartHeight = Math.max(0, chartHeight);\r\n\r\n  return {\r\n    width: Math.floor(chartWidth),\r\n    height: Math.floor(chartHeight),\r\n    xOffset: Math.floor(xOffset)\r\n  };\r\n}\r\n","export let colorSets = [\r\n  {\r\n    name: 'vivid',\r\n    selectable: true,\r\n    group: 'Ordinal',\r\n    domain: [\r\n      '#647c8a',\r\n      '#3f51b5',\r\n      '#2196f3',\r\n      '#00b862',\r\n      '#afdf0a',\r\n      '#a7b61a',\r\n      '#f3e562',\r\n      '#ff9800',\r\n      '#ff5722',\r\n      '#ff4514'\r\n    ]\r\n  },\r\n  {\r\n    name: 'natural',\r\n    selectable: true,\r\n    group: 'Ordinal',\r\n    domain: [\r\n      '#bf9d76',\r\n      '#e99450',\r\n      '#d89f59',\r\n      '#f2dfa7',\r\n      '#a5d7c6',\r\n      '#7794b1',\r\n      '#afafaf',\r\n      '#707160',\r\n      '#ba9383',\r\n      '#d9d5c3'\r\n    ]\r\n  },\r\n  {\r\n    name: 'cool',\r\n    selectable: true,\r\n    group: 'Ordinal',\r\n    domain: [\r\n      '#a8385d',\r\n      '#7aa3e5',\r\n      '#a27ea8',\r\n      '#aae3f5',\r\n      '#adcded',\r\n      '#a95963',\r\n      '#8796c0',\r\n      '#7ed3ed',\r\n      '#50abcc',\r\n      '#ad6886'\r\n    ]\r\n  },\r\n  {\r\n    name: 'fire',\r\n    selectable: true,\r\n    group: 'Ordinal',\r\n    domain: ['#ff3d00', '#bf360c', '#ff8f00', '#ff6f00', '#ff5722', '#e65100', '#ffca28', '#ffab00']\r\n  },\r\n  {\r\n    name: 'solar',\r\n    selectable: true,\r\n    group: 'Continuous',\r\n    domain: [\r\n      '#fff8e1',\r\n      '#ffecb3',\r\n      '#ffe082',\r\n      '#ffd54f',\r\n      '#ffca28',\r\n      '#ffc107',\r\n      '#ffb300',\r\n      '#ffa000',\r\n      '#ff8f00',\r\n      '#ff6f00'\r\n    ]\r\n  },\r\n  {\r\n    name: 'air',\r\n    selectable: true,\r\n    group: 'Continuous',\r\n    domain: [\r\n      '#e1f5fe',\r\n      '#b3e5fc',\r\n      '#81d4fa',\r\n      '#4fc3f7',\r\n      '#29b6f6',\r\n      '#03a9f4',\r\n      '#039be5',\r\n      '#0288d1',\r\n      '#0277bd',\r\n      '#01579b'\r\n    ]\r\n  },\r\n  {\r\n    name: 'aqua',\r\n    selectable: true,\r\n    group: 'Continuous',\r\n    domain: [\r\n      '#e0f7fa',\r\n      '#b2ebf2',\r\n      '#80deea',\r\n      '#4dd0e1',\r\n      '#26c6da',\r\n      '#00bcd4',\r\n      '#00acc1',\r\n      '#0097a7',\r\n      '#00838f',\r\n      '#006064'\r\n    ]\r\n  },\r\n  {\r\n    name: 'flame',\r\n    selectable: false,\r\n    group: 'Ordinal',\r\n    domain: [\r\n      '#A10A28',\r\n      '#D3342D',\r\n      '#EF6D49',\r\n      '#FAAD67',\r\n      '#FDDE90',\r\n      '#DBED91',\r\n      '#A9D770',\r\n      '#6CBA67',\r\n      '#2C9653',\r\n      '#146738'\r\n    ]\r\n  },\r\n  {\r\n    name: 'ocean',\r\n    selectable: false,\r\n    group: 'Ordinal',\r\n    domain: [\r\n      '#1D68FB',\r\n      '#33C0FC',\r\n      '#4AFFFE',\r\n      '#AFFFFF',\r\n      '#FFFC63',\r\n      '#FDBD2D',\r\n      '#FC8A25',\r\n      '#FA4F1E',\r\n      '#FA141B',\r\n      '#BA38D1'\r\n    ]\r\n  },\r\n  {\r\n    name: 'forest',\r\n    selectable: false,\r\n    group: 'Ordinal',\r\n    domain: [\r\n      '#55C22D',\r\n      '#C1F33D',\r\n      '#3CC099',\r\n      '#AFFFFF',\r\n      '#8CFC9D',\r\n      '#76CFFA',\r\n      '#BA60FB',\r\n      '#EE6490',\r\n      '#C42A1C',\r\n      '#FC9F32'\r\n    ]\r\n  },\r\n  {\r\n    name: 'horizon',\r\n    selectable: false,\r\n    group: 'Ordinal',\r\n    domain: [\r\n      '#2597FB',\r\n      '#65EBFD',\r\n      '#99FDD0',\r\n      '#FCEE4B',\r\n      '#FEFCFA',\r\n      '#FDD6E3',\r\n      '#FCB1A8',\r\n      '#EF6F7B',\r\n      '#CB96E8',\r\n      '#EFDEE0'\r\n    ]\r\n  },\r\n  {\r\n    name: 'neons',\r\n    selectable: false,\r\n    group: 'Ordinal',\r\n    domain: [\r\n      '#FF3333',\r\n      '#FF33FF',\r\n      '#CC33FF',\r\n      '#0000FF',\r\n      '#33CCFF',\r\n      '#33FFFF',\r\n      '#33FF66',\r\n      '#CCFF33',\r\n      '#FFCC00',\r\n      '#FF6600'\r\n    ]\r\n  },\r\n  {\r\n    name: 'picnic',\r\n    selectable: false,\r\n    group: 'Ordinal',\r\n    domain: [\r\n      '#FAC51D',\r\n      '#66BD6D',\r\n      '#FAA026',\r\n      '#29BB9C',\r\n      '#E96B56',\r\n      '#55ACD2',\r\n      '#B7332F',\r\n      '#2C83C9',\r\n      '#9166B8',\r\n      '#92E7E8'\r\n    ]\r\n  },\r\n  {\r\n    name: 'night',\r\n    selectable: false,\r\n    group: 'Ordinal',\r\n    domain: [\r\n      '#2B1B5A',\r\n      '#501356',\r\n      '#183356',\r\n      '#28203F',\r\n      '#391B3C',\r\n      '#1E2B3C',\r\n      '#120634',\r\n      '#2D0432',\r\n      '#051932',\r\n      '#453080',\r\n      '#75267D',\r\n      '#2C507D',\r\n      '#4B3880',\r\n      '#752F7D',\r\n      '#35547D'\r\n    ]\r\n  },\r\n  {\r\n    name: 'nightLights',\r\n    selectable: false,\r\n    group: 'Ordinal',\r\n    domain: [\r\n      '#4e31a5',\r\n      '#9c25a7',\r\n      '#3065ab',\r\n      '#57468b',\r\n      '#904497',\r\n      '#46648b',\r\n      '#32118d',\r\n      '#a00fb3',\r\n      '#1052a2',\r\n      '#6e51bd',\r\n      '#b63cc3',\r\n      '#6c97cb',\r\n      '#8671c1',\r\n      '#b455be',\r\n      '#7496c3'\r\n    ]\r\n  }\r\n];\r\n","import { range } from 'd3-array';\r\nimport { scaleBand, scaleLinear, scaleOrdinal, scaleQuantile } from 'd3-scale';\r\n\r\nimport { colorSets } from '../utils/color-sets';\r\n\r\nexport class ColorHelper {\r\n  scale: any;\r\n  scaleType: any;\r\n  colorDomain: any[];\r\n  domain: any;\r\n  customColors: any;\r\n\r\n  constructor(scheme, type, domain, customColors?) {\r\n    if (typeof scheme === 'string') {\r\n      scheme = colorSets.find(cs => {\r\n        return cs.name === scheme;\r\n      });\r\n    }\r\n    this.colorDomain = scheme.domain;\r\n    this.scaleType = type;\r\n    this.domain = domain;\r\n    this.customColors = customColors;\r\n\r\n    this.scale = this.generateColorScheme(scheme, type, this.domain);\r\n  }\r\n\r\n  generateColorScheme(scheme, type, domain) {\r\n    if (typeof scheme === 'string') {\r\n      scheme = colorSets.find(cs => {\r\n        return cs.name === scheme;\r\n      });\r\n    }\r\n    let colorScale;\r\n    if (type === 'quantile') {\r\n      colorScale = scaleQuantile().range(scheme.domain).domain(domain);\r\n    } else if (type === 'ordinal') {\r\n      colorScale = scaleOrdinal().range(scheme.domain).domain(domain);\r\n    } else if (type === 'linear') {\r\n      // linear schemes must have at least 2 colors\r\n      const colorDomain = [...scheme.domain];\r\n      if (colorDomain.length === 1) {\r\n        colorDomain.push(colorDomain[0]);\r\n        this.colorDomain = colorDomain;\r\n      }\r\n\r\n      const points = range(0, 1, 1.0 / colorDomain.length);\r\n      colorScale = scaleLinear().domain(points).range(colorDomain);\r\n    }\r\n\r\n    return colorScale;\r\n  }\r\n\r\n  getColor(value) {\r\n    if (value === undefined || value === null) {\r\n      throw new Error('Value can not be null');\r\n    }\r\n    if (this.scaleType === 'linear') {\r\n      const valueScale = scaleLinear().domain(this.domain).range([0, 1]);\r\n\r\n      return this.scale(valueScale(value));\r\n    } else {\r\n      if (typeof this.customColors === 'function') {\r\n        return this.customColors(value);\r\n      }\r\n\r\n      const formattedValue = value.toString();\r\n      let found: any; // todo type customColors\r\n      if (this.customColors && this.customColors.length > 0) {\r\n        found = this.customColors.find(mapping => {\r\n          return mapping.name.toLowerCase() === formattedValue.toLowerCase();\r\n        });\r\n      }\r\n\r\n      if (found) {\r\n        return found.value;\r\n      } else {\r\n        return this.scale(value);\r\n      }\r\n    }\r\n  }\r\n\r\n  getLinearGradientStops(value, start) {\r\n    if (start === undefined) {\r\n      start = this.domain[0];\r\n    }\r\n\r\n    const valueScale = scaleLinear().domain(this.domain).range([0, 1]);\r\n\r\n    const colorValueScale = scaleBand().domain(this.colorDomain).range([0, 1]);\r\n\r\n    const endColor = this.getColor(value);\r\n\r\n    // generate the stops\r\n    const startVal = valueScale(start);\r\n    const startColor = this.getColor(start);\r\n\r\n    const endVal = valueScale(value);\r\n    let i = 1;\r\n    let currentVal = startVal;\r\n    const stops = [];\r\n\r\n    stops.push({\r\n      color: startColor,\r\n      offset: startVal,\r\n      originalOffset: startVal,\r\n      opacity: 1\r\n    });\r\n\r\n    while (currentVal < endVal && i < this.colorDomain.length) {\r\n      const color = this.colorDomain[i];\r\n      const offset = colorValueScale(color);\r\n      if (offset <= startVal) {\r\n        i++;\r\n        continue;\r\n      }\r\n\r\n      if (offset.toFixed(4) >= (endVal - colorValueScale.bandwidth()).toFixed(4)) {\r\n        break;\r\n      }\r\n\r\n      stops.push({\r\n        color,\r\n        offset,\r\n        opacity: 1\r\n      });\r\n      currentVal = offset;\r\n      i++;\r\n    }\r\n\r\n    if (stops[stops.length - 1].offset < 100) {\r\n      stops.push({\r\n        color: endColor,\r\n        offset: endVal,\r\n        opacity: 1\r\n      });\r\n    }\r\n\r\n    if (endVal === startVal) {\r\n      stops[0].offset = 0;\r\n      stops[1].offset = 100;\r\n    } else {\r\n      // normalize the offsets into percentages\r\n      if (stops[stops.length - 1].offset !== 100) {\r\n        for (const s of stops) {\r\n          s.offset = ((s.offset - startVal) / (endVal - startVal)) * 100;\r\n        }\r\n      }\r\n    }\r\n\r\n    return stops;\r\n  }\r\n}\r\n","/**\r\n * Based on the data, return an array with unique values.\r\n *\r\n * @export\r\n * @returns array\r\n */\r\nexport function getUniqueXDomainValues(results: any[]): any[] {\r\n  const valueSet = new Set();\r\n  for (const result of results) {\r\n    for (const d of result.series) {\r\n      valueSet.add(d.name);\r\n    }\r\n  }\r\n  return Array.from(valueSet);\r\n}\r\n\r\n/**\r\n * Get the scaleType of enumerable of values.\r\n * @returns  'time', 'linear' or 'ordinal'\r\n */\r\nexport function getScaleType(values: any[], checkDateType = true): string {\r\n  if (checkDateType) {\r\n    const allDates = values.every(value => value instanceof Date);\r\n    if (allDates) {\r\n      return 'time';\r\n    }\r\n  }\r\n\r\n  const allNumbers = values.every(value => typeof value === 'number');\r\n  if (allNumbers) {\r\n    return 'linear';\r\n  }\r\n\r\n  return 'ordinal';\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewEncapsulation,\r\n  HostListener,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { scaleLinear, scalePoint, scaleTime } from 'd3-scale';\r\nimport { curveLinear } from 'd3-shape';\r\n\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nimport { id } from '../utils/id';\r\nimport { getUniqueXDomainValues, getScaleType } from '../common/domain.helper';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-area-chart',\r\n  template: `\r\n    <ngx-charts-chart\r\n      [view]=\"[width, height]\"\r\n      [showLegend]=\"legend\"\r\n      [legendOptions]=\"legendOptions\"\r\n      [activeEntries]=\"activeEntries\"\r\n      [animations]=\"animations\"\r\n      (legendLabelClick)=\"onClick($event)\"\r\n      (legendLabelActivate)=\"onActivate($event)\"\r\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\r\n    >\r\n      <svg:defs>\r\n        <svg:clipPath [attr.id]=\"clipPathId\">\r\n          <svg:rect\r\n            [attr.width]=\"dims.width + 10\"\r\n            [attr.height]=\"dims.height + 10\"\r\n            [attr.transform]=\"'translate(-5, -5)'\"\r\n          />\r\n        </svg:clipPath>\r\n      </svg:defs>\r\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\r\n        <svg:g\r\n          ngx-charts-x-axis\r\n          *ngIf=\"xAxis\"\r\n          [xScale]=\"xScale\"\r\n          [dims]=\"dims\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [showLabel]=\"showXAxisLabel\"\r\n          [labelText]=\"xAxisLabel\"\r\n          [trimTicks]=\"trimXAxisTicks\"\r\n          [rotateTicks]=\"rotateXAxisTicks\"\r\n          [maxTickLength]=\"maxXAxisTickLength\"\r\n          [tickFormatting]=\"xAxisTickFormatting\"\r\n          [ticks]=\"xAxisTicks\"\r\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-y-axis\r\n          *ngIf=\"yAxis\"\r\n          [yScale]=\"yScale\"\r\n          [dims]=\"dims\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [showLabel]=\"showYAxisLabel\"\r\n          [labelText]=\"yAxisLabel\"\r\n          [trimTicks]=\"trimYAxisTicks\"\r\n          [maxTickLength]=\"maxYAxisTickLength\"\r\n          [tickFormatting]=\"yAxisTickFormatting\"\r\n          [ticks]=\"yAxisTicks\"\r\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\r\n        ></svg:g>\r\n        <svg:g [attr.clip-path]=\"clipPath\">\r\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\r\n            <svg:g\r\n              ngx-charts-area-series\r\n              [xScale]=\"xScale\"\r\n              [yScale]=\"yScale\"\r\n              [baseValue]=\"baseValue\"\r\n              [colors]=\"colors\"\r\n              [data]=\"series\"\r\n              [activeEntries]=\"activeEntries\"\r\n              [scaleType]=\"scaleType\"\r\n              [gradient]=\"gradient\"\r\n              [curve]=\"curve\"\r\n              [animations]=\"animations\"\r\n            />\r\n          </svg:g>\r\n\r\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\r\n            <svg:g\r\n              ngx-charts-tooltip-area\r\n              [dims]=\"dims\"\r\n              [xSet]=\"xSet\"\r\n              [xScale]=\"xScale\"\r\n              [yScale]=\"yScale\"\r\n              [results]=\"results\"\r\n              [colors]=\"colors\"\r\n              [tooltipDisabled]=\"tooltipDisabled\"\r\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\r\n              (hover)=\"updateHoveredVertical($event)\"\r\n            />\r\n\r\n            <svg:g *ngFor=\"let series of results\">\r\n              <svg:g\r\n                ngx-charts-circle-series\r\n                [xScale]=\"xScale\"\r\n                [yScale]=\"yScale\"\r\n                [colors]=\"colors\"\r\n                [activeEntries]=\"activeEntries\"\r\n                [data]=\"series\"\r\n                [scaleType]=\"scaleType\"\r\n                [visibleValue]=\"hoveredVertical\"\r\n                [tooltipDisabled]=\"tooltipDisabled\"\r\n                [tooltipTemplate]=\"tooltipTemplate\"\r\n                (select)=\"onClick($event, series)\"\r\n                (activate)=\"onActivate($event)\"\r\n                (deactivate)=\"onDeactivate($event)\"\r\n              />\r\n            </svg:g>\r\n          </svg:g>\r\n        </svg:g>\r\n      </svg:g>\r\n      <svg:g\r\n        ngx-charts-timeline\r\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\r\n        [attr.transform]=\"timelineTransform\"\r\n        [results]=\"results\"\r\n        [view]=\"[timelineWidth, height]\"\r\n        [height]=\"timelineHeight\"\r\n        [scheme]=\"scheme\"\r\n        [customColors]=\"customColors\"\r\n        [legend]=\"legend\"\r\n        [scaleType]=\"scaleType\"\r\n        (onDomainChange)=\"updateDomain($event)\"\r\n      >\r\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\r\n          <svg:g\r\n            ngx-charts-area-series\r\n            [xScale]=\"timelineXScale\"\r\n            [yScale]=\"timelineYScale\"\r\n            [baseValue]=\"baseValue\"\r\n            [colors]=\"colors\"\r\n            [data]=\"series\"\r\n            [scaleType]=\"scaleType\"\r\n            [gradient]=\"gradient\"\r\n            [curve]=\"curve\"\r\n            [animations]=\"animations\"\r\n          />\r\n        </svg:g>\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['../common/base-chart.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AreaChartComponent extends BaseChartComponent {\r\n  @Input() legend;\r\n  @Input() legendTitle: string = 'Legend';\r\n  @Input() legendPosition: string = 'right';\r\n  @Input() state;\r\n  @Input() xAxis;\r\n  @Input() yAxis;\r\n  @Input() baseValue: any = 'auto';\r\n  @Input() autoScale;\r\n  @Input() showXAxisLabel;\r\n  @Input() showYAxisLabel;\r\n  @Input() xAxisLabel;\r\n  @Input() yAxisLabel;\r\n  @Input() timeline;\r\n  @Input() gradient: boolean;\r\n  @Input() showGridLines: boolean = true;\r\n  @Input() curve: any = curveLinear;\r\n  @Input() activeEntries: any[] = [];\r\n  @Input() schemeType: string;\r\n  @Input() trimXAxisTicks: boolean = true;\r\n  @Input() trimYAxisTicks: boolean = true;\r\n  @Input() rotateXAxisTicks: boolean = true;\r\n  @Input() maxXAxisTickLength: number = 16;\r\n  @Input() maxYAxisTickLength: number = 16;\r\n  @Input() xAxisTickFormatting: any;\r\n  @Input() yAxisTickFormatting: any;\r\n  @Input() xAxisTicks: any[];\r\n  @Input() yAxisTicks: any[];\r\n  @Input() roundDomains: boolean = false;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() xScaleMin: any;\r\n  @Input() xScaleMax: any;\r\n  @Input() yScaleMin: number;\r\n  @Input() yScaleMax: number;\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n  @ContentChild('seriesTooltipTemplate') seriesTooltipTemplate: TemplateRef<any>;\r\n\r\n  dims: ViewDimensions;\r\n  xSet: any;\r\n  xDomain: any;\r\n  yDomain: any;\r\n  seriesDomain: any;\r\n  xScale: any;\r\n  yScale: any;\r\n  transform: string;\r\n  colors: ColorHelper;\r\n  clipPathId: string;\r\n  clipPath: string;\r\n  scaleType: string;\r\n  series: any;\r\n  margin = [10, 20, 10, 20];\r\n  hoveredVertical: any; // the value of the x axis that is hovered over\r\n  xAxisHeight: number = 0;\r\n  yAxisWidth: number = 0;\r\n  filteredDomain: any;\r\n  legendOptions: any;\r\n\r\n  timelineWidth: any;\r\n  timelineHeight: number = 50;\r\n  timelineXScale: any;\r\n  timelineYScale: any;\r\n  timelineXDomain: any;\r\n  timelineTransform: any;\r\n  timelinePadding: number = 10;\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin,\r\n      showXAxis: this.xAxis,\r\n      showYAxis: this.yAxis,\r\n      xAxisHeight: this.xAxisHeight,\r\n      yAxisWidth: this.yAxisWidth,\r\n      showXLabel: this.showXAxisLabel,\r\n      showYLabel: this.showYAxisLabel,\r\n      showLegend: this.legend,\r\n      legendType: this.schemeType,\r\n      legendPosition: this.legendPosition\r\n    });\r\n\r\n    if (this.timeline) {\r\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\r\n    }\r\n\r\n    this.xDomain = this.getXDomain();\r\n    if (this.filteredDomain) {\r\n      this.xDomain = this.filteredDomain;\r\n    }\r\n\r\n    this.yDomain = this.getYDomain();\r\n    this.seriesDomain = this.getSeriesDomain();\r\n\r\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\r\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\r\n\r\n    this.updateTimeline();\r\n\r\n    this.setColors();\r\n    this.legendOptions = this.getLegendOptions();\r\n\r\n    this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\r\n\r\n    this.clipPathId = 'clip' + id().toString();\r\n    this.clipPath = `url(#${this.clipPathId})`;\r\n  }\r\n\r\n  updateTimeline(): void {\r\n    if (this.timeline) {\r\n      this.timelineWidth = this.dims.width;\r\n      this.timelineXDomain = this.getXDomain();\r\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\r\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\r\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\r\n    }\r\n  }\r\n\r\n  getXDomain(): any[] {\r\n    let values = getUniqueXDomainValues(this.results);\r\n\r\n    this.scaleType = getScaleType(values);\r\n    let domain = [];\r\n\r\n    if (this.scaleType === 'linear') {\r\n      values = values.map(v => Number(v));\r\n    }\r\n\r\n    let min;\r\n    let max;\r\n    if (this.scaleType === 'time' || this.scaleType === 'linear') {\r\n      min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\r\n\r\n      max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\r\n    }\r\n\r\n    if (this.scaleType === 'time') {\r\n      domain = [new Date(min), new Date(max)];\r\n      this.xSet = [...values].sort((a, b) => {\r\n        const aDate = a.getTime();\r\n        const bDate = b.getTime();\r\n        if (aDate > bDate) return 1;\r\n        if (bDate > aDate) return -1;\r\n        return 0;\r\n      });\r\n    } else if (this.scaleType === 'linear') {\r\n      domain = [min, max];\r\n      // Use compare function to sort numbers numerically\r\n      this.xSet = [...values].sort((a, b) => a - b);\r\n    } else {\r\n      domain = values;\r\n      this.xSet = values;\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getYDomain(): any[] {\r\n    const domain = [];\r\n\r\n    for (const results of this.results) {\r\n      for (const d of results.series) {\r\n        if (!domain.includes(d.value)) {\r\n          domain.push(d.value);\r\n        }\r\n      }\r\n    }\r\n\r\n    const values = [...domain];\r\n    if (!this.autoScale) {\r\n      values.push(0);\r\n    }\r\n    if (this.baseValue !== 'auto') {\r\n      values.push(this.baseValue);\r\n    }\r\n\r\n    const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\r\n\r\n    const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\r\n\r\n    return [min, max];\r\n  }\r\n\r\n  getSeriesDomain(): any[] {\r\n    return this.results.map(d => d.name);\r\n  }\r\n\r\n  getXScale(domain, width): any {\r\n    let scale;\r\n\r\n    if (this.scaleType === 'time') {\r\n      scale = scaleTime();\r\n    } else if (this.scaleType === 'linear') {\r\n      scale = scaleLinear();\r\n    } else if (this.scaleType === 'ordinal') {\r\n      scale = scalePoint().padding(0.1);\r\n    }\r\n\r\n    scale.range([0, width]).domain(domain);\r\n\r\n    return this.roundDomains ? scale.nice() : scale;\r\n  }\r\n\r\n  getYScale(domain, height): any {\r\n    const scale = scaleLinear().range([height, 0]).domain(domain);\r\n    return this.roundDomains ? scale.nice() : scale;\r\n  }\r\n\r\n  getScaleType(values): string {\r\n    let date = true;\r\n    let num = true;\r\n    for (const value of values) {\r\n      if (!this.isDate(value)) {\r\n        date = false;\r\n      }\r\n      if (typeof value !== 'number') {\r\n        num = false;\r\n      }\r\n    }\r\n\r\n    if (date) {\r\n      return 'time';\r\n    }\r\n\r\n    if (num) {\r\n      return 'linear';\r\n    }\r\n\r\n    return 'ordinal';\r\n  }\r\n\r\n  isDate(value): boolean {\r\n    if (value instanceof Date) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  updateDomain(domain): void {\r\n    this.filteredDomain = domain;\r\n    this.xDomain = this.filteredDomain;\r\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\r\n  }\r\n\r\n  updateHoveredVertical(item): void {\r\n    this.hoveredVertical = item.value;\r\n    this.deactivateAll();\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  hideCircles(): void {\r\n    this.hoveredVertical = null;\r\n    this.deactivateAll();\r\n  }\r\n\r\n  onClick(data, series?): void {\r\n    if (series) {\r\n      data.series = series.name;\r\n    }\r\n\r\n    this.select.emit(data);\r\n  }\r\n\r\n  trackBy(index, item): string {\r\n    return item.name;\r\n  }\r\n\r\n  setColors(): void {\r\n    let domain;\r\n    if (this.schemeType === 'ordinal') {\r\n      domain = this.seriesDomain;\r\n    } else {\r\n      domain = this.yDomain;\r\n    }\r\n\r\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\r\n  }\r\n\r\n  getLegendOptions() {\r\n    const opts = {\r\n      scaleType: this.schemeType,\r\n      colors: undefined,\r\n      domain: [],\r\n      title: undefined,\r\n      position: this.legendPosition\r\n    };\r\n    if (opts.scaleType === 'ordinal') {\r\n      opts.domain = this.seriesDomain;\r\n      opts.colors = this.colors;\r\n      opts.title = this.legendTitle;\r\n    } else {\r\n      opts.domain = this.yDomain;\r\n      opts.colors = this.colors.scale;\r\n    }\r\n    return opts;\r\n  }\r\n\r\n  updateYAxisWidth({ width }): void {\r\n    this.yAxisWidth = width;\r\n    this.update();\r\n  }\r\n\r\n  updateXAxisHeight({ height }): void {\r\n    this.xAxisHeight = height;\r\n    this.update();\r\n  }\r\n\r\n  onActivate(item) {\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value;\r\n    });\r\n    if (idx > -1) {\r\n      return;\r\n    }\r\n\r\n    this.activeEntries = [item, ...this.activeEntries];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(item) {\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value;\r\n    });\r\n\r\n    this.activeEntries.splice(idx, 1);\r\n    this.activeEntries = [...this.activeEntries];\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  deactivateAll() {\r\n    this.activeEntries = [...this.activeEntries];\r\n    for (const entry of this.activeEntries) {\r\n      this.deactivate.emit({ value: entry, entries: [] });\r\n    }\r\n    this.activeEntries = [];\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  HostListener,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { scaleLinear, scalePoint, scaleTime } from 'd3-scale';\r\nimport { curveLinear } from 'd3-shape';\r\n\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nimport { id } from '../utils/id';\r\nimport { getUniqueXDomainValues, getScaleType } from '../common/domain.helper';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-area-chart-normalized',\r\n  template: `\r\n    <ngx-charts-chart\r\n      [view]=\"[width, height]\"\r\n      [showLegend]=\"legend\"\r\n      [legendOptions]=\"legendOptions\"\r\n      [activeEntries]=\"activeEntries\"\r\n      [animations]=\"animations\"\r\n      (legendLabelClick)=\"onClick($event)\"\r\n      (legendLabelActivate)=\"onActivate($event)\"\r\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\r\n    >\r\n      <svg:defs>\r\n        <svg:clipPath [attr.id]=\"clipPathId\">\r\n          <svg:rect\r\n            [attr.width]=\"dims.width + 10\"\r\n            [attr.height]=\"dims.height + 10\"\r\n            [attr.transform]=\"'translate(-5, -5)'\"\r\n          />\r\n        </svg:clipPath>\r\n      </svg:defs>\r\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\r\n        <svg:g\r\n          ngx-charts-x-axis\r\n          *ngIf=\"xAxis\"\r\n          [xScale]=\"xScale\"\r\n          [dims]=\"dims\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [showLabel]=\"showXAxisLabel\"\r\n          [labelText]=\"xAxisLabel\"\r\n          [trimTicks]=\"trimXAxisTicks\"\r\n          [rotateTicks]=\"rotateXAxisTicks\"\r\n          [maxTickLength]=\"maxXAxisTickLength\"\r\n          [tickFormatting]=\"xAxisTickFormatting\"\r\n          [ticks]=\"xAxisTicks\"\r\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-y-axis\r\n          *ngIf=\"yAxis\"\r\n          [yScale]=\"yScale\"\r\n          [dims]=\"dims\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [showLabel]=\"showYAxisLabel\"\r\n          [labelText]=\"yAxisLabel\"\r\n          [trimTicks]=\"trimYAxisTicks\"\r\n          [maxTickLength]=\"maxYAxisTickLength\"\r\n          [tickFormatting]=\"yAxisTickFormatting\"\r\n          [ticks]=\"yAxisTicks\"\r\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\r\n        ></svg:g>\r\n        <svg:g [attr.clip-path]=\"clipPath\">\r\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\r\n            <svg:g\r\n              ngx-charts-area-series\r\n              [xScale]=\"xScale\"\r\n              [yScale]=\"yScale\"\r\n              [colors]=\"colors\"\r\n              [data]=\"series\"\r\n              [scaleType]=\"scaleType\"\r\n              [activeEntries]=\"activeEntries\"\r\n              [gradient]=\"gradient\"\r\n              normalized=\"true\"\r\n              [curve]=\"curve\"\r\n              [animations]=\"animations\"\r\n            />\r\n          </svg:g>\r\n\r\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\r\n            <svg:g\r\n              ngx-charts-tooltip-area\r\n              [dims]=\"dims\"\r\n              [xSet]=\"xSet\"\r\n              [xScale]=\"xScale\"\r\n              [yScale]=\"yScale\"\r\n              [results]=\"results\"\r\n              [colors]=\"colors\"\r\n              [showPercentage]=\"true\"\r\n              [tooltipDisabled]=\"tooltipDisabled\"\r\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\r\n              (hover)=\"updateHoveredVertical($event)\"\r\n            />\r\n\r\n            <svg:g *ngFor=\"let series of results\">\r\n              <svg:g\r\n                ngx-charts-circle-series\r\n                type=\"stacked\"\r\n                [xScale]=\"xScale\"\r\n                [yScale]=\"yScale\"\r\n                [colors]=\"colors\"\r\n                [activeEntries]=\"activeEntries\"\r\n                [data]=\"series\"\r\n                [scaleType]=\"scaleType\"\r\n                [visibleValue]=\"hoveredVertical\"\r\n                [tooltipDisabled]=\"tooltipDisabled\"\r\n                [tooltipTemplate]=\"tooltipTemplate\"\r\n                (select)=\"onClick($event, series)\"\r\n                (activate)=\"onActivate($event)\"\r\n                (deactivate)=\"onDeactivate($event)\"\r\n              />\r\n            </svg:g>\r\n          </svg:g>\r\n        </svg:g>\r\n      </svg:g>\r\n      <svg:g\r\n        ngx-charts-timeline\r\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\r\n        [attr.transform]=\"timelineTransform\"\r\n        [results]=\"results\"\r\n        [view]=\"[timelineWidth, height]\"\r\n        [height]=\"timelineHeight\"\r\n        [scheme]=\"scheme\"\r\n        [customColors]=\"customColors\"\r\n        [legend]=\"legend\"\r\n        [scaleType]=\"scaleType\"\r\n        (onDomainChange)=\"updateDomain($event)\"\r\n      >\r\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\r\n          <svg:g\r\n            ngx-charts-area-series\r\n            [xScale]=\"timelineXScale\"\r\n            [yScale]=\"timelineYScale\"\r\n            [colors]=\"colors\"\r\n            [data]=\"series\"\r\n            [scaleType]=\"scaleType\"\r\n            [gradient]=\"gradient\"\r\n            normalized=\"true\"\r\n            [curve]=\"curve\"\r\n            [animations]=\"animations\"\r\n          />\r\n        </svg:g>\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['../common/base-chart.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AreaChartNormalizedComponent extends BaseChartComponent {\r\n  @Input() legend = false;\r\n  @Input() legendTitle: string = 'Legend';\r\n  @Input() legendPosition: string = 'right';\r\n  @Input() xAxis;\r\n  @Input() yAxis;\r\n  @Input() showXAxisLabel;\r\n  @Input() showYAxisLabel;\r\n  @Input() xAxisLabel;\r\n  @Input() yAxisLabel;\r\n  @Input() timeline;\r\n  @Input() gradient;\r\n  @Input() showGridLines: boolean = true;\r\n  @Input() curve: any = curveLinear;\r\n  @Input() activeEntries: any[] = [];\r\n  @Input() schemeType: string;\r\n  @Input() trimXAxisTicks: boolean = true;\r\n  @Input() trimYAxisTicks: boolean = true;\r\n  @Input() rotateXAxisTicks: boolean = true;\r\n  @Input() maxXAxisTickLength: number = 16;\r\n  @Input() maxYAxisTickLength: number = 16;\r\n  @Input() xAxisTickFormatting: any;\r\n  @Input() yAxisTickFormatting: any;\r\n  @Input() xAxisTicks: any[];\r\n  @Input() yAxisTicks: any[];\r\n  @Input() roundDomains: boolean = false;\r\n  @Input() tooltipDisabled: boolean = false;\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n  @ContentChild('seriesTooltipTemplate') seriesTooltipTemplate: TemplateRef<any>;\r\n\r\n  dims: ViewDimensions;\r\n  scaleType: string;\r\n  xDomain: any[];\r\n  xSet: any[]; // the set of all values on the X Axis\r\n  yDomain: any[];\r\n  seriesDomain: any;\r\n  xScale: any;\r\n  yScale: any;\r\n  transform: string;\r\n  clipPathId: string;\r\n  clipPath: string;\r\n  colors: ColorHelper;\r\n  margin = [10, 20, 10, 20];\r\n  tooltipAreas: any[];\r\n  hoveredVertical: any; // the value of the x axis that is hovered over\r\n  xAxisHeight: number = 0;\r\n  yAxisWidth: number = 0;\r\n  filteredDomain: any;\r\n  legendOptions: any;\r\n\r\n  timelineWidth: any;\r\n  timelineHeight: number = 50;\r\n  timelineXScale: any;\r\n  timelineYScale: any;\r\n  timelineXDomain: any;\r\n  timelineTransform: any;\r\n  timelinePadding: number = 10;\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin,\r\n      showXAxis: this.xAxis,\r\n      showYAxis: this.yAxis,\r\n      xAxisHeight: this.xAxisHeight,\r\n      yAxisWidth: this.yAxisWidth,\r\n      showXLabel: this.showXAxisLabel,\r\n      showYLabel: this.showYAxisLabel,\r\n      showLegend: this.legend,\r\n      legendType: this.schemeType,\r\n      legendPosition: this.legendPosition\r\n    });\r\n\r\n    if (this.timeline) {\r\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\r\n    }\r\n\r\n    this.xDomain = this.getXDomain();\r\n    if (this.filteredDomain) {\r\n      this.xDomain = this.filteredDomain;\r\n    }\r\n\r\n    this.yDomain = this.getYDomain();\r\n    this.seriesDomain = this.getSeriesDomain();\r\n\r\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\r\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\r\n\r\n    for (let i = 0; i < this.xSet.length; i++) {\r\n      const val = this.xSet[i];\r\n      let d0 = 0;\r\n\r\n      let total = 0;\r\n      for (const group of this.results) {\r\n        const d = group.series.find(item => {\r\n          let a = item.name;\r\n          let b = val;\r\n          if (this.scaleType === 'time') {\r\n            a = a.valueOf();\r\n            b = b.valueOf();\r\n          }\r\n          return a === b;\r\n        });\r\n        if (d) {\r\n          total += d.value;\r\n        }\r\n      }\r\n\r\n      for (const group of this.results) {\r\n        let d = group.series.find(item => {\r\n          let a = item.name;\r\n          let b = val;\r\n          if (this.scaleType === 'time') {\r\n            a = a.valueOf();\r\n            b = b.valueOf();\r\n          }\r\n          return a === b;\r\n        });\r\n\r\n        if (d) {\r\n          d.d0 = d0;\r\n          d.d1 = d0 + d.value;\r\n          d0 += d.value;\r\n        } else {\r\n          d = {\r\n            name: val,\r\n            value: 0,\r\n            d0,\r\n            d1: d0\r\n          };\r\n          group.series.push(d);\r\n        }\r\n\r\n        if (total > 0) {\r\n          d.d0 = (d.d0 * 100) / total;\r\n          d.d1 = (d.d1 * 100) / total;\r\n        } else {\r\n          d.d0 = 0;\r\n          d.d1 = 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.updateTimeline();\r\n\r\n    this.setColors();\r\n    this.legendOptions = this.getLegendOptions();\r\n\r\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\r\n\r\n    this.clipPathId = 'clip' + id().toString();\r\n    this.clipPath = `url(#${this.clipPathId})`;\r\n  }\r\n\r\n  updateTimeline(): void {\r\n    if (this.timeline) {\r\n      this.timelineWidth = this.dims.width;\r\n      this.timelineXDomain = this.getXDomain();\r\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\r\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\r\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\r\n    }\r\n  }\r\n\r\n  getXDomain(): any[] {\r\n    let values = getUniqueXDomainValues(this.results);\r\n\r\n    this.scaleType = getScaleType(values);\r\n    let domain = [];\r\n\r\n    if (this.scaleType === 'time') {\r\n      const min = Math.min(...values);\r\n      const max = Math.max(...values);\r\n      domain = [new Date(min), new Date(max)];\r\n      this.xSet = [...values].sort((a, b) => {\r\n        const aDate = a.getTime();\r\n        const bDate = b.getTime();\r\n        if (aDate > bDate) return 1;\r\n        if (bDate > aDate) return -1;\r\n        return 0;\r\n      });\r\n    } else if (this.scaleType === 'linear') {\r\n      values = values.map(v => Number(v));\r\n      const min = Math.min(...values);\r\n      const max = Math.max(...values);\r\n      domain = [min, max];\r\n      // Use compare function to sort numbers numerically\r\n      this.xSet = [...values].sort((a, b) => a - b);\r\n    } else {\r\n      domain = values;\r\n      this.xSet = values;\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getYDomain(): any[] {\r\n    return [0, 100];\r\n  }\r\n\r\n  getSeriesDomain(): any[] {\r\n    return this.results.map(d => d.name);\r\n  }\r\n\r\n  getXScale(domain, width): any {\r\n    let scale;\r\n\r\n    if (this.scaleType === 'time') {\r\n      scale = scaleTime();\r\n    } else if (this.scaleType === 'linear') {\r\n      scale = scaleLinear();\r\n    } else if (this.scaleType === 'ordinal') {\r\n      scale = scalePoint().padding(0.1);\r\n    }\r\n\r\n    scale.range([0, width]).domain(domain);\r\n\r\n    return this.roundDomains ? scale.nice() : scale;\r\n  }\r\n\r\n  getYScale(domain, height): any {\r\n    const scale = scaleLinear().range([height, 0]).domain(domain);\r\n    return this.roundDomains ? scale.nice() : scale;\r\n  }\r\n\r\n  updateDomain(domain): void {\r\n    this.filteredDomain = domain;\r\n    this.xDomain = this.filteredDomain;\r\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\r\n  }\r\n\r\n  updateHoveredVertical(item): void {\r\n    this.hoveredVertical = item.value;\r\n    this.deactivateAll();\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  hideCircles(): void {\r\n    this.hoveredVertical = null;\r\n    this.deactivateAll();\r\n  }\r\n\r\n  onClick(data, series?): void {\r\n    if (series) {\r\n      data.series = series.name;\r\n    }\r\n\r\n    this.select.emit(data);\r\n  }\r\n\r\n  trackBy(index, item): string {\r\n    return item.name;\r\n  }\r\n\r\n  setColors(): void {\r\n    let domain;\r\n    if (this.schemeType === 'ordinal') {\r\n      domain = this.seriesDomain;\r\n    } else {\r\n      domain = this.yDomain;\r\n    }\r\n\r\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\r\n  }\r\n\r\n  getLegendOptions() {\r\n    const opts = {\r\n      scaleType: this.schemeType,\r\n      colors: undefined,\r\n      domain: [],\r\n      title: undefined,\r\n      position: this.legendPosition\r\n    };\r\n    if (opts.scaleType === 'ordinal') {\r\n      opts.domain = this.seriesDomain;\r\n      opts.colors = this.colors;\r\n      opts.title = this.legendTitle;\r\n    } else {\r\n      opts.domain = this.yDomain;\r\n      opts.colors = this.colors.scale;\r\n    }\r\n    return opts;\r\n  }\r\n\r\n  updateYAxisWidth({ width }): void {\r\n    this.yAxisWidth = width;\r\n    this.update();\r\n  }\r\n\r\n  updateXAxisHeight({ height }): void {\r\n    this.xAxisHeight = height;\r\n    this.update();\r\n  }\r\n\r\n  onActivate(item) {\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value;\r\n    });\r\n    if (idx > -1) {\r\n      return;\r\n    }\r\n\r\n    this.activeEntries = [item, ...this.activeEntries];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(item) {\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value;\r\n    });\r\n\r\n    this.activeEntries.splice(idx, 1);\r\n    this.activeEntries = [...this.activeEntries];\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  deactivateAll() {\r\n    this.activeEntries = [...this.activeEntries];\r\n    for (const entry of this.activeEntries) {\r\n      this.deactivate.emit({ value: entry, entries: [] });\r\n    }\r\n    this.activeEntries = [];\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewEncapsulation,\r\n  HostListener,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { scaleLinear, scalePoint, scaleTime } from 'd3-scale';\r\nimport { curveLinear } from 'd3-shape';\r\n\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nimport { id } from '../utils/id';\r\nimport { getUniqueXDomainValues, getScaleType } from '../common/domain.helper';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-area-chart-stacked',\r\n  template: `\r\n    <ngx-charts-chart\r\n      [view]=\"[width, height]\"\r\n      [showLegend]=\"legend\"\r\n      [legendOptions]=\"legendOptions\"\r\n      [activeEntries]=\"activeEntries\"\r\n      [animations]=\"animations\"\r\n      (legendLabelClick)=\"onClick($event)\"\r\n      (legendLabelActivate)=\"onActivate($event)\"\r\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\r\n    >\r\n      <svg:defs>\r\n        <svg:clipPath [attr.id]=\"clipPathId\">\r\n          <svg:rect\r\n            [attr.width]=\"dims.width + 10\"\r\n            [attr.height]=\"dims.height + 10\"\r\n            [attr.transform]=\"'translate(-5, -5)'\"\r\n          />\r\n        </svg:clipPath>\r\n      </svg:defs>\r\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\r\n        <svg:g\r\n          ngx-charts-x-axis\r\n          *ngIf=\"xAxis\"\r\n          [xScale]=\"xScale\"\r\n          [dims]=\"dims\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [showLabel]=\"showXAxisLabel\"\r\n          [labelText]=\"xAxisLabel\"\r\n          [trimTicks]=\"trimXAxisTicks\"\r\n          [rotateTicks]=\"rotateXAxisTicks\"\r\n          [maxTickLength]=\"maxXAxisTickLength\"\r\n          [tickFormatting]=\"xAxisTickFormatting\"\r\n          [ticks]=\"xAxisTicks\"\r\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-y-axis\r\n          *ngIf=\"yAxis\"\r\n          [yScale]=\"yScale\"\r\n          [dims]=\"dims\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [showLabel]=\"showYAxisLabel\"\r\n          [labelText]=\"yAxisLabel\"\r\n          [trimTicks]=\"trimYAxisTicks\"\r\n          [maxTickLength]=\"maxYAxisTickLength\"\r\n          [tickFormatting]=\"yAxisTickFormatting\"\r\n          [ticks]=\"yAxisTicks\"\r\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\r\n        ></svg:g>\r\n        <svg:g [attr.clip-path]=\"clipPath\">\r\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\r\n            <svg:g\r\n              ngx-charts-area-series\r\n              [xScale]=\"xScale\"\r\n              [yScale]=\"yScale\"\r\n              [colors]=\"colors\"\r\n              [data]=\"series\"\r\n              [scaleType]=\"scaleType\"\r\n              [gradient]=\"gradient\"\r\n              [activeEntries]=\"activeEntries\"\r\n              stacked=\"true\"\r\n              [curve]=\"curve\"\r\n              [animations]=\"animations\"\r\n            />\r\n          </svg:g>\r\n\r\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\r\n            <svg:g\r\n              ngx-charts-tooltip-area\r\n              [dims]=\"dims\"\r\n              [xSet]=\"xSet\"\r\n              [xScale]=\"xScale\"\r\n              [yScale]=\"yScale\"\r\n              [results]=\"results\"\r\n              [colors]=\"colors\"\r\n              [tooltipDisabled]=\"tooltipDisabled\"\r\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\r\n              (hover)=\"updateHoveredVertical($event)\"\r\n            />\r\n\r\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\r\n              <svg:g\r\n                ngx-charts-circle-series\r\n                type=\"stacked\"\r\n                [xScale]=\"xScale\"\r\n                [yScale]=\"yScale\"\r\n                [colors]=\"colors\"\r\n                [activeEntries]=\"activeEntries\"\r\n                [data]=\"series\"\r\n                [scaleType]=\"scaleType\"\r\n                [visibleValue]=\"hoveredVertical\"\r\n                [tooltipDisabled]=\"tooltipDisabled\"\r\n                [tooltipTemplate]=\"tooltipTemplate\"\r\n                (select)=\"onClick($event, series)\"\r\n                (activate)=\"onActivate($event)\"\r\n                (deactivate)=\"onDeactivate($event)\"\r\n              />\r\n            </svg:g>\r\n          </svg:g>\r\n        </svg:g>\r\n      </svg:g>\r\n      <svg:g\r\n        ngx-charts-timeline\r\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\r\n        [attr.transform]=\"timelineTransform\"\r\n        [results]=\"results\"\r\n        [view]=\"[timelineWidth, height]\"\r\n        [height]=\"timelineHeight\"\r\n        [scheme]=\"scheme\"\r\n        [customColors]=\"customColors\"\r\n        [legend]=\"legend\"\r\n        [scaleType]=\"scaleType\"\r\n        (onDomainChange)=\"updateDomain($event)\"\r\n      >\r\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\r\n          <svg:g\r\n            ngx-charts-area-series\r\n            [xScale]=\"timelineXScale\"\r\n            [yScale]=\"timelineYScale\"\r\n            [colors]=\"colors\"\r\n            [data]=\"series\"\r\n            [scaleType]=\"scaleType\"\r\n            [gradient]=\"gradient\"\r\n            stacked=\"true\"\r\n            [curve]=\"curve\"\r\n            [animations]=\"animations\"\r\n          />\r\n        </svg:g>\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['../common/base-chart.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class AreaChartStackedComponent extends BaseChartComponent {\r\n  @Input() legend = false;\r\n  @Input() legendTitle: string = 'Legend';\r\n  @Input() legendPosition: string = 'right';\r\n  @Input() xAxis;\r\n  @Input() yAxis;\r\n  @Input() showXAxisLabel;\r\n  @Input() showYAxisLabel;\r\n  @Input() xAxisLabel;\r\n  @Input() yAxisLabel;\r\n  @Input() timeline;\r\n  @Input() gradient;\r\n  @Input() showGridLines: boolean = true;\r\n  @Input() curve: any = curveLinear;\r\n  @Input() activeEntries: any[] = [];\r\n  @Input() schemeType: string;\r\n  @Input() trimXAxisTicks: boolean = true;\r\n  @Input() trimYAxisTicks: boolean = true;\r\n  @Input() rotateXAxisTicks: boolean = true;\r\n  @Input() maxXAxisTickLength: number = 16;\r\n  @Input() maxYAxisTickLength: number = 16;\r\n  @Input() xAxisTickFormatting: any;\r\n  @Input() yAxisTickFormatting: any;\r\n  @Input() xAxisTicks: any[];\r\n  @Input() yAxisTicks: any[];\r\n  @Input() roundDomains: boolean = false;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() xScaleMin: any;\r\n  @Input() xScaleMax: any;\r\n  @Input() yScaleMin: number;\r\n  @Input() yScaleMax: number;\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n  @ContentChild('seriesTooltipTemplate') seriesTooltipTemplate: TemplateRef<any>;\r\n\r\n  dims: ViewDimensions;\r\n  scaleType: string;\r\n  xDomain: any[];\r\n  xSet: any[]; // the set of all values on the X Axis\r\n  yDomain: any[];\r\n  seriesDomain: any;\r\n  xScale: any;\r\n  yScale: any;\r\n  transform: string;\r\n  clipPathId: string;\r\n  clipPath: string;\r\n  colors: ColorHelper;\r\n  margin = [10, 20, 10, 20];\r\n  hoveredVertical: any; // the value of the x axis that is hovered over\r\n  xAxisHeight: number = 0;\r\n  yAxisWidth: number = 0;\r\n  filteredDomain: any;\r\n  legendOptions: any;\r\n\r\n  timelineWidth: any;\r\n  timelineHeight: number = 50;\r\n  timelineXScale: any;\r\n  timelineYScale: any;\r\n  timelineXDomain: any;\r\n  timelineTransform: any;\r\n  timelinePadding: number = 10;\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin,\r\n      showXAxis: this.xAxis,\r\n      showYAxis: this.yAxis,\r\n      xAxisHeight: this.xAxisHeight,\r\n      yAxisWidth: this.yAxisWidth,\r\n      showXLabel: this.showXAxisLabel,\r\n      showYLabel: this.showYAxisLabel,\r\n      showLegend: this.legend,\r\n      legendType: this.schemeType,\r\n      legendPosition: this.legendPosition\r\n    });\r\n\r\n    if (this.timeline) {\r\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\r\n    }\r\n\r\n    this.xDomain = this.getXDomain();\r\n    if (this.filteredDomain) {\r\n      this.xDomain = this.filteredDomain;\r\n    }\r\n\r\n    this.yDomain = this.getYDomain();\r\n    this.seriesDomain = this.getSeriesDomain();\r\n\r\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\r\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\r\n\r\n    for (let i = 0; i < this.xSet.length; i++) {\r\n      const val = this.xSet[i];\r\n      let d0 = 0;\r\n      for (const group of this.results) {\r\n        let d = group.series.find(item => {\r\n          let a = item.name;\r\n          let b = val;\r\n          if (this.scaleType === 'time') {\r\n            a = a.valueOf();\r\n            b = b.valueOf();\r\n          }\r\n          return a === b;\r\n        });\r\n\r\n        if (d) {\r\n          d.d0 = d0;\r\n          d.d1 = d0 + d.value;\r\n          d0 += d.value;\r\n        } else {\r\n          d = {\r\n            name: val,\r\n            value: 0,\r\n            d0,\r\n            d1: d0\r\n          };\r\n          group.series.push(d);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.updateTimeline();\r\n\r\n    this.setColors();\r\n    this.legendOptions = this.getLegendOptions();\r\n\r\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\r\n\r\n    this.clipPathId = 'clip' + id().toString();\r\n    this.clipPath = `url(#${this.clipPathId})`;\r\n  }\r\n\r\n  updateTimeline(): void {\r\n    if (this.timeline) {\r\n      this.timelineWidth = this.dims.width;\r\n      this.timelineXDomain = this.getXDomain();\r\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\r\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\r\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\r\n    }\r\n  }\r\n\r\n  getXDomain(): any[] {\r\n    let values = getUniqueXDomainValues(this.results);\r\n\r\n    this.scaleType = getScaleType(values);\r\n    let domain = [];\r\n\r\n    if (this.scaleType === 'linear') {\r\n      values = values.map(v => Number(v));\r\n    }\r\n\r\n    let min;\r\n    let max;\r\n    if (this.scaleType === 'time' || this.scaleType === 'linear') {\r\n      min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\r\n\r\n      max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\r\n    }\r\n\r\n    if (this.scaleType === 'time') {\r\n      domain = [new Date(min), new Date(max)];\r\n      this.xSet = [...values].sort((a, b) => {\r\n        const aDate = a.getTime();\r\n        const bDate = b.getTime();\r\n        if (aDate > bDate) return 1;\r\n        if (bDate > aDate) return -1;\r\n        return 0;\r\n      });\r\n    } else if (this.scaleType === 'linear') {\r\n      domain = [min, max];\r\n      // Use compare function to sort numbers numerically\r\n      this.xSet = [...values].sort((a, b) => a - b);\r\n    } else {\r\n      domain = values;\r\n      this.xSet = values;\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getYDomain(): any[] {\r\n    const domain = [];\r\n\r\n    for (let i = 0; i < this.xSet.length; i++) {\r\n      const val = this.xSet[i];\r\n      let sum = 0;\r\n      for (const group of this.results) {\r\n        const d = group.series.find(item => {\r\n          let a = item.name;\r\n          let b = val;\r\n          if (this.scaleType === 'time') {\r\n            a = a.valueOf();\r\n            b = b.valueOf();\r\n          }\r\n          return a === b;\r\n        });\r\n\r\n        if (d) {\r\n          sum += d.value;\r\n        }\r\n      }\r\n\r\n      domain.push(sum);\r\n    }\r\n\r\n    const min = this.yScaleMin ? this.yScaleMin : Math.min(0, ...domain);\r\n\r\n    const max = this.yScaleMax ? this.yScaleMax : Math.max(...domain);\r\n    return [min, max];\r\n  }\r\n\r\n  getSeriesDomain(): any[] {\r\n    return this.results.map(d => d.name);\r\n  }\r\n\r\n  getXScale(domain, width): any {\r\n    let scale;\r\n\r\n    if (this.scaleType === 'time') {\r\n      scale = scaleTime();\r\n    } else if (this.scaleType === 'linear') {\r\n      scale = scaleLinear();\r\n    } else if (this.scaleType === 'ordinal') {\r\n      scale = scalePoint().padding(0.1);\r\n    }\r\n\r\n    scale.range([0, width]).domain(domain);\r\n\r\n    return this.roundDomains ? scale.nice() : scale;\r\n  }\r\n\r\n  getYScale(domain, height): any {\r\n    const scale = scaleLinear().range([height, 0]).domain(domain);\r\n    return this.roundDomains ? scale.nice() : scale;\r\n  }\r\n\r\n  updateDomain(domain): void {\r\n    this.filteredDomain = domain;\r\n    this.xDomain = this.filteredDomain;\r\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\r\n  }\r\n\r\n  updateHoveredVertical(item) {\r\n    this.hoveredVertical = item.value;\r\n    this.deactivateAll();\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  hideCircles(): void {\r\n    this.hoveredVertical = null;\r\n    this.deactivateAll();\r\n  }\r\n\r\n  onClick(data, series?): void {\r\n    if (series) {\r\n      data.series = series.name;\r\n    }\r\n\r\n    this.select.emit(data);\r\n  }\r\n\r\n  trackBy(index, item): string {\r\n    return item.name;\r\n  }\r\n\r\n  setColors(): void {\r\n    let domain;\r\n    if (this.schemeType === 'ordinal') {\r\n      domain = this.seriesDomain;\r\n    } else {\r\n      domain = this.yDomain;\r\n    }\r\n\r\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\r\n  }\r\n\r\n  getLegendOptions() {\r\n    const opts = {\r\n      scaleType: this.schemeType,\r\n      colors: undefined,\r\n      domain: [],\r\n      title: undefined,\r\n      position: this.legendPosition\r\n    };\r\n    if (opts.scaleType === 'ordinal') {\r\n      opts.domain = this.seriesDomain;\r\n      opts.colors = this.colors;\r\n      opts.title = this.legendTitle;\r\n    } else {\r\n      opts.domain = this.yDomain;\r\n      opts.colors = this.colors.scale;\r\n    }\r\n    return opts;\r\n  }\r\n\r\n  updateYAxisWidth({ width }): void {\r\n    this.yAxisWidth = width;\r\n    this.update();\r\n  }\r\n\r\n  updateXAxisHeight({ height }): void {\r\n    this.xAxisHeight = height;\r\n    this.update();\r\n  }\r\n\r\n  onActivate(item) {\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value;\r\n    });\r\n    if (idx > -1) {\r\n      return;\r\n    }\r\n\r\n    this.activeEntries = [item, ...this.activeEntries];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(item) {\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value;\r\n    });\r\n\r\n    this.activeEntries.splice(idx, 1);\r\n    this.activeEntries = [...this.activeEntries];\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  deactivateAll() {\r\n    this.activeEntries = [...this.activeEntries];\r\n    for (const entry of this.activeEntries) {\r\n      this.deactivate.emit({ value: entry, entries: [] });\r\n    }\r\n    this.activeEntries = [];\r\n  }\r\n}\r\n","export function sortLinear(data, property, direction = 'asc') {\r\n  return data.sort((a, b) => {\r\n    if (direction === 'asc') {\r\n      return a[property] - b[property];\r\n    } else {\r\n      return b[property] - a[property];\r\n    }\r\n  });\r\n}\r\n\r\nexport function sortByDomain(data, property, direction = 'asc', domain) {\r\n  return data.sort((a, b) => {\r\n    const aVal = a[property];\r\n    const bVal = b[property];\r\n\r\n    const aIdx = domain.indexOf(aVal);\r\n    const bIdx = domain.indexOf(bVal);\r\n\r\n    if (direction === 'asc') {\r\n      return aIdx - bIdx;\r\n    } else {\r\n      return bIdx - aIdx;\r\n    }\r\n  });\r\n}\r\n\r\nexport function sortByTime(data, property, direction = 'asc') {\r\n  return data.sort((a, b) => {\r\n    const aDate = a[property].getTime();\r\n    const bDate = b[property].getTime();\r\n\r\n    if (direction === 'asc') {\r\n      if (aDate > bDate) return 1;\r\n      if (bDate > aDate) return -1;\r\n      return 0;\r\n    } else {\r\n      if (aDate > bDate) return -1;\r\n      if (bDate > aDate) return 1;\r\n      return 0;\r\n    }\r\n  });\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { area } from 'd3-shape';\r\n\r\nimport { sortLinear, sortByTime, sortByDomain } from '../utils/sort';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-area-series]',\r\n  template: `\r\n    <svg:g\r\n      ngx-charts-area\r\n      class=\"area-series\"\r\n      [data]=\"data\"\r\n      [path]=\"path\"\r\n      [fill]=\"colors.getColor(data.name)\"\r\n      [stops]=\"gradientStops\"\r\n      [startingPath]=\"startingPath\"\r\n      [opacity]=\"opacity\"\r\n      [gradient]=\"gradient || hasGradient\"\r\n      [animations]=\"animations\"\r\n      [class.active]=\"isActive(data)\"\r\n      [class.inactive]=\"isInactive(data)\"\r\n    />\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AreaSeriesComponent implements OnChanges {\r\n  @Input() data;\r\n  @Input() xScale;\r\n  @Input() yScale;\r\n  @Input() baseValue: any = 'auto';\r\n  @Input() colors;\r\n  @Input() scaleType;\r\n  @Input() stacked: boolean = false;\r\n  @Input() normalized: boolean = false;\r\n  @Input() gradient;\r\n  @Input() curve;\r\n  @Input() activeEntries: any[];\r\n  @Input() animations: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n\r\n  opacity: number;\r\n  path: string;\r\n  startingPath: string;\r\n\r\n  hasGradient: boolean;\r\n  gradientStops: any[];\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    this.updateGradient();\r\n\r\n    let currentArea;\r\n    let startingArea;\r\n\r\n    const xProperty = d => {\r\n      const label = d.name;\r\n      return this.xScale(label);\r\n    };\r\n\r\n    if (this.stacked || this.normalized) {\r\n      currentArea = area<any>()\r\n        .x(xProperty)\r\n        .y0((d, i) => this.yScale(d.d0))\r\n        .y1((d, i) => this.yScale(d.d1));\r\n\r\n      startingArea = area<any>()\r\n        .x(xProperty)\r\n        .y0(d => this.yScale.range()[0])\r\n        .y1(d => this.yScale.range()[0]);\r\n    } else {\r\n      currentArea = area<any>()\r\n        .x(xProperty)\r\n        .y0(() => (this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)))\r\n        .y1(d => this.yScale(d.value));\r\n\r\n      startingArea = area<any>()\r\n        .x(xProperty)\r\n        .y0(d => (this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)))\r\n        .y1(d => (this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)));\r\n    }\r\n\r\n    currentArea.curve(this.curve);\r\n    startingArea.curve(this.curve);\r\n\r\n    this.opacity = 0.8;\r\n\r\n    let data = this.data.series;\r\n    if (this.scaleType === 'linear') {\r\n      data = sortLinear(data, 'name');\r\n    } else if (this.scaleType === 'time') {\r\n      data = sortByTime(data, 'name');\r\n    } else {\r\n      data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\r\n    }\r\n\r\n    this.path = currentArea(data);\r\n    this.startingPath = startingArea(data);\r\n  }\r\n\r\n  updateGradient() {\r\n    if (this.colors.scaleType === 'linear') {\r\n      this.hasGradient = true;\r\n      if (this.stacked || this.normalized) {\r\n        const d0values = this.data.series.map(d => d.d0);\r\n        const d1values = this.data.series.map(d => d.d1);\r\n        const max = Math.max(...d1values);\r\n        const min = Math.min(...d0values);\r\n        this.gradientStops = this.colors.getLinearGradientStops(max, min);\r\n      } else {\r\n        const values = this.data.series.map(d => d.value);\r\n        const max = Math.max(...values);\r\n        this.gradientStops = this.colors.getLinearGradientStops(max);\r\n      }\r\n    } else {\r\n      this.hasGradient = false;\r\n      this.gradientStops = undefined;\r\n    }\r\n  }\r\n\r\n  isActive(entry): boolean {\r\n    if (!this.activeEntries) return false;\r\n    const item = this.activeEntries.find(d => {\r\n      return entry.name === d.name;\r\n    });\r\n    return item !== undefined;\r\n  }\r\n\r\n  isInactive(entry): boolean {\r\n    if (!this.activeEntries || this.activeEntries.length === 0) return false;\r\n    const item = this.activeEntries.find(d => {\r\n      return entry.name === d.name;\r\n    });\r\n    return item === undefined;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { AreaChartComponent } from './area-chart.component';\r\nimport { AreaChartNormalizedComponent } from './area-chart-normalized.component';\r\nimport { AreaChartStackedComponent } from './area-chart-stacked.component';\r\nimport { AreaSeriesComponent } from './area-series.component';\r\nimport { ChartCommonModule } from '../common/chart-common.module';\r\n\r\n@NgModule({\r\n  imports: [ChartCommonModule],\r\n  declarations: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent],\r\n  exports: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent]\r\n})\r\nexport class AreaChartModule {}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  HostListener,\r\n  ElementRef,\r\n  SimpleChanges,\r\n  OnChanges,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { select } from 'd3-selection';\r\nimport { roundedRect } from '../common/shape.helper';\r\nimport { id } from '../utils/id';\r\n\r\n/* tslint:disable-next-line */\r\nimport { transition } from 'd3-transition';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-bar]',\r\n  template: `\r\n    <svg:defs *ngIf=\"hasGradient\">\r\n      <svg:g ngx-charts-svg-linear-gradient [orientation]=\"orientation\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\r\n    </svg:defs>\r\n    <svg:path\r\n      class=\"bar\"\r\n      stroke=\"none\"\r\n      role=\"img\"\r\n      tabIndex=\"-1\"\r\n      [class.active]=\"isActive\"\r\n      [class.hidden]=\"hideBar\"\r\n      [attr.d]=\"path\"\r\n      [attr.aria-label]=\"ariaLabel\"\r\n      [attr.fill]=\"hasGradient ? gradientFill : fill\"\r\n      (click)=\"select.emit(data)\"\r\n    />\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BarComponent implements OnChanges {\r\n  @Input() fill;\r\n  @Input() data: any;\r\n  @Input() width: number;\r\n  @Input() height: number;\r\n  @Input() x: number;\r\n  @Input() y: number;\r\n  @Input() orientation;\r\n  @Input() roundEdges: boolean = true;\r\n  @Input() gradient: boolean = false;\r\n  @Input() offset = 0;\r\n  @Input() isActive: boolean = false;\r\n  @Input() stops: any[];\r\n  @Input() animations: boolean = true;\r\n  @Input() ariaLabel: string;\r\n  @Input() noBarWhenZero: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n  @Output() activate = new EventEmitter();\r\n  @Output() deactivate = new EventEmitter();\r\n\r\n  element: any;\r\n  path: any;\r\n  gradientId: any;\r\n  gradientFill: any;\r\n  startOpacity: any;\r\n  gradientStops: any[];\r\n  hasGradient: boolean = false;\r\n  hideBar: boolean = false;\r\n\r\n  constructor(element: ElementRef) {\r\n    this.element = element.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.roundEdges) {\r\n      this.loadAnimation();\r\n    }\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    this.gradientId = 'grad' + id().toString();\r\n    this.gradientFill = `url(#${this.gradientId})`;\r\n\r\n    if (this.gradient || this.stops) {\r\n      this.gradientStops = this.getGradient();\r\n      this.hasGradient = true;\r\n    } else {\r\n      this.hasGradient = false;\r\n    }\r\n\r\n    this.updatePathEl();\r\n    this.checkToHideBar();\r\n  }\r\n\r\n  loadAnimation(): void {\r\n    this.path = this.getStartingPath();\r\n    setTimeout(this.update.bind(this), 100);\r\n  }\r\n\r\n  updatePathEl(): void {\r\n    const node = select(this.element).select('.bar');\r\n    const path = this.getPath();\r\n    if (this.animations) {\r\n      node.transition().duration(500).attr('d', path);\r\n    } else {\r\n      node.attr('d', path);\r\n    }\r\n  }\r\n\r\n  getGradient() {\r\n    if (this.stops) {\r\n      return this.stops;\r\n    }\r\n\r\n    return [\r\n      {\r\n        offset: 0,\r\n        color: this.fill,\r\n        opacity: this.getStartOpacity()\r\n      },\r\n      {\r\n        offset: 100,\r\n        color: this.fill,\r\n        opacity: 1\r\n      }\r\n    ];\r\n  }\r\n\r\n  getStartingPath() {\r\n    if (!this.animations) {\r\n      return this.getPath();\r\n    }\r\n\r\n    let radius = this.getRadius();\r\n    let path;\r\n\r\n    if (this.roundEdges) {\r\n      if (this.orientation === 'vertical') {\r\n        radius = Math.min(this.height, radius);\r\n        path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\r\n      } else if (this.orientation === 'horizontal') {\r\n        radius = Math.min(this.width, radius);\r\n        path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\r\n      }\r\n    } else {\r\n      if (this.orientation === 'vertical') {\r\n        path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\r\n      } else if (this.orientation === 'horizontal') {\r\n        path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\r\n      }\r\n    }\r\n\r\n    return path;\r\n  }\r\n\r\n  getPath() {\r\n    let radius = this.getRadius();\r\n    let path;\r\n\r\n    if (this.roundEdges) {\r\n      if (this.orientation === 'vertical') {\r\n        radius = Math.min(this.height, radius);\r\n        path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\r\n      } else if (this.orientation === 'horizontal') {\r\n        radius = Math.min(this.width, radius);\r\n        path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\r\n      }\r\n    } else {\r\n      path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\r\n    }\r\n\r\n    return path;\r\n  }\r\n\r\n  getRadius(): number {\r\n    let radius = 0;\r\n\r\n    if (this.roundEdges && this.height > 5 && this.width > 5) {\r\n      radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\r\n    }\r\n\r\n    return radius;\r\n  }\r\n\r\n  getStartOpacity(): number {\r\n    if (this.roundEdges) {\r\n      return 0.2;\r\n    } else {\r\n      return 0.5;\r\n    }\r\n  }\r\n\r\n  get edges() {\r\n    let edges = [false, false, false, false];\r\n    if (this.roundEdges) {\r\n      if (this.orientation === 'vertical') {\r\n        if (this.data.value > 0) {\r\n          edges = [true, true, false, false];\r\n        } else {\r\n          edges = [false, false, true, true];\r\n        }\r\n      } else if (this.orientation === 'horizontal') {\r\n        if (this.data.value > 0) {\r\n          edges = [false, true, false, true];\r\n        } else {\r\n          edges = [true, false, true, false];\r\n        }\r\n      }\r\n    }\r\n    return edges;\r\n  }\r\n\r\n  @HostListener('mouseenter')\r\n  onMouseEnter(): void {\r\n    this.activate.emit(this.data);\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  onMouseLeave(): void {\r\n    this.deactivate.emit(this.data);\r\n  }\r\n\r\n  private checkToHideBar() {\r\n    this.hideBar =\r\n      this.noBarWhenZero &&\r\n      ((this.orientation === 'vertical' && this.height === 0) ||\r\n        (this.orientation === 'horizontal' && this.width === 0));\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { scaleBand, scaleLinear } from 'd3-scale';\r\n\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-bar-horizontal',\r\n  template: `\r\n    <ngx-charts-chart\r\n      [view]=\"[width, height]\"\r\n      [showLegend]=\"legend\"\r\n      [legendOptions]=\"legendOptions\"\r\n      [activeEntries]=\"activeEntries\"\r\n      [animations]=\"animations\"\r\n      (legendLabelClick)=\"onClick($event)\"\r\n      (legendLabelActivate)=\"onActivate($event, true)\"\r\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\r\n    >\r\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\r\n        <svg:g\r\n          ngx-charts-x-axis\r\n          *ngIf=\"xAxis\"\r\n          [xScale]=\"xScale\"\r\n          [dims]=\"dims\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [showLabel]=\"showXAxisLabel\"\r\n          [labelText]=\"xAxisLabel\"\r\n          [trimTicks]=\"trimXAxisTicks\"\r\n          [rotateTicks]=\"rotateXAxisTicks\"\r\n          [maxTickLength]=\"maxXAxisTickLength\"\r\n          [tickFormatting]=\"xAxisTickFormatting\"\r\n          [ticks]=\"xAxisTicks\"\r\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-y-axis\r\n          *ngIf=\"yAxis\"\r\n          [yScale]=\"yScale\"\r\n          [dims]=\"dims\"\r\n          [showLabel]=\"showYAxisLabel\"\r\n          [labelText]=\"yAxisLabel\"\r\n          [trimTicks]=\"trimYAxisTicks\"\r\n          [maxTickLength]=\"maxYAxisTickLength\"\r\n          [tickFormatting]=\"yAxisTickFormatting\"\r\n          [ticks]=\"yAxisTicks\"\r\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\r\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-series-horizontal\r\n          [xScale]=\"xScale\"\r\n          [yScale]=\"yScale\"\r\n          [colors]=\"colors\"\r\n          [series]=\"results\"\r\n          [dims]=\"dims\"\r\n          [gradient]=\"gradient\"\r\n          [tooltipDisabled]=\"tooltipDisabled\"\r\n          [tooltipTemplate]=\"tooltipTemplate\"\r\n          [activeEntries]=\"activeEntries\"\r\n          [roundEdges]=\"roundEdges\"\r\n          [animations]=\"animations\"\r\n          [showDataLabel]=\"showDataLabel\"\r\n          [dataLabelFormatting]=\"dataLabelFormatting\"\r\n          [noBarWhenZero]=\"noBarWhenZero\"\r\n          (select)=\"onClick($event)\"\r\n          (activate)=\"onActivate($event)\"\r\n          (deactivate)=\"onDeactivate($event)\"\r\n          (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event)\"\r\n        ></svg:g>\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['../common/base-chart.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class BarHorizontalComponent extends BaseChartComponent {\r\n  @Input() legend = false;\r\n  @Input() legendTitle: string = 'Legend';\r\n  @Input() legendPosition: string = 'right';\r\n  @Input() xAxis;\r\n  @Input() yAxis;\r\n  @Input() showXAxisLabel;\r\n  @Input() showYAxisLabel;\r\n  @Input() xAxisLabel;\r\n  @Input() yAxisLabel;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() gradient: boolean;\r\n  @Input() showGridLines: boolean = true;\r\n  @Input() activeEntries: any[] = [];\r\n  @Input() schemeType: string;\r\n  @Input() trimXAxisTicks: boolean = true;\r\n  @Input() trimYAxisTicks: boolean = true;\r\n  @Input() rotateXAxisTicks: boolean = true;\r\n  @Input() maxXAxisTickLength: number = 16;\r\n  @Input() maxYAxisTickLength: number = 16;\r\n  @Input() xAxisTickFormatting: any;\r\n  @Input() yAxisTickFormatting: any;\r\n  @Input() xAxisTicks: any[];\r\n  @Input() yAxisTicks: any[];\r\n  @Input() barPadding = 8;\r\n  @Input() roundDomains: boolean = false;\r\n  @Input() roundEdges: boolean = true;\r\n  @Input() xScaleMax: number;\r\n  @Input() xScaleMin: number;\r\n  @Input() showDataLabel: boolean = false;\r\n  @Input() dataLabelFormatting: any;\r\n  @Input() noBarWhenZero: boolean = true;\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n\r\n  dims: ViewDimensions;\r\n  yScale: any;\r\n  xScale: any;\r\n  xDomain: any;\r\n  yDomain: any;\r\n  transform: string;\r\n  colors: ColorHelper;\r\n  margin = [10, 20, 10, 20];\r\n  xAxisHeight: number = 0;\r\n  yAxisWidth: number = 0;\r\n  legendOptions: any;\r\n  dataLabelMaxWidth: any = { negative: 0, positive: 0 };\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    if (!this.showDataLabel) {\r\n      this.dataLabelMaxWidth = { negative: 0, positive: 0 };\r\n    }\r\n\r\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin,\r\n      showXAxis: this.xAxis,\r\n      showYAxis: this.yAxis,\r\n      xAxisHeight: this.xAxisHeight,\r\n      yAxisWidth: this.yAxisWidth,\r\n      showXLabel: this.showXAxisLabel,\r\n      showYLabel: this.showYAxisLabel,\r\n      showLegend: this.legend,\r\n      legendType: this.schemeType,\r\n      legendPosition: this.legendPosition\r\n    });\r\n\r\n    this.formatDates();\r\n\r\n    this.xScale = this.getXScale();\r\n    this.yScale = this.getYScale();\r\n\r\n    this.setColors();\r\n    this.legendOptions = this.getLegendOptions();\r\n\r\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\r\n  }\r\n\r\n  getXScale(): any {\r\n    this.xDomain = this.getXDomain();\r\n\r\n    const scale = scaleLinear().range([0, this.dims.width]).domain(this.xDomain);\r\n\r\n    return this.roundDomains ? scale.nice() : scale;\r\n  }\r\n\r\n  getYScale(): any {\r\n    this.yDomain = this.getYDomain();\r\n    const spacing = this.yDomain.length / (this.dims.height / this.barPadding + 1);\r\n\r\n    return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.yDomain);\r\n  }\r\n\r\n  getXDomain(): any[] {\r\n    const values = this.results.map(d => d.value);\r\n    const min = this.xScaleMin ? Math.min(this.xScaleMin, ...values) : Math.min(0, ...values);\r\n\r\n    const max = this.xScaleMax ? Math.max(this.xScaleMax, ...values) : Math.max(0, ...values);\r\n    return [min, max];\r\n  }\r\n\r\n  getYDomain(): any[] {\r\n    return this.results.map(d => d.label);\r\n  }\r\n\r\n  onClick(data): void {\r\n    this.select.emit(data);\r\n  }\r\n\r\n  setColors(): void {\r\n    let domain;\r\n    if (this.schemeType === 'ordinal') {\r\n      domain = this.yDomain;\r\n    } else {\r\n      domain = this.xDomain;\r\n    }\r\n\r\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\r\n  }\r\n\r\n  getLegendOptions() {\r\n    const opts = {\r\n      scaleType: this.schemeType,\r\n      colors: undefined,\r\n      domain: [],\r\n      title: undefined,\r\n      position: this.legendPosition\r\n    };\r\n    if (opts.scaleType === 'ordinal') {\r\n      opts.domain = this.yDomain;\r\n      opts.colors = this.colors;\r\n      opts.title = this.legendTitle;\r\n    } else {\r\n      opts.domain = this.xDomain;\r\n      opts.colors = this.colors.scale;\r\n    }\r\n\r\n    return opts;\r\n  }\r\n\r\n  updateYAxisWidth({ width }): void {\r\n    this.yAxisWidth = width;\r\n    this.update();\r\n  }\r\n\r\n  updateXAxisHeight({ height }): void {\r\n    this.xAxisHeight = height;\r\n    this.update();\r\n  }\r\n\r\n  onDataLabelMaxWidthChanged(event) {\r\n    if (event.size.negative) {\r\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\r\n    } else {\r\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\r\n    }\r\n    if (event.index === this.results.length - 1) {\r\n      setTimeout(() => this.update());\r\n    }\r\n  }\r\n\r\n  onActivate(item, fromLegend = false) {\r\n    item = this.results.find(d => {\r\n      if (fromLegend) {\r\n        return d.label === item.name;\r\n      } else {\r\n        return d.name === item.name;\r\n      }\r\n    });\r\n\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value && d.series === item.series;\r\n    });\r\n    if (idx > -1) {\r\n      return;\r\n    }\r\n\r\n    this.activeEntries = [item, ...this.activeEntries];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(item, fromLegend = false) {\r\n    item = this.results.find(d => {\r\n      if (fromLegend) {\r\n        return d.label === item.name;\r\n      } else {\r\n        return d.name === item.name;\r\n      }\r\n    });\r\n\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value && d.series === item.series;\r\n    });\r\n\r\n    this.activeEntries.splice(idx, 1);\r\n    this.activeEntries = [...this.activeEntries];\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ViewEncapsulation,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\n\r\nimport { scaleBand, scaleLinear } from 'd3-scale';\r\n\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-bar-horizontal-2d',\r\n  template: `\r\n    <ngx-charts-chart\r\n      [view]=\"[width, height]\"\r\n      [showLegend]=\"legend\"\r\n      [legendOptions]=\"legendOptions\"\r\n      [activeEntries]=\"activeEntries\"\r\n      [animations]=\"animations\"\r\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\r\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\r\n      (legendLabelClick)=\"onClick($event)\"\r\n    >\r\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\r\n        <svg:g\r\n          ngx-charts-grid-panel-series\r\n          [xScale]=\"valueScale\"\r\n          [yScale]=\"groupScale\"\r\n          [data]=\"results\"\r\n          [dims]=\"dims\"\r\n          orient=\"horizontal\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-x-axis\r\n          *ngIf=\"xAxis\"\r\n          [xScale]=\"valueScale\"\r\n          [dims]=\"dims\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [showLabel]=\"showXAxisLabel\"\r\n          [labelText]=\"xAxisLabel\"\r\n          [trimTicks]=\"trimXAxisTicks\"\r\n          [rotateTicks]=\"rotateXAxisTicks\"\r\n          [maxTickLength]=\"maxXAxisTickLength\"\r\n          [tickFormatting]=\"xAxisTickFormatting\"\r\n          [ticks]=\"xAxisTicks\"\r\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-y-axis\r\n          *ngIf=\"yAxis\"\r\n          [yScale]=\"groupScale\"\r\n          [dims]=\"dims\"\r\n          [showLabel]=\"showYAxisLabel\"\r\n          [labelText]=\"yAxisLabel\"\r\n          [trimTicks]=\"trimYAxisTicks\"\r\n          [maxTickLength]=\"maxYAxisTickLength\"\r\n          [tickFormatting]=\"yAxisTickFormatting\"\r\n          [ticks]=\"yAxisTicks\"\r\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\r\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\r\n          [@animationState]=\"'active'\"\r\n          [attr.transform]=\"groupTransform(group)\"\r\n        >\r\n          <svg:g\r\n            ngx-charts-series-horizontal\r\n            [xScale]=\"valueScale\"\r\n            [activeEntries]=\"activeEntries\"\r\n            [yScale]=\"innerScale\"\r\n            [colors]=\"colors\"\r\n            [series]=\"group.series\"\r\n            [dims]=\"dims\"\r\n            [gradient]=\"gradient\"\r\n            [tooltipDisabled]=\"tooltipDisabled\"\r\n            [tooltipTemplate]=\"tooltipTemplate\"\r\n            [seriesName]=\"group.name\"\r\n            [roundEdges]=\"roundEdges\"\r\n            [animations]=\"animations\"\r\n            [showDataLabel]=\"showDataLabel\"\r\n            [dataLabelFormatting]=\"dataLabelFormatting\"\r\n            [noBarWhenZero]=\"noBarWhenZero\"\r\n            (select)=\"onClick($event, group)\"\r\n            (activate)=\"onActivate($event, group)\"\r\n            (deactivate)=\"onDeactivate($event, group)\"\r\n            (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\r\n          />\r\n        </svg:g>\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['../common/base-chart.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: [\r\n    trigger('animationState', [\r\n      transition(':leave', [\r\n        style({\r\n          opacity: 1,\r\n          transform: '*'\r\n        }),\r\n        animate(500, style({ opacity: 0, transform: 'scale(0)' }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class BarHorizontal2DComponent extends BaseChartComponent {\r\n  @Input() legend = false;\r\n  @Input() legendTitle: string = 'Legend';\r\n  @Input() legendPosition: string = 'right';\r\n  @Input() xAxis;\r\n  @Input() yAxis;\r\n  @Input() showXAxisLabel;\r\n  @Input() showYAxisLabel;\r\n  @Input() xAxisLabel;\r\n  @Input() yAxisLabel;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() gradient: boolean;\r\n  @Input() showGridLines: boolean = true;\r\n  @Input() activeEntries: any[] = [];\r\n  @Input() schemeType: string;\r\n  @Input() trimXAxisTicks: boolean = true;\r\n  @Input() trimYAxisTicks: boolean = true;\r\n  @Input() rotateXAxisTicks: boolean = true;\r\n  @Input() maxXAxisTickLength: number = 16;\r\n  @Input() maxYAxisTickLength: number = 16;\r\n  @Input() xAxisTickFormatting: any;\r\n  @Input() yAxisTickFormatting: any;\r\n  @Input() xAxisTicks: any[];\r\n  @Input() yAxisTicks: any[];\r\n  @Input() groupPadding = 16;\r\n  @Input() barPadding = 8;\r\n  @Input() roundDomains: boolean = false;\r\n  @Input() roundEdges: boolean = true;\r\n  @Input() xScaleMax: number;\r\n  @Input() showDataLabel: boolean = false;\r\n  @Input() dataLabelFormatting: any;\r\n  @Input() noBarWhenZero: boolean = true;\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n\r\n  dims: ViewDimensions;\r\n  groupDomain: any[];\r\n  innerDomain: any[];\r\n  valuesDomain: any[];\r\n  groupScale: any;\r\n  innerScale: any;\r\n  valueScale: any;\r\n  transform: string;\r\n  colors: ColorHelper;\r\n  margin = [10, 20, 10, 20];\r\n  xAxisHeight: number = 0;\r\n  yAxisWidth: number = 0;\r\n  legendOptions: any;\r\n  dataLabelMaxWidth: any = { negative: 0, positive: 0 };\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    if (!this.showDataLabel) {\r\n      this.dataLabelMaxWidth = { negative: 0, positive: 0 };\r\n    }\r\n\r\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin,\r\n      showXAxis: this.xAxis,\r\n      showYAxis: this.yAxis,\r\n      xAxisHeight: this.xAxisHeight,\r\n      yAxisWidth: this.yAxisWidth,\r\n      showXLabel: this.showXAxisLabel,\r\n      showYLabel: this.showYAxisLabel,\r\n      showLegend: this.legend,\r\n      legendType: this.schemeType,\r\n      legendPosition: this.legendPosition\r\n    });\r\n\r\n    this.formatDates();\r\n\r\n    this.groupDomain = this.getGroupDomain();\r\n    this.innerDomain = this.getInnerDomain();\r\n    this.valuesDomain = this.getValueDomain();\r\n\r\n    this.groupScale = this.getGroupScale();\r\n    this.innerScale = this.getInnerScale();\r\n    this.valueScale = this.getValueScale();\r\n\r\n    this.setColors();\r\n    this.legendOptions = this.getLegendOptions();\r\n\r\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\r\n  }\r\n\r\n  getGroupScale(): any {\r\n    const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\r\n\r\n    return scaleBand()\r\n      .rangeRound([0, this.dims.height])\r\n      .paddingInner(spacing)\r\n      .paddingOuter(spacing / 2)\r\n      .domain(this.groupDomain);\r\n  }\r\n\r\n  getInnerScale(): any {\r\n    const height = this.groupScale.bandwidth();\r\n    const spacing = this.innerDomain.length / (height / this.barPadding + 1);\r\n\r\n    return scaleBand().rangeRound([0, height]).paddingInner(spacing).domain(this.innerDomain);\r\n  }\r\n\r\n  getValueScale(): any {\r\n    const scale = scaleLinear().range([0, this.dims.width]).domain(this.valuesDomain);\r\n\r\n    return this.roundDomains ? scale.nice() : scale;\r\n  }\r\n\r\n  getGroupDomain(): any[] {\r\n    const domain = [];\r\n\r\n    for (const group of this.results) {\r\n      if (!domain.includes(group.label)) {\r\n        domain.push(group.label);\r\n      }\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getInnerDomain(): any[] {\r\n    const domain = [];\r\n\r\n    for (const group of this.results) {\r\n      for (const d of group.series) {\r\n        if (!domain.includes(d.label)) {\r\n          domain.push(d.label);\r\n        }\r\n      }\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getValueDomain(): any[] {\r\n    const domain = [];\r\n\r\n    for (const group of this.results) {\r\n      for (const d of group.series) {\r\n        if (!domain.includes(d.value)) {\r\n          domain.push(d.value);\r\n        }\r\n      }\r\n    }\r\n\r\n    const min = Math.min(0, ...domain);\r\n    const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(0, ...domain);\r\n    return [min, max];\r\n  }\r\n\r\n  groupTransform(group) {\r\n    return `translate(0, ${this.groupScale(group.label)})`;\r\n  }\r\n\r\n  onClick(data, group?): void {\r\n    if (group) {\r\n      data.series = group.name;\r\n    }\r\n\r\n    this.select.emit(data);\r\n  }\r\n\r\n  trackBy(index, item): string {\r\n    return item.name;\r\n  }\r\n\r\n  setColors(): void {\r\n    let domain;\r\n    if (this.schemeType === 'ordinal') {\r\n      domain = this.innerDomain;\r\n    } else {\r\n      domain = this.valuesDomain;\r\n    }\r\n\r\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\r\n  }\r\n\r\n  getLegendOptions() {\r\n    const opts = {\r\n      scaleType: this.schemeType,\r\n      colors: undefined,\r\n      domain: [],\r\n      title: undefined,\r\n      position: this.legendPosition\r\n    };\r\n    if (opts.scaleType === 'ordinal') {\r\n      opts.domain = this.innerDomain;\r\n      opts.colors = this.colors;\r\n      opts.title = this.legendTitle;\r\n    } else {\r\n      opts.domain = this.valuesDomain;\r\n      opts.colors = this.colors.scale;\r\n    }\r\n\r\n    return opts;\r\n  }\r\n\r\n  updateYAxisWidth({ width }): void {\r\n    this.yAxisWidth = width;\r\n    this.update();\r\n  }\r\n\r\n  updateXAxisHeight({ height }): void {\r\n    this.xAxisHeight = height;\r\n    this.update();\r\n  }\r\n\r\n  onDataLabelMaxWidthChanged(event, groupIndex) {\r\n    if (event.size.negative) {\r\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\r\n    } else {\r\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\r\n    }\r\n    if (groupIndex === this.results.length - 1) {\r\n      setTimeout(() => this.update());\r\n    }\r\n  }\r\n\r\n  onActivate(event, group, fromLegend = false) {\r\n    const item = Object.assign({}, event);\r\n    if (group) {\r\n      item.series = group.name;\r\n    }\r\n\r\n    const items = this.results\r\n      .map(g => g.series)\r\n      .flat()\r\n      .filter(i => {\r\n        if (fromLegend) {\r\n          return i.label === item.name;\r\n        } else {\r\n          return i.name === item.name && i.series === item.series;\r\n        }\r\n      });\r\n\r\n    this.activeEntries = [...items];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(event, group, fromLegend = false) {\r\n    const item = Object.assign({}, event);\r\n    if (group) {\r\n      item.series = group.name;\r\n    }\r\n\r\n    this.activeEntries = this.activeEntries.filter(i => {\r\n      if (fromLegend) {\r\n        return i.label !== item.name;\r\n      } else {\r\n        return !(i.name === item.name && i.series === item.series);\r\n      }\r\n    });\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  ViewEncapsulation,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\n\r\nimport { scaleBand, scaleLinear } from 'd3-scale';\r\n\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-bar-horizontal-normalized',\r\n  template: `\r\n    <ngx-charts-chart\r\n      [view]=\"[width, height]\"\r\n      [showLegend]=\"legend\"\r\n      [legendOptions]=\"legendOptions\"\r\n      [activeEntries]=\"activeEntries\"\r\n      [animations]=\"animations\"\r\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\r\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\r\n      (legendLabelClick)=\"onClick($event)\"\r\n    >\r\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\r\n        <svg:g\r\n          ngx-charts-x-axis\r\n          *ngIf=\"xAxis\"\r\n          [xScale]=\"xScale\"\r\n          [dims]=\"dims\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [showLabel]=\"showXAxisLabel\"\r\n          [labelText]=\"xAxisLabel\"\r\n          [trimTicks]=\"trimXAxisTicks\"\r\n          [rotateTicks]=\"rotateXAxisTicks\"\r\n          [maxTickLength]=\"maxXAxisTickLength\"\r\n          [tickFormatting]=\"xAxisTickFormatting\"\r\n          [ticks]=\"xAxisTicks\"\r\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-y-axis\r\n          *ngIf=\"yAxis\"\r\n          [yScale]=\"yScale\"\r\n          [dims]=\"dims\"\r\n          [showLabel]=\"showYAxisLabel\"\r\n          [labelText]=\"yAxisLabel\"\r\n          [trimTicks]=\"trimYAxisTicks\"\r\n          [maxTickLength]=\"maxYAxisTickLength\"\r\n          [tickFormatting]=\"yAxisTickFormatting\"\r\n          [ticks]=\"yAxisTicks\"\r\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          *ngFor=\"let group of results; trackBy: trackBy\"\r\n          [@animationState]=\"'active'\"\r\n          [attr.transform]=\"groupTransform(group)\"\r\n        >\r\n          <svg:g\r\n            ngx-charts-series-horizontal\r\n            type=\"normalized\"\r\n            [xScale]=\"xScale\"\r\n            [yScale]=\"yScale\"\r\n            [activeEntries]=\"activeEntries\"\r\n            [colors]=\"colors\"\r\n            [series]=\"group.series\"\r\n            [dims]=\"dims\"\r\n            [gradient]=\"gradient\"\r\n            [tooltipDisabled]=\"tooltipDisabled\"\r\n            [tooltipTemplate]=\"tooltipTemplate\"\r\n            [seriesName]=\"group.name\"\r\n            [animations]=\"animations\"\r\n            (select)=\"onClick($event, group)\"\r\n            (activate)=\"onActivate($event, group)\"\r\n            (deactivate)=\"onDeactivate($event, group)\"\r\n            [noBarWhenZero]=\"noBarWhenZero\"\r\n          />\r\n        </svg:g>\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['../common/base-chart.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: [\r\n    trigger('animationState', [\r\n      transition(':leave', [\r\n        style({\r\n          opacity: 1,\r\n          transform: '*'\r\n        }),\r\n        animate(500, style({ opacity: 0, transform: 'scale(0)' }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class BarHorizontalNormalizedComponent extends BaseChartComponent {\r\n  @Input() legend = false;\r\n  @Input() legendTitle: string = 'Legend';\r\n  @Input() legendPosition: string = 'right';\r\n  @Input() xAxis;\r\n  @Input() yAxis;\r\n  @Input() showXAxisLabel;\r\n  @Input() showYAxisLabel;\r\n  @Input() xAxisLabel;\r\n  @Input() yAxisLabel;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() gradient: boolean;\r\n  @Input() showGridLines: boolean = true;\r\n  @Input() activeEntries: any[] = [];\r\n  @Input() schemeType: string;\r\n  @Input() trimXAxisTicks: boolean = true;\r\n  @Input() trimYAxisTicks: boolean = true;\r\n  @Input() rotateXAxisTicks: boolean = true;\r\n  @Input() maxXAxisTickLength: number = 16;\r\n  @Input() maxYAxisTickLength: number = 16;\r\n  @Input() xAxisTickFormatting: any;\r\n  @Input() yAxisTickFormatting: any;\r\n  @Input() xAxisTicks: any[];\r\n  @Input() yAxisTicks: any[];\r\n  @Input() barPadding = 8;\r\n  @Input() roundDomains: boolean = false;\r\n  @Input() noBarWhenZero: boolean = true;\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n\r\n  dims: ViewDimensions;\r\n  groupDomain: any[];\r\n  innerDomain: any[];\r\n  valueDomain: any[];\r\n  xScale: any;\r\n  yScale: any;\r\n  transform: string;\r\n  colors: ColorHelper;\r\n  margin = [10, 20, 10, 20];\r\n  xAxisHeight: number = 0;\r\n  yAxisWidth: number = 0;\r\n  legendOptions: any;\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin,\r\n      showXAxis: this.xAxis,\r\n      showYAxis: this.yAxis,\r\n      xAxisHeight: this.xAxisHeight,\r\n      yAxisWidth: this.yAxisWidth,\r\n      showXLabel: this.showXAxisLabel,\r\n      showYLabel: this.showYAxisLabel,\r\n      showLegend: this.legend,\r\n      legendType: this.schemeType,\r\n      legendPosition: this.legendPosition\r\n    });\r\n\r\n    this.formatDates();\r\n\r\n    this.groupDomain = this.getGroupDomain();\r\n    this.innerDomain = this.getInnerDomain();\r\n    this.valueDomain = this.getValueDomain();\r\n\r\n    this.xScale = this.getXScale();\r\n    this.yScale = this.getYScale();\r\n\r\n    this.setColors();\r\n    this.legendOptions = this.getLegendOptions();\r\n\r\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\r\n  }\r\n\r\n  getGroupDomain(): any[] {\r\n    const domain = [];\r\n\r\n    for (const group of this.results) {\r\n      if (!domain.includes(group.label)) {\r\n        domain.push(group.label);\r\n      }\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getInnerDomain(): any[] {\r\n    const domain = [];\r\n\r\n    for (const group of this.results) {\r\n      for (const d of group.series) {\r\n        if (!domain.includes(d.label)) {\r\n          domain.push(d.label);\r\n        }\r\n      }\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getValueDomain(): any[] {\r\n    return [0, 100];\r\n  }\r\n\r\n  getYScale(): any {\r\n    const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\r\n\r\n    return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.groupDomain);\r\n  }\r\n\r\n  getXScale(): any {\r\n    const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\r\n    return this.roundDomains ? scale.nice() : scale;\r\n  }\r\n\r\n  groupTransform(group): string {\r\n    return `translate(0, ${this.yScale(group.name)})`;\r\n  }\r\n\r\n  onClick(data, group?): void {\r\n    if (group) {\r\n      data.series = group.name;\r\n    }\r\n\r\n    this.select.emit(data);\r\n  }\r\n\r\n  trackBy(index, item): string {\r\n    return item.name;\r\n  }\r\n\r\n  setColors(): void {\r\n    let domain;\r\n    if (this.schemeType === 'ordinal') {\r\n      domain = this.innerDomain;\r\n    } else {\r\n      domain = this.valueDomain;\r\n    }\r\n\r\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\r\n  }\r\n\r\n  getLegendOptions() {\r\n    const opts = {\r\n      scaleType: this.schemeType,\r\n      colors: undefined,\r\n      domain: [],\r\n      title: undefined,\r\n      position: this.legendPosition\r\n    };\r\n    if (opts.scaleType === 'ordinal') {\r\n      opts.domain = this.innerDomain;\r\n      opts.colors = this.colors;\r\n      opts.title = this.legendTitle;\r\n    } else {\r\n      opts.domain = this.valueDomain;\r\n      opts.colors = this.colors.scale;\r\n    }\r\n\r\n    return opts;\r\n  }\r\n\r\n  updateYAxisWidth({ width }): void {\r\n    this.yAxisWidth = width;\r\n    this.update();\r\n  }\r\n\r\n  updateXAxisHeight({ height }): void {\r\n    this.xAxisHeight = height;\r\n    this.update();\r\n  }\r\n\r\n  onActivate(event, group, fromLegend = false) {\r\n    const item = Object.assign({}, event);\r\n    if (group) {\r\n      item.series = group.name;\r\n    }\r\n\r\n    const items = this.results\r\n      .map(g => g.series)\r\n      .flat()\r\n      .filter(i => {\r\n        if (fromLegend) {\r\n          return i.label === item.name;\r\n        } else {\r\n          return i.name === item.name && i.series === item.series;\r\n        }\r\n      });\r\n\r\n    this.activeEntries = [...items];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(event, group, fromLegend = false) {\r\n    const item = Object.assign({}, event);\r\n    if (group) {\r\n      item.series = group.name;\r\n    }\r\n\r\n    this.activeEntries = this.activeEntries.filter(i => {\r\n      if (fromLegend) {\r\n        return i.label !== item.name;\r\n      } else {\r\n        return !(i.name === item.name && i.series === item.series);\r\n      }\r\n    });\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\n\r\nimport { scaleBand, scaleLinear } from 'd3-scale';\r\n\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-bar-horizontal-stacked',\r\n  template: `\r\n    <ngx-charts-chart\r\n      [view]=\"[width, height]\"\r\n      [showLegend]=\"legend\"\r\n      [legendOptions]=\"legendOptions\"\r\n      [activeEntries]=\"activeEntries\"\r\n      [animations]=\"animations\"\r\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\r\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\r\n      (legendLabelClick)=\"onClick($event)\"\r\n    >\r\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\r\n        <svg:g\r\n          ngx-charts-x-axis\r\n          *ngIf=\"xAxis\"\r\n          [xScale]=\"xScale\"\r\n          [dims]=\"dims\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [showLabel]=\"showXAxisLabel\"\r\n          [labelText]=\"xAxisLabel\"\r\n          [trimTicks]=\"trimXAxisTicks\"\r\n          [rotateTicks]=\"rotateXAxisTicks\"\r\n          [maxTickLength]=\"maxXAxisTickLength\"\r\n          [tickFormatting]=\"xAxisTickFormatting\"\r\n          [ticks]=\"xAxisTicks\"\r\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-y-axis\r\n          *ngIf=\"yAxis\"\r\n          [yScale]=\"yScale\"\r\n          [dims]=\"dims\"\r\n          [showLabel]=\"showYAxisLabel\"\r\n          [labelText]=\"yAxisLabel\"\r\n          [trimTicks]=\"trimYAxisTicks\"\r\n          [maxTickLength]=\"maxYAxisTickLength\"\r\n          [tickFormatting]=\"yAxisTickFormatting\"\r\n          [ticks]=\"yAxisTicks\"\r\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\r\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\r\n          [@animationState]=\"'active'\"\r\n          [attr.transform]=\"groupTransform(group)\"\r\n        >\r\n          <svg:g\r\n            ngx-charts-series-horizontal\r\n            type=\"stacked\"\r\n            [xScale]=\"xScale\"\r\n            [yScale]=\"yScale\"\r\n            [colors]=\"colors\"\r\n            [series]=\"group.series\"\r\n            [activeEntries]=\"activeEntries\"\r\n            [dims]=\"dims\"\r\n            [gradient]=\"gradient\"\r\n            [tooltipDisabled]=\"tooltipDisabled\"\r\n            [tooltipTemplate]=\"tooltipTemplate\"\r\n            [seriesName]=\"group.name\"\r\n            [animations]=\"animations\"\r\n            [showDataLabel]=\"showDataLabel\"\r\n            [dataLabelFormatting]=\"dataLabelFormatting\"\r\n            [noBarWhenZero]=\"noBarWhenZero\"\r\n            (select)=\"onClick($event, group)\"\r\n            (activate)=\"onActivate($event, group)\"\r\n            (deactivate)=\"onDeactivate($event, group)\"\r\n            (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\r\n          />\r\n        </svg:g>\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['../common/base-chart.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: [\r\n    trigger('animationState', [\r\n      transition(':leave', [\r\n        style({\r\n          opacity: 1,\r\n          transform: '*'\r\n        }),\r\n        animate(500, style({ opacity: 0, transform: 'scale(0)' }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class BarHorizontalStackedComponent extends BaseChartComponent {\r\n  @Input() legend = false;\r\n  @Input() legendTitle: string = 'Legend';\r\n  @Input() legendPosition: string = 'right';\r\n  @Input() xAxis;\r\n  @Input() yAxis;\r\n  @Input() showXAxisLabel;\r\n  @Input() showYAxisLabel;\r\n  @Input() xAxisLabel;\r\n  @Input() yAxisLabel;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() gradient: boolean;\r\n  @Input() showGridLines: boolean = true;\r\n  @Input() activeEntries: any[] = [];\r\n  @Input() schemeType: string;\r\n  @Input() trimXAxisTicks: boolean = true;\r\n  @Input() trimYAxisTicks: boolean = true;\r\n  @Input() rotateXAxisTicks: boolean = true;\r\n  @Input() maxXAxisTickLength: number = 16;\r\n  @Input() maxYAxisTickLength: number = 16;\r\n  @Input() xAxisTickFormatting: any;\r\n  @Input() yAxisTickFormatting: any;\r\n  @Input() xAxisTicks: any[];\r\n  @Input() yAxisTicks: any[];\r\n  @Input() barPadding = 8;\r\n  @Input() roundDomains: boolean = false;\r\n  @Input() xScaleMax: number;\r\n  @Input() showDataLabel: boolean = false;\r\n  @Input() dataLabelFormatting: any;\r\n  @Input() noBarWhenZero: boolean = true;\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n\r\n  dims: ViewDimensions;\r\n  groupDomain: any[];\r\n  innerDomain: any[];\r\n  valueDomain: any[];\r\n  xScale: any;\r\n  yScale: any;\r\n  transform: string;\r\n  colors: ColorHelper;\r\n  margin = [10, 20, 10, 20];\r\n  xAxisHeight: number = 0;\r\n  yAxisWidth: number = 0;\r\n  legendOptions: any;\r\n  dataLabelMaxWidth: any = { negative: 0, positive: 0 };\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    if (!this.showDataLabel) {\r\n      this.dataLabelMaxWidth = { negative: 0, positive: 0 };\r\n    }\r\n\r\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin,\r\n      showXAxis: this.xAxis,\r\n      showYAxis: this.yAxis,\r\n      xAxisHeight: this.xAxisHeight,\r\n      yAxisWidth: this.yAxisWidth,\r\n      showXLabel: this.showXAxisLabel,\r\n      showYLabel: this.showYAxisLabel,\r\n      showLegend: this.legend,\r\n      legendType: this.schemeType,\r\n      legendPosition: this.legendPosition\r\n    });\r\n\r\n    this.formatDates();\r\n\r\n    this.groupDomain = this.getGroupDomain();\r\n    this.innerDomain = this.getInnerDomain();\r\n    this.valueDomain = this.getValueDomain();\r\n\r\n    this.xScale = this.getXScale();\r\n    this.yScale = this.getYScale();\r\n\r\n    this.setColors();\r\n    this.legendOptions = this.getLegendOptions();\r\n\r\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\r\n  }\r\n\r\n  getGroupDomain(): any[] {\r\n    const domain = [];\r\n\r\n    for (const group of this.results) {\r\n      if (!domain.includes(group.label)) {\r\n        domain.push(group.label);\r\n      }\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getInnerDomain(): any[] {\r\n    const domain = [];\r\n\r\n    for (const group of this.results) {\r\n      for (const d of group.series) {\r\n        if (!domain.includes(d.label)) {\r\n          domain.push(d.label);\r\n        }\r\n      }\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getValueDomain(): any[] {\r\n    const domain = [];\r\n    let smallest = 0;\r\n    let biggest = 0;\r\n    for (const group of this.results) {\r\n      let smallestSum = 0;\r\n      let biggestSum = 0;\r\n      for (const d of group.series) {\r\n        if (d.value < 0) {\r\n          smallestSum += d.value;\r\n        } else {\r\n          biggestSum += d.value;\r\n        }\r\n        smallest = d.value < smallest ? d.value : smallest;\r\n        biggest = d.value > biggest ? d.value : biggest;\r\n      }\r\n      domain.push(smallestSum);\r\n      domain.push(biggestSum);\r\n    }\r\n    domain.push(smallest);\r\n    domain.push(biggest);\r\n\r\n    const min = Math.min(0, ...domain);\r\n    const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(...domain);\r\n    return [min, max];\r\n  }\r\n\r\n  getYScale(): any {\r\n    const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\r\n\r\n    return scaleBand().rangeRound([0, this.dims.height]).paddingInner(spacing).domain(this.groupDomain);\r\n  }\r\n\r\n  getXScale(): any {\r\n    const scale = scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\r\n    return this.roundDomains ? scale.nice() : scale;\r\n  }\r\n\r\n  groupTransform(group): string {\r\n    return `translate(0, ${this.yScale(group.name)})`;\r\n  }\r\n\r\n  onClick(data, group?): void {\r\n    if (group) {\r\n      data.series = group.name;\r\n    }\r\n\r\n    this.select.emit(data);\r\n  }\r\n\r\n  trackBy(index, item): string {\r\n    return item.name;\r\n  }\r\n\r\n  setColors(): void {\r\n    let domain;\r\n    if (this.schemeType === 'ordinal') {\r\n      domain = this.innerDomain;\r\n    } else {\r\n      domain = this.valueDomain;\r\n    }\r\n\r\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\r\n  }\r\n\r\n  getLegendOptions() {\r\n    const opts = {\r\n      scaleType: this.schemeType,\r\n      colors: undefined,\r\n      domain: [],\r\n      title: undefined,\r\n      position: this.legendPosition\r\n    };\r\n    if (opts.scaleType === 'ordinal') {\r\n      opts.domain = this.innerDomain;\r\n      opts.colors = this.colors;\r\n      opts.title = this.legendTitle;\r\n    } else {\r\n      opts.domain = this.valueDomain;\r\n      opts.colors = this.colors.scale;\r\n    }\r\n\r\n    return opts;\r\n  }\r\n\r\n  updateYAxisWidth({ width }): void {\r\n    this.yAxisWidth = width;\r\n    this.update();\r\n  }\r\n\r\n  updateXAxisHeight({ height }): void {\r\n    this.xAxisHeight = height;\r\n    this.update();\r\n  }\r\n\r\n  onDataLabelMaxWidthChanged(event, groupIndex) {\r\n    if (event.size.negative) {\r\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\r\n    } else {\r\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\r\n    }\r\n    if (groupIndex === this.results.length - 1) {\r\n      setTimeout(() => this.update());\r\n    }\r\n  }\r\n\r\n  onActivate(event, group, fromLegend = false) {\r\n    const item = Object.assign({}, event);\r\n    if (group) {\r\n      item.series = group.name;\r\n    }\r\n\r\n    const items = this.results\r\n      .map(g => g.series)\r\n      .flat()\r\n      .filter(i => {\r\n        if (fromLegend) {\r\n          return i.label === item.name;\r\n        } else {\r\n          return i.name === item.name && i.series === item.series;\r\n        }\r\n      });\r\n\r\n    this.activeEntries = [...items];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(event, group, fromLegend = false) {\r\n    const item = Object.assign({}, event);\r\n    if (group) {\r\n      item.series = group.name;\r\n    }\r\n\r\n    this.activeEntries = this.activeEntries.filter(i => {\r\n      if (fromLegend) {\r\n        return i.label !== item.name;\r\n      } else {\r\n        return !(i.name === item.name && i.series === item.series);\r\n      }\r\n    });\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ViewEncapsulation,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { scaleBand, scaleLinear } from 'd3-scale';\r\n\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nimport { DataItem } from '../models/chart-data.model';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-bar-vertical',\r\n  template: `\r\n    <ngx-charts-chart\r\n      [view]=\"[width, height]\"\r\n      [showLegend]=\"legend\"\r\n      [legendOptions]=\"legendOptions\"\r\n      [activeEntries]=\"activeEntries\"\r\n      [animations]=\"animations\"\r\n      (legendLabelClick)=\"onClick($event)\"\r\n      (legendLabelActivate)=\"onActivate($event, true)\"\r\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\r\n    >\r\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\r\n        <svg:g\r\n          ngx-charts-x-axis\r\n          *ngIf=\"xAxis\"\r\n          [xScale]=\"xScale\"\r\n          [dims]=\"dims\"\r\n          [showLabel]=\"showXAxisLabel\"\r\n          [labelText]=\"xAxisLabel\"\r\n          [trimTicks]=\"trimXAxisTicks\"\r\n          [rotateTicks]=\"rotateXAxisTicks\"\r\n          [maxTickLength]=\"maxXAxisTickLength\"\r\n          [tickFormatting]=\"xAxisTickFormatting\"\r\n          [ticks]=\"xAxisTicks\"\r\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\r\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-y-axis\r\n          *ngIf=\"yAxis\"\r\n          [yScale]=\"yScale\"\r\n          [dims]=\"dims\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [showLabel]=\"showYAxisLabel\"\r\n          [labelText]=\"yAxisLabel\"\r\n          [trimTicks]=\"trimYAxisTicks\"\r\n          [maxTickLength]=\"maxYAxisTickLength\"\r\n          [tickFormatting]=\"yAxisTickFormatting\"\r\n          [ticks]=\"yAxisTicks\"\r\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-series-vertical\r\n          [xScale]=\"xScale\"\r\n          [yScale]=\"yScale\"\r\n          [colors]=\"colors\"\r\n          [series]=\"results\"\r\n          [dims]=\"dims\"\r\n          [gradient]=\"gradient\"\r\n          [tooltipDisabled]=\"tooltipDisabled\"\r\n          [tooltipTemplate]=\"tooltipTemplate\"\r\n          [showDataLabel]=\"showDataLabel\"\r\n          [dataLabelFormatting]=\"dataLabelFormatting\"\r\n          [activeEntries]=\"activeEntries\"\r\n          [roundEdges]=\"roundEdges\"\r\n          [animations]=\"animations\"\r\n          [noBarWhenZero]=\"noBarWhenZero\"\r\n          (activate)=\"onActivate($event)\"\r\n          (deactivate)=\"onDeactivate($event)\"\r\n          (select)=\"onClick($event)\"\r\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event)\"\r\n        ></svg:g>\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['../common/base-chart.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class BarVerticalComponent extends BaseChartComponent {\r\n  @Input() legend = false;\r\n  @Input() legendTitle: string = 'Legend';\r\n  @Input() legendPosition: string = 'right';\r\n  @Input() xAxis;\r\n  @Input() yAxis;\r\n  @Input() showXAxisLabel;\r\n  @Input() showYAxisLabel;\r\n  @Input() xAxisLabel;\r\n  @Input() yAxisLabel;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() gradient: boolean;\r\n  @Input() showGridLines: boolean = true;\r\n  @Input() activeEntries: any[] = [];\r\n  @Input() schemeType: string;\r\n  @Input() trimXAxisTicks: boolean = true;\r\n  @Input() trimYAxisTicks: boolean = true;\r\n  @Input() rotateXAxisTicks: boolean = true;\r\n  @Input() maxXAxisTickLength: number = 16;\r\n  @Input() maxYAxisTickLength: number = 16;\r\n  @Input() xAxisTickFormatting: any;\r\n  @Input() yAxisTickFormatting: any;\r\n  @Input() xAxisTicks: any[];\r\n  @Input() yAxisTicks: any[];\r\n  @Input() barPadding = 8;\r\n  @Input() roundDomains: boolean = false;\r\n  @Input() roundEdges: boolean = true;\r\n  @Input() yScaleMax: number;\r\n  @Input() yScaleMin: number;\r\n  @Input() showDataLabel: boolean = false;\r\n  @Input() dataLabelFormatting: any;\r\n  @Input() noBarWhenZero: boolean = true;\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n\r\n  dims: ViewDimensions;\r\n  xScale: any;\r\n  yScale: any;\r\n  xDomain: any;\r\n  yDomain: any;\r\n  transform: string;\r\n  colors: ColorHelper;\r\n  margin: any[] = [10, 20, 10, 20];\r\n  xAxisHeight: number = 0;\r\n  yAxisWidth: number = 0;\r\n  legendOptions: any;\r\n  dataLabelMaxHeight: any = { negative: 0, positive: 0 };\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    if (!this.showDataLabel) {\r\n      this.dataLabelMaxHeight = { negative: 0, positive: 0 };\r\n    }\r\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin,\r\n      showXAxis: this.xAxis,\r\n      showYAxis: this.yAxis,\r\n      xAxisHeight: this.xAxisHeight,\r\n      yAxisWidth: this.yAxisWidth,\r\n      showXLabel: this.showXAxisLabel,\r\n      showYLabel: this.showYAxisLabel,\r\n      showLegend: this.legend,\r\n      legendType: this.schemeType,\r\n      legendPosition: this.legendPosition\r\n    });\r\n\r\n    this.formatDates();\r\n\r\n    if (this.showDataLabel) {\r\n      this.dims.height -= this.dataLabelMaxHeight.negative;\r\n    }\r\n    this.xScale = this.getXScale();\r\n    this.yScale = this.getYScale();\r\n\r\n    this.setColors();\r\n    this.legendOptions = this.getLegendOptions();\r\n\r\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\r\n  }\r\n\r\n  getXScale(): any {\r\n    this.xDomain = this.getXDomain();\r\n    const spacing = this.xDomain.length / (this.dims.width / this.barPadding + 1);\r\n    return scaleBand().range([0, this.dims.width]).paddingInner(spacing).domain(this.xDomain);\r\n  }\r\n\r\n  getYScale(): any {\r\n    this.yDomain = this.getYDomain();\r\n    const scale = scaleLinear().range([this.dims.height, 0]).domain(this.yDomain);\r\n    return this.roundDomains ? scale.nice() : scale;\r\n  }\r\n\r\n  getXDomain(): any[] {\r\n    return this.results.map(d => d.label);\r\n  }\r\n\r\n  getYDomain(): [number, number] {\r\n    const values = this.results.map(d => d.value);\r\n\r\n    let min = this.yScaleMin ? Math.min(this.yScaleMin, ...values) : Math.min(0, ...values);\r\n    if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\r\n      min = Math.min(min, ...this.yAxisTicks);\r\n    }\r\n\r\n    let max = this.yScaleMax ? Math.max(this.yScaleMax, ...values) : Math.max(0, ...values);\r\n    if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\r\n      max = Math.max(max, ...this.yAxisTicks);\r\n    }\r\n    return [min, max];\r\n  }\r\n\r\n  onClick(data: DataItem) {\r\n    this.select.emit(data);\r\n  }\r\n\r\n  setColors(): void {\r\n    let domain;\r\n    if (this.schemeType === 'ordinal') {\r\n      domain = this.xDomain;\r\n    } else {\r\n      domain = this.yDomain;\r\n    }\r\n\r\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\r\n  }\r\n\r\n  getLegendOptions() {\r\n    const opts = {\r\n      scaleType: this.schemeType,\r\n      colors: undefined,\r\n      domain: [],\r\n      title: undefined,\r\n      position: this.legendPosition\r\n    };\r\n    if (opts.scaleType === 'ordinal') {\r\n      opts.domain = this.xDomain;\r\n      opts.colors = this.colors;\r\n      opts.title = this.legendTitle;\r\n    } else {\r\n      opts.domain = this.yDomain;\r\n      opts.colors = this.colors.scale;\r\n    }\r\n    return opts;\r\n  }\r\n\r\n  updateYAxisWidth({ width }): void {\r\n    this.yAxisWidth = width;\r\n    this.update();\r\n  }\r\n\r\n  updateXAxisHeight({ height }): void {\r\n    this.xAxisHeight = height;\r\n    this.update();\r\n  }\r\n\r\n  onDataLabelMaxHeightChanged(event) {\r\n    if (event.size.negative) {\r\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\r\n    } else {\r\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\r\n    }\r\n    if (event.index === this.results.length - 1) {\r\n      setTimeout(() => this.update());\r\n    }\r\n  }\r\n\r\n  onActivate(item, fromLegend = false) {\r\n    item = this.results.find(d => {\r\n      if (fromLegend) {\r\n        return d.label === item.name;\r\n      } else {\r\n        return d.name === item.name;\r\n      }\r\n    });\r\n\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value && d.series === item.series;\r\n    });\r\n    if (idx > -1) {\r\n      return;\r\n    }\r\n\r\n    this.activeEntries = [item, ...this.activeEntries];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(item, fromLegend = false) {\r\n    item = this.results.find(d => {\r\n      if (fromLegend) {\r\n        return d.label === item.name;\r\n      } else {\r\n        return d.name === item.name;\r\n      }\r\n    });\r\n\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value && d.series === item.series;\r\n    });\r\n\r\n    this.activeEntries.splice(idx, 1);\r\n    this.activeEntries = [...this.activeEntries];\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  ViewEncapsulation,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\nimport { scaleBand, scaleLinear } from 'd3-scale';\r\n\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-bar-vertical-2d',\r\n  template: `\r\n    <ngx-charts-chart\r\n      [view]=\"[width, height]\"\r\n      [showLegend]=\"legend\"\r\n      [legendOptions]=\"legendOptions\"\r\n      [activeEntries]=\"activeEntries\"\r\n      [animations]=\"animations\"\r\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\r\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\r\n      (legendLabelClick)=\"onClick($event)\"\r\n    >\r\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\r\n        <svg:g\r\n          ngx-charts-grid-panel-series\r\n          [xScale]=\"groupScale\"\r\n          [yScale]=\"valueScale\"\r\n          [data]=\"results\"\r\n          [dims]=\"dims\"\r\n          orient=\"vertical\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-x-axis\r\n          *ngIf=\"xAxis\"\r\n          [xScale]=\"groupScale\"\r\n          [dims]=\"dims\"\r\n          [showLabel]=\"showXAxisLabel\"\r\n          [labelText]=\"xAxisLabel\"\r\n          [trimTicks]=\"trimXAxisTicks\"\r\n          [rotateTicks]=\"rotateXAxisTicks\"\r\n          [maxTickLength]=\"maxXAxisTickLength\"\r\n          [tickFormatting]=\"xAxisTickFormatting\"\r\n          [ticks]=\"xAxisTicks\"\r\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\r\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-y-axis\r\n          *ngIf=\"yAxis\"\r\n          [yScale]=\"valueScale\"\r\n          [dims]=\"dims\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [showLabel]=\"showYAxisLabel\"\r\n          [labelText]=\"yAxisLabel\"\r\n          [trimTicks]=\"trimYAxisTicks\"\r\n          [maxTickLength]=\"maxYAxisTickLength\"\r\n          [tickFormatting]=\"yAxisTickFormatting\"\r\n          [ticks]=\"yAxisTicks\"\r\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-series-vertical\r\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\r\n          [@animationState]=\"'active'\"\r\n          [attr.transform]=\"groupTransform(group)\"\r\n          [activeEntries]=\"activeEntries\"\r\n          [xScale]=\"innerScale\"\r\n          [yScale]=\"valueScale\"\r\n          [colors]=\"colors\"\r\n          [series]=\"group.series\"\r\n          [dims]=\"dims\"\r\n          [gradient]=\"gradient\"\r\n          [tooltipDisabled]=\"tooltipDisabled\"\r\n          [tooltipTemplate]=\"tooltipTemplate\"\r\n          [showDataLabel]=\"showDataLabel\"\r\n          [dataLabelFormatting]=\"dataLabelFormatting\"\r\n          [seriesName]=\"group.name\"\r\n          [roundEdges]=\"roundEdges\"\r\n          [animations]=\"animations\"\r\n          [noBarWhenZero]=\"noBarWhenZero\"\r\n          (select)=\"onClick($event, group)\"\r\n          (activate)=\"onActivate($event, group)\"\r\n          (deactivate)=\"onDeactivate($event, group)\"\r\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\r\n        />\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  styleUrls: ['../common/base-chart.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('animationState', [\r\n      transition(':leave', [\r\n        style({\r\n          opacity: 1,\r\n          transform: '*'\r\n        }),\r\n        animate(500, style({ opacity: 0, transform: 'scale(0)' }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class BarVertical2DComponent extends BaseChartComponent {\r\n  @Input() legend = false;\r\n  @Input() legendTitle: string = 'Legend';\r\n  @Input() legendPosition: string = 'right';\r\n  @Input() xAxis;\r\n  @Input() yAxis;\r\n  @Input() showXAxisLabel;\r\n  @Input() showYAxisLabel;\r\n  @Input() xAxisLabel;\r\n  @Input() yAxisLabel;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() scaleType = 'ordinal';\r\n  @Input() gradient: boolean;\r\n  @Input() showGridLines: boolean = true;\r\n  @Input() activeEntries: any[] = [];\r\n  @Input() schemeType: string;\r\n  @Input() trimXAxisTicks: boolean = true;\r\n  @Input() trimYAxisTicks: boolean = true;\r\n  @Input() rotateXAxisTicks: boolean = true;\r\n  @Input() maxXAxisTickLength: number = 16;\r\n  @Input() maxYAxisTickLength: number = 16;\r\n  @Input() xAxisTickFormatting: any;\r\n  @Input() yAxisTickFormatting: any;\r\n  @Input() xAxisTicks: any[];\r\n  @Input() yAxisTicks: any[];\r\n  @Input() groupPadding = 16;\r\n  @Input() barPadding = 8;\r\n  @Input() roundDomains: boolean = false;\r\n  @Input() roundEdges: boolean = true;\r\n  @Input() yScaleMax: number;\r\n  @Input() showDataLabel: boolean = false;\r\n  @Input() dataLabelFormatting: any;\r\n  @Input() noBarWhenZero: boolean = true;\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n\r\n  dims: ViewDimensions;\r\n  groupDomain: any[];\r\n  innerDomain: any[];\r\n  valuesDomain: any[];\r\n  groupScale: any;\r\n  innerScale: any;\r\n  valueScale: any;\r\n  transform: string;\r\n  colors: ColorHelper;\r\n  margin = [10, 20, 10, 20];\r\n  xAxisHeight: number = 0;\r\n  yAxisWidth: number = 0;\r\n  legendOptions: any;\r\n  dataLabelMaxHeight: any = { negative: 0, positive: 0 };\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    if (!this.showDataLabel) {\r\n      this.dataLabelMaxHeight = { negative: 0, positive: 0 };\r\n    }\r\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin,\r\n      showXAxis: this.xAxis,\r\n      showYAxis: this.yAxis,\r\n      xAxisHeight: this.xAxisHeight,\r\n      yAxisWidth: this.yAxisWidth,\r\n      showXLabel: this.showXAxisLabel,\r\n      showYLabel: this.showYAxisLabel,\r\n      showLegend: this.legend,\r\n      legendType: this.schemeType,\r\n      legendPosition: this.legendPosition\r\n    });\r\n\r\n    if (this.showDataLabel) {\r\n      this.dims.height -= this.dataLabelMaxHeight.negative;\r\n    }\r\n\r\n    this.formatDates();\r\n\r\n    this.groupDomain = this.getGroupDomain();\r\n    this.innerDomain = this.getInnerDomain();\r\n    this.valuesDomain = this.getValueDomain();\r\n\r\n    this.groupScale = this.getGroupScale();\r\n    this.innerScale = this.getInnerScale();\r\n    this.valueScale = this.getValueScale();\r\n\r\n    this.setColors();\r\n    this.legendOptions = this.getLegendOptions();\r\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\r\n  }\r\n\r\n  onDataLabelMaxHeightChanged(event, groupIndex) {\r\n    if (event.size.negative) {\r\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\r\n    } else {\r\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\r\n    }\r\n    if (groupIndex === this.results.length - 1) {\r\n      setTimeout(() => this.update());\r\n    }\r\n  }\r\n\r\n  getGroupScale(): any {\r\n    const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\r\n\r\n    return scaleBand()\r\n      .rangeRound([0, this.dims.width])\r\n      .paddingInner(spacing)\r\n      .paddingOuter(spacing / 2)\r\n      .domain(this.groupDomain);\r\n  }\r\n\r\n  getInnerScale(): any {\r\n    const width = this.groupScale.bandwidth();\r\n    const spacing = this.innerDomain.length / (width / this.barPadding + 1);\r\n    return scaleBand().rangeRound([0, width]).paddingInner(spacing).domain(this.innerDomain);\r\n  }\r\n\r\n  getValueScale(): any {\r\n    const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valuesDomain);\r\n    return this.roundDomains ? scale.nice() : scale;\r\n  }\r\n\r\n  getGroupDomain() {\r\n    const domain = [];\r\n    for (const group of this.results) {\r\n      if (!domain.includes(group.label)) {\r\n        domain.push(group.label);\r\n      }\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getInnerDomain() {\r\n    const domain = [];\r\n    for (const group of this.results) {\r\n      for (const d of group.series) {\r\n        if (!domain.includes(d.label)) {\r\n          domain.push(d.label);\r\n        }\r\n      }\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getValueDomain() {\r\n    const domain = [];\r\n    for (const group of this.results) {\r\n      for (const d of group.series) {\r\n        if (!domain.includes(d.value)) {\r\n          domain.push(d.value);\r\n        }\r\n      }\r\n    }\r\n\r\n    const min = Math.min(0, ...domain);\r\n    const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(0, ...domain);\r\n\r\n    return [min, max];\r\n  }\r\n\r\n  groupTransform(group) {\r\n    return `translate(${this.groupScale(group.label)}, 0)`;\r\n  }\r\n\r\n  onClick(data, group?) {\r\n    if (group) {\r\n      data.series = group.name;\r\n    }\r\n\r\n    this.select.emit(data);\r\n  }\r\n\r\n  trackBy(index, item) {\r\n    return item.name;\r\n  }\r\n\r\n  setColors(): void {\r\n    let domain;\r\n    if (this.schemeType === 'ordinal') {\r\n      domain = this.innerDomain;\r\n    } else {\r\n      domain = this.valuesDomain;\r\n    }\r\n\r\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\r\n  }\r\n\r\n  getLegendOptions() {\r\n    const opts = {\r\n      scaleType: this.schemeType,\r\n      colors: undefined,\r\n      domain: [],\r\n      title: undefined,\r\n      position: this.legendPosition\r\n    };\r\n    if (opts.scaleType === 'ordinal') {\r\n      opts.domain = this.innerDomain;\r\n      opts.colors = this.colors;\r\n      opts.title = this.legendTitle;\r\n    } else {\r\n      opts.domain = this.valuesDomain;\r\n      opts.colors = this.colors.scale;\r\n    }\r\n\r\n    return opts;\r\n  }\r\n\r\n  updateYAxisWidth({ width }) {\r\n    this.yAxisWidth = width;\r\n    this.update();\r\n  }\r\n\r\n  updateXAxisHeight({ height }) {\r\n    this.xAxisHeight = height;\r\n    this.update();\r\n  }\r\n\r\n  onActivate(event, group, fromLegend = false) {\r\n    const item = Object.assign({}, event);\r\n    if (group) {\r\n      item.series = group.name;\r\n    }\r\n\r\n    const items = this.results\r\n      .map(g => g.series)\r\n      .flat()\r\n      .filter(i => {\r\n        if (fromLegend) {\r\n          return i.label === item.name;\r\n        } else {\r\n          return i.name === item.name && i.series === item.series;\r\n        }\r\n      });\r\n\r\n    this.activeEntries = [...items];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(event, group, fromLegend = false) {\r\n    const item = Object.assign({}, event);\r\n    if (group) {\r\n      item.series = group.name;\r\n    }\r\n\r\n    this.activeEntries = this.activeEntries.filter(i => {\r\n      if (fromLegend) {\r\n        return i.label !== item.name;\r\n      } else {\r\n        return !(i.name === item.name && i.series === item.series);\r\n      }\r\n    });\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\nimport { scaleBand, scaleLinear } from 'd3-scale';\r\n\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-bar-vertical-normalized',\r\n  template: `\r\n    <ngx-charts-chart\r\n      [view]=\"[width, height]\"\r\n      [showLegend]=\"legend\"\r\n      [legendOptions]=\"legendOptions\"\r\n      [activeEntries]=\"activeEntries\"\r\n      [animations]=\"animations\"\r\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\r\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\r\n      (legendLabelClick)=\"onClick($event)\"\r\n    >\r\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\r\n        <svg:g\r\n          ngx-charts-x-axis\r\n          *ngIf=\"xAxis\"\r\n          [xScale]=\"xScale\"\r\n          [dims]=\"dims\"\r\n          [showLabel]=\"showXAxisLabel\"\r\n          [labelText]=\"xAxisLabel\"\r\n          [trimTicks]=\"trimXAxisTicks\"\r\n          [rotateTicks]=\"rotateXAxisTicks\"\r\n          [maxTickLength]=\"maxXAxisTickLength\"\r\n          [tickFormatting]=\"xAxisTickFormatting\"\r\n          [ticks]=\"xAxisTicks\"\r\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-y-axis\r\n          *ngIf=\"yAxis\"\r\n          [yScale]=\"yScale\"\r\n          [dims]=\"dims\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [showLabel]=\"showYAxisLabel\"\r\n          [labelText]=\"yAxisLabel\"\r\n          [trimTicks]=\"trimYAxisTicks\"\r\n          [maxTickLength]=\"maxYAxisTickLength\"\r\n          [tickFormatting]=\"yAxisTickFormatting\"\r\n          [ticks]=\"yAxisTicks\"\r\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          *ngFor=\"let group of results; trackBy: trackBy\"\r\n          [@animationState]=\"'active'\"\r\n          [attr.transform]=\"groupTransform(group)\"\r\n        >\r\n          <svg:g\r\n            ngx-charts-series-vertical\r\n            type=\"normalized\"\r\n            [xScale]=\"xScale\"\r\n            [yScale]=\"yScale\"\r\n            [activeEntries]=\"activeEntries\"\r\n            [colors]=\"colors\"\r\n            [series]=\"group.series\"\r\n            [dims]=\"dims\"\r\n            [gradient]=\"gradient\"\r\n            [tooltipDisabled]=\"tooltipDisabled\"\r\n            [tooltipTemplate]=\"tooltipTemplate\"\r\n            [seriesName]=\"group.name\"\r\n            [animations]=\"animations\"\r\n            [noBarWhenZero]=\"noBarWhenZero\"\r\n            (select)=\"onClick($event, group)\"\r\n            (activate)=\"onActivate($event, group)\"\r\n            (deactivate)=\"onDeactivate($event, group)\"\r\n          />\r\n        </svg:g>\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  styleUrls: ['../common/base-chart.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('animationState', [\r\n      transition(':leave', [\r\n        style({\r\n          opacity: 1,\r\n          transform: '*'\r\n        }),\r\n        animate(500, style({ opacity: 0, transform: 'scale(0)' }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class BarVerticalNormalizedComponent extends BaseChartComponent {\r\n  @Input() legend = false;\r\n  @Input() legendTitle: string = 'Legend';\r\n  @Input() legendPosition: string = 'right';\r\n  @Input() xAxis;\r\n  @Input() yAxis;\r\n  @Input() showXAxisLabel;\r\n  @Input() showYAxisLabel;\r\n  @Input() xAxisLabel;\r\n  @Input() yAxisLabel;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() gradient: boolean;\r\n  @Input() showGridLines: boolean = true;\r\n  @Input() activeEntries: any[] = [];\r\n  @Input() schemeType: string;\r\n  @Input() trimXAxisTicks: boolean = true;\r\n  @Input() trimYAxisTicks: boolean = true;\r\n  @Input() rotateXAxisTicks: boolean = true;\r\n  @Input() maxXAxisTickLength: number = 16;\r\n  @Input() maxYAxisTickLength: number = 16;\r\n  @Input() xAxisTickFormatting: any;\r\n  @Input() yAxisTickFormatting: any;\r\n  @Input() xAxisTicks: any[];\r\n  @Input() yAxisTicks: any[];\r\n  @Input() barPadding = 8;\r\n  @Input() roundDomains: boolean = false;\r\n  @Input() noBarWhenZero: boolean = true;\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n\r\n  dims: ViewDimensions;\r\n  groupDomain: any[];\r\n  innerDomain: any[];\r\n  valueDomain: any[];\r\n  xScale: any;\r\n  yScale: any;\r\n  transform: string;\r\n  colors: ColorHelper;\r\n  margin = [10, 20, 10, 20];\r\n  xAxisHeight: number = 0;\r\n  yAxisWidth: number = 0;\r\n  legendOptions: any;\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin,\r\n      showXAxis: this.xAxis,\r\n      showYAxis: this.yAxis,\r\n      xAxisHeight: this.xAxisHeight,\r\n      yAxisWidth: this.yAxisWidth,\r\n      showXLabel: this.showXAxisLabel,\r\n      showYLabel: this.showYAxisLabel,\r\n      showLegend: this.legend,\r\n      legendType: this.schemeType,\r\n      legendPosition: this.legendPosition\r\n    });\r\n\r\n    this.formatDates();\r\n\r\n    this.groupDomain = this.getGroupDomain();\r\n    this.innerDomain = this.getInnerDomain();\r\n    this.valueDomain = this.getValueDomain();\r\n\r\n    this.xScale = this.getXScale();\r\n    this.yScale = this.getYScale();\r\n\r\n    this.setColors();\r\n    this.legendOptions = this.getLegendOptions();\r\n\r\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\r\n  }\r\n\r\n  getGroupDomain() {\r\n    const domain = [];\r\n    for (const group of this.results) {\r\n      if (!domain.includes(group.label)) {\r\n        domain.push(group.label);\r\n      }\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getInnerDomain() {\r\n    const domain = [];\r\n    for (const group of this.results) {\r\n      for (const d of group.series) {\r\n        if (!domain.includes(d.label)) {\r\n          domain.push(d.label);\r\n        }\r\n      }\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getValueDomain() {\r\n    return [0, 100];\r\n  }\r\n\r\n  getXScale(): any {\r\n    const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\r\n\r\n    return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\r\n  }\r\n\r\n  getYScale(): any {\r\n    const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\r\n    return this.roundDomains ? scale.nice() : scale;\r\n  }\r\n\r\n  groupTransform(group) {\r\n    return `translate(${this.xScale(group.name)}, 0)`;\r\n  }\r\n\r\n  onClick(data, group?) {\r\n    if (group) {\r\n      data.series = group.name;\r\n    }\r\n\r\n    this.select.emit(data);\r\n  }\r\n\r\n  trackBy(index, item) {\r\n    return item.name;\r\n  }\r\n\r\n  setColors(): void {\r\n    let domain;\r\n    if (this.schemeType === 'ordinal') {\r\n      domain = this.innerDomain;\r\n    } else {\r\n      domain = this.valueDomain;\r\n    }\r\n\r\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\r\n  }\r\n\r\n  getLegendOptions() {\r\n    const opts = {\r\n      scaleType: this.schemeType,\r\n      colors: undefined,\r\n      domain: [],\r\n      title: undefined,\r\n      position: this.legendPosition\r\n    };\r\n    if (opts.scaleType === 'ordinal') {\r\n      opts.domain = this.innerDomain;\r\n      opts.colors = this.colors;\r\n      opts.title = this.legendTitle;\r\n    } else {\r\n      opts.domain = this.valueDomain;\r\n      opts.colors = this.colors.scale;\r\n    }\r\n\r\n    return opts;\r\n  }\r\n\r\n  updateYAxisWidth({ width }) {\r\n    this.yAxisWidth = width;\r\n    this.update();\r\n  }\r\n\r\n  updateXAxisHeight({ height }) {\r\n    this.xAxisHeight = height;\r\n    this.update();\r\n  }\r\n\r\n  onActivate(event, group, fromLegend = false) {\r\n    const item = Object.assign({}, event);\r\n    if (group) {\r\n      item.series = group.name;\r\n    }\r\n\r\n    const items = this.results\r\n      .map(g => g.series)\r\n      .flat()\r\n      .filter(i => {\r\n        if (fromLegend) {\r\n          return i.label === item.name;\r\n        } else {\r\n          return i.name === item.name && i.series === item.series;\r\n        }\r\n      });\r\n\r\n    this.activeEntries = [...items];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(event, group, fromLegend = false) {\r\n    const item = Object.assign({}, event);\r\n    if (group) {\r\n      item.series = group.name;\r\n    }\r\n\r\n    this.activeEntries = this.activeEntries.filter(i => {\r\n      if (fromLegend) {\r\n        return i.label !== item.name;\r\n      } else {\r\n        return !(i.name === item.name && i.series === item.series);\r\n      }\r\n    });\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\nimport { scaleBand, scaleLinear } from 'd3-scale';\r\n\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-bar-vertical-stacked',\r\n  template: `\r\n    <ngx-charts-chart\r\n      [view]=\"[width, height]\"\r\n      [showLegend]=\"legend\"\r\n      [legendOptions]=\"legendOptions\"\r\n      [activeEntries]=\"activeEntries\"\r\n      [animations]=\"animations\"\r\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\r\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\r\n      (legendLabelClick)=\"onClick($event)\"\r\n    >\r\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\r\n        <svg:g\r\n          ngx-charts-x-axis\r\n          *ngIf=\"xAxis\"\r\n          [xScale]=\"xScale\"\r\n          [dims]=\"dims\"\r\n          [showLabel]=\"showXAxisLabel\"\r\n          [labelText]=\"xAxisLabel\"\r\n          [trimTicks]=\"trimXAxisTicks\"\r\n          [rotateTicks]=\"rotateXAxisTicks\"\r\n          [maxTickLength]=\"maxXAxisTickLength\"\r\n          [tickFormatting]=\"xAxisTickFormatting\"\r\n          [ticks]=\"xAxisTicks\"\r\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\r\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-y-axis\r\n          *ngIf=\"yAxis\"\r\n          [yScale]=\"yScale\"\r\n          [dims]=\"dims\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [showLabel]=\"showYAxisLabel\"\r\n          [labelText]=\"yAxisLabel\"\r\n          [trimTicks]=\"trimYAxisTicks\"\r\n          [maxTickLength]=\"maxYAxisTickLength\"\r\n          [tickFormatting]=\"yAxisTickFormatting\"\r\n          [ticks]=\"yAxisTicks\"\r\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\r\n          [@animationState]=\"'active'\"\r\n          [attr.transform]=\"groupTransform(group)\"\r\n        >\r\n          <svg:g\r\n            ngx-charts-series-vertical\r\n            type=\"stacked\"\r\n            [xScale]=\"xScale\"\r\n            [yScale]=\"yScale\"\r\n            [activeEntries]=\"activeEntries\"\r\n            [colors]=\"colors\"\r\n            [series]=\"group.series\"\r\n            [dims]=\"dims\"\r\n            [gradient]=\"gradient\"\r\n            [tooltipDisabled]=\"tooltipDisabled\"\r\n            [tooltipTemplate]=\"tooltipTemplate\"\r\n            [showDataLabel]=\"showDataLabel\"\r\n            [dataLabelFormatting]=\"dataLabelFormatting\"\r\n            [seriesName]=\"group.name\"\r\n            [animations]=\"animations\"\r\n            [noBarWhenZero]=\"noBarWhenZero\"\r\n            (select)=\"onClick($event, group)\"\r\n            (activate)=\"onActivate($event, group)\"\r\n            (deactivate)=\"onDeactivate($event, group)\"\r\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\r\n          />\r\n        </svg:g>\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  styleUrls: ['../common/base-chart.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('animationState', [\r\n      transition(':leave', [\r\n        style({\r\n          opacity: 1,\r\n          transform: '*'\r\n        }),\r\n        animate(500, style({ opacity: 0, transform: 'scale(0)' }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class BarVerticalStackedComponent extends BaseChartComponent {\r\n  @Input() legend = false;\r\n  @Input() legendTitle: string = 'Legend';\r\n  @Input() legendPosition: string = 'right';\r\n  @Input() xAxis;\r\n  @Input() yAxis;\r\n  @Input() showXAxisLabel;\r\n  @Input() showYAxisLabel;\r\n  @Input() xAxisLabel;\r\n  @Input() yAxisLabel;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() gradient: boolean;\r\n  @Input() showGridLines: boolean = true;\r\n  @Input() activeEntries: any[] = [];\r\n  @Input() schemeType: string;\r\n  @Input() trimXAxisTicks: boolean = true;\r\n  @Input() trimYAxisTicks: boolean = true;\r\n  @Input() rotateXAxisTicks: boolean = true;\r\n  @Input() maxXAxisTickLength: number = 16;\r\n  @Input() maxYAxisTickLength: number = 16;\r\n  @Input() xAxisTickFormatting: any;\r\n  @Input() yAxisTickFormatting: any;\r\n  @Input() xAxisTicks: any[];\r\n  @Input() yAxisTicks: any[];\r\n  @Input() barPadding = 8;\r\n  @Input() roundDomains: boolean = false;\r\n  @Input() yScaleMax: number;\r\n  @Input() showDataLabel: boolean = false;\r\n  @Input() dataLabelFormatting: any;\r\n  @Input() noBarWhenZero: boolean = true;\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n\r\n  dims: ViewDimensions;\r\n  groupDomain: any[];\r\n  innerDomain: any[];\r\n  valueDomain: any[];\r\n  xScale: any;\r\n  yScale: any;\r\n  transform: string;\r\n  tickFormatting: (label: string) => string;\r\n  colors: ColorHelper;\r\n  margin = [10, 20, 10, 20];\r\n  xAxisHeight: number = 0;\r\n  yAxisWidth: number = 0;\r\n  legendOptions: any;\r\n  dataLabelMaxHeight: any = { negative: 0, positive: 0 };\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    if (!this.showDataLabel) {\r\n      this.dataLabelMaxHeight = { negative: 0, positive: 0 };\r\n    }\r\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin,\r\n      showXAxis: this.xAxis,\r\n      showYAxis: this.yAxis,\r\n      xAxisHeight: this.xAxisHeight,\r\n      yAxisWidth: this.yAxisWidth,\r\n      showXLabel: this.showXAxisLabel,\r\n      showYLabel: this.showYAxisLabel,\r\n      showLegend: this.legend,\r\n      legendType: this.schemeType,\r\n      legendPosition: this.legendPosition\r\n    });\r\n\r\n    if (this.showDataLabel) {\r\n      this.dims.height -= this.dataLabelMaxHeight.negative;\r\n    }\r\n\r\n    this.formatDates();\r\n\r\n    this.groupDomain = this.getGroupDomain();\r\n    this.innerDomain = this.getInnerDomain();\r\n    this.valueDomain = this.getValueDomain();\r\n\r\n    this.xScale = this.getXScale();\r\n    this.yScale = this.getYScale();\r\n\r\n    this.setColors();\r\n    this.legendOptions = this.getLegendOptions();\r\n\r\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\r\n  }\r\n\r\n  getGroupDomain() {\r\n    const domain = [];\r\n    for (const group of this.results) {\r\n      if (!domain.includes(group.label)) {\r\n        domain.push(group.label);\r\n      }\r\n    }\r\n    return domain;\r\n  }\r\n\r\n  getInnerDomain() {\r\n    const domain = [];\r\n    for (const group of this.results) {\r\n      for (const d of group.series) {\r\n        if (!domain.includes(d.label)) {\r\n          domain.push(d.label);\r\n        }\r\n      }\r\n    }\r\n    return domain;\r\n  }\r\n\r\n  getValueDomain() {\r\n    const domain = [];\r\n    let smallest = 0;\r\n    let biggest = 0;\r\n    for (const group of this.results) {\r\n      let smallestSum = 0;\r\n      let biggestSum = 0;\r\n      for (const d of group.series) {\r\n        if (d.value < 0) {\r\n          smallestSum += d.value;\r\n        } else {\r\n          biggestSum += d.value;\r\n        }\r\n        smallest = d.value < smallest ? d.value : smallest;\r\n        biggest = d.value > biggest ? d.value : biggest;\r\n      }\r\n      domain.push(smallestSum);\r\n      domain.push(biggestSum);\r\n    }\r\n    domain.push(smallest);\r\n    domain.push(biggest);\r\n\r\n    const min = Math.min(0, ...domain);\r\n    const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(...domain);\r\n    return [min, max];\r\n  }\r\n\r\n  getXScale(): any {\r\n    const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\r\n    return scaleBand().rangeRound([0, this.dims.width]).paddingInner(spacing).domain(this.groupDomain);\r\n  }\r\n\r\n  getYScale(): any {\r\n    const scale = scaleLinear().range([this.dims.height, 0]).domain(this.valueDomain);\r\n    return this.roundDomains ? scale.nice() : scale;\r\n  }\r\n\r\n  onDataLabelMaxHeightChanged(event, groupIndex) {\r\n    if (event.size.negative) {\r\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\r\n    } else {\r\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\r\n    }\r\n    if (groupIndex === this.results.length - 1) {\r\n      setTimeout(() => this.update());\r\n    }\r\n  }\r\n\r\n  groupTransform(group) {\r\n    return `translate(${this.xScale(group.name) || 0}, 0)`;\r\n  }\r\n\r\n  onClick(data, group?) {\r\n    if (group) {\r\n      data.series = group.name;\r\n    }\r\n\r\n    this.select.emit(data);\r\n  }\r\n\r\n  trackBy(index, item) {\r\n    return item.name;\r\n  }\r\n\r\n  setColors(): void {\r\n    let domain;\r\n    if (this.schemeType === 'ordinal') {\r\n      domain = this.innerDomain;\r\n    } else {\r\n      domain = this.valueDomain;\r\n    }\r\n\r\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\r\n  }\r\n\r\n  getLegendOptions() {\r\n    const opts = {\r\n      scaleType: this.schemeType,\r\n      colors: undefined,\r\n      domain: [],\r\n      title: undefined,\r\n      position: this.legendPosition\r\n    };\r\n    if (opts.scaleType === 'ordinal') {\r\n      opts.domain = this.innerDomain;\r\n      opts.colors = this.colors;\r\n      opts.title = this.legendTitle;\r\n    } else {\r\n      opts.domain = this.valueDomain;\r\n      opts.colors = this.colors.scale;\r\n    }\r\n\r\n    return opts;\r\n  }\r\n\r\n  updateYAxisWidth({ width }) {\r\n    this.yAxisWidth = width;\r\n    this.update();\r\n  }\r\n\r\n  updateXAxisHeight({ height }) {\r\n    this.xAxisHeight = height;\r\n    this.update();\r\n  }\r\n\r\n  onActivate(event, group, fromLegend = false) {\r\n    const item = Object.assign({}, event);\r\n    if (group) {\r\n      item.series = group.name;\r\n    }\r\n\r\n    const items = this.results\r\n      .map(g => g.series)\r\n      .flat()\r\n      .filter(i => {\r\n        if (fromLegend) {\r\n          return i.label === item.name;\r\n        } else {\r\n          return i.name === item.name && i.series === item.series;\r\n        }\r\n      });\r\n\r\n    this.activeEntries = [...items];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(event, group, fromLegend = false) {\r\n    const item = Object.assign({}, event);\r\n    if (group) {\r\n      item.series = group.name;\r\n    }\r\n\r\n    this.activeEntries = this.activeEntries.filter(i => {\r\n      if (fromLegend) {\r\n        return i.label !== item.name;\r\n      } else {\r\n        return !(i.name === item.name && i.series === item.series);\r\n      }\r\n    });\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnChanges, ChangeDetectionStrategy, TemplateRef } from '@angular/core';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\nimport { formatLabel, escapeLabel } from '../common/label.helper';\r\nimport { DataItem } from '../models/chart-data.model';\r\n\r\nexport enum D0Types {\r\n  positive = 'positive',\r\n  negative = 'negative'\r\n}\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-series-vertical]',\r\n  template: `\r\n    <svg:g\r\n      ngx-charts-bar\r\n      *ngFor=\"let bar of bars; trackBy: trackBy\"\r\n      [@animationState]=\"'active'\"\r\n      [@.disabled]=\"!animations\"\r\n      [width]=\"bar.width\"\r\n      [height]=\"bar.height\"\r\n      [x]=\"bar.x\"\r\n      [y]=\"bar.y\"\r\n      [fill]=\"bar.color\"\r\n      [stops]=\"bar.gradientStops\"\r\n      [data]=\"bar.data\"\r\n      [orientation]=\"'vertical'\"\r\n      [roundEdges]=\"bar.roundEdges\"\r\n      [gradient]=\"gradient\"\r\n      [ariaLabel]=\"bar.ariaLabel\"\r\n      [isActive]=\"isActive(bar.data)\"\r\n      (select)=\"onClick($event)\"\r\n      (activate)=\"activate.emit($event)\"\r\n      (deactivate)=\"deactivate.emit($event)\"\r\n      ngx-tooltip\r\n      [tooltipDisabled]=\"tooltipDisabled\"\r\n      [tooltipPlacement]=\"tooltipPlacement\"\r\n      [tooltipType]=\"tooltipType\"\r\n      [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\r\n      [tooltipTemplate]=\"tooltipTemplate\"\r\n      [tooltipContext]=\"bar.data\"\r\n      [noBarWhenZero]=\"noBarWhenZero\"\r\n      [animations]=\"animations\"\r\n    ></svg:g>\r\n    <svg:g *ngIf=\"showDataLabel\">\r\n      <svg:g\r\n        ngx-charts-bar-label\r\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\r\n        [barX]=\"b.x\"\r\n        [barY]=\"b.y\"\r\n        [barWidth]=\"b.width\"\r\n        [barHeight]=\"b.height\"\r\n        [value]=\"b.total\"\r\n        [valueFormatting]=\"dataLabelFormatting\"\r\n        [orientation]=\"'vertical'\"\r\n        (dimensionsChanged)=\"dataLabelHeightChanged.emit({ size: $event, index: i })\"\r\n      />\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('animationState', [\r\n      transition(':leave', [\r\n        style({\r\n          opacity: 1\r\n        }),\r\n        animate(500, style({ opacity: 0 }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class SeriesVerticalComponent implements OnChanges {\r\n  @Input() dims;\r\n  @Input() type = 'standard';\r\n  @Input() series;\r\n  @Input() xScale;\r\n  @Input() yScale;\r\n  @Input() colors;\r\n  @Input() gradient: boolean;\r\n  @Input() activeEntries: any[];\r\n  @Input() seriesName: string;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() tooltipTemplate: TemplateRef<any>;\r\n  @Input() roundEdges: boolean;\r\n  @Input() animations: boolean = true;\r\n  @Input() showDataLabel: boolean = false;\r\n  @Input() dataLabelFormatting: any;\r\n  @Input() noBarWhenZero: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n  @Output() activate = new EventEmitter();\r\n  @Output() deactivate = new EventEmitter();\r\n  @Output() dataLabelHeightChanged = new EventEmitter();\r\n\r\n  tooltipPlacement: string;\r\n  tooltipType: string;\r\n\r\n  bars: any;\r\n  x: any;\r\n  y: any;\r\n  barsForDataLabels: Array<{ x: number; y: number; width: number; height: number; total: number; series: string }> = [];\r\n\r\n  ngOnChanges(changes): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    this.updateTooltipSettings();\r\n    let width;\r\n    if (this.series.length) {\r\n      width = this.xScale.bandwidth();\r\n    }\r\n    width = Math.round(width);\r\n    const yScaleMin = Math.max(this.yScale.domain()[0], 0);\r\n\r\n    const d0 = {\r\n      [D0Types.positive]: 0,\r\n      [D0Types.negative]: 0\r\n    };\r\n    let d0Type = D0Types.positive;\r\n\r\n    let total;\r\n    if (this.type === 'normalized') {\r\n      total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\r\n    }\r\n\r\n    this.bars = this.series.map((d, index) => {\r\n      let value = d.value;\r\n      const label = this.getLabel(d);\r\n      const formattedLabel = formatLabel(label);\r\n      const roundEdges = this.roundEdges;\r\n      d0Type = value > 0 ? D0Types.positive : D0Types.negative;\r\n\r\n      const bar: any = {\r\n        value,\r\n        label,\r\n        roundEdges,\r\n        data: d,\r\n        width,\r\n        formattedLabel,\r\n        height: 0,\r\n        x: 0,\r\n        y: 0\r\n      };\r\n\r\n      if (this.type === 'standard') {\r\n        bar.height = Math.abs(this.yScale(value) - this.yScale(yScaleMin));\r\n        bar.x = this.xScale(label);\r\n\r\n        if (value < 0) {\r\n          bar.y = this.yScale(0);\r\n        } else {\r\n          bar.y = this.yScale(value);\r\n        }\r\n      } else if (this.type === 'stacked') {\r\n        const offset0 = d0[d0Type];\r\n        const offset1 = offset0 + value;\r\n        d0[d0Type] += value;\r\n\r\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\r\n        bar.x = 0;\r\n        bar.y = this.yScale(offset1);\r\n        bar.offset0 = offset0;\r\n        bar.offset1 = offset1;\r\n      } else if (this.type === 'normalized') {\r\n        let offset0 = d0[d0Type];\r\n        let offset1 = offset0 + value;\r\n        d0[d0Type] += value;\r\n\r\n        if (total > 0) {\r\n          offset0 = (offset0 * 100) / total;\r\n          offset1 = (offset1 * 100) / total;\r\n        } else {\r\n          offset0 = 0;\r\n          offset1 = 0;\r\n        }\r\n\r\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\r\n        bar.x = 0;\r\n        bar.y = this.yScale(offset1);\r\n        bar.offset0 = offset0;\r\n        bar.offset1 = offset1;\r\n        value = (offset1 - offset0).toFixed(2) + '%';\r\n      }\r\n\r\n      if (this.colors.scaleType === 'ordinal') {\r\n        bar.color = this.colors.getColor(label);\r\n      } else {\r\n        if (this.type === 'standard') {\r\n          bar.color = this.colors.getColor(value);\r\n          bar.gradientStops = this.colors.getLinearGradientStops(value);\r\n        } else {\r\n          bar.color = this.colors.getColor(bar.offset1);\r\n          bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\r\n        }\r\n      }\r\n\r\n      let tooltipLabel = formattedLabel;\r\n      bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\r\n      if (this.seriesName) {\r\n        tooltipLabel = `${this.seriesName} â¢ ${formattedLabel}`;\r\n        bar.data.series = this.seriesName;\r\n        bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\r\n      }\r\n\r\n      bar.tooltipText = this.tooltipDisabled\r\n        ? undefined\r\n        : `\r\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\r\n        <span class=\"tooltip-val\">${\r\n          this.dataLabelFormatting ? this.dataLabelFormatting(value) : value.toLocaleString()\r\n        }</span>\r\n      `;\r\n\r\n      return bar;\r\n    });\r\n\r\n    this.updateDataLabels();\r\n  }\r\n\r\n  updateDataLabels() {\r\n    if (this.type === 'stacked') {\r\n      this.barsForDataLabels = [];\r\n      const section: any = {};\r\n      section.series = this.seriesName;\r\n      const totalPositive = this.series.map(d => d.value).reduce((sum, d) => (d > 0 ? sum + d : sum), 0);\r\n      const totalNegative = this.series.map(d => d.value).reduce((sum, d) => (d < 0 ? sum + d : sum), 0);\r\n      section.total = totalPositive + totalNegative;\r\n      section.x = 0;\r\n      section.y = 0;\r\n      if (section.total > 0) {\r\n        section.height = this.yScale(totalPositive);\r\n      } else {\r\n        section.height = this.yScale(totalNegative);\r\n      }\r\n      section.width = this.xScale.bandwidth();\r\n      this.barsForDataLabels.push(section);\r\n    } else {\r\n      this.barsForDataLabels = this.series.map(d => {\r\n        const section: any = {};\r\n        section.series = this.seriesName ? this.seriesName : d.label;\r\n        section.total = d.value;\r\n        section.x = this.xScale(d.label);\r\n        section.y = this.yScale(0);\r\n        section.height = this.yScale(section.total) - this.yScale(0);\r\n        section.width = this.xScale.bandwidth();\r\n        return section;\r\n      });\r\n    }\r\n  }\r\n\r\n  updateTooltipSettings() {\r\n    this.tooltipPlacement = this.tooltipDisabled ? undefined : 'top';\r\n    this.tooltipType = this.tooltipDisabled ? undefined : 'tooltip';\r\n  }\r\n\r\n  isActive(entry): boolean {\r\n    if (!this.activeEntries) return false;\r\n    const item = this.activeEntries.find(d => {\r\n      return entry.name === d.name && entry.series === d.series;\r\n    });\r\n    return item !== undefined;\r\n  }\r\n\r\n  onClick(data: DataItem): void {\r\n    this.select.emit(data);\r\n  }\r\n\r\n  getLabel(dataItem): string {\r\n    if (dataItem.label) {\r\n      return dataItem.label;\r\n    }\r\n    return dataItem.name;\r\n  }\r\n\r\n  trackBy(index, bar): string {\r\n    return bar.label;\r\n  }\r\n\r\n  trackDataLabelBy(index, barLabel) {\r\n    return index + '#' + barLabel.series + '#' + barLabel.total;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ChangeDetectionStrategy,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\nimport { formatLabel, escapeLabel } from '../common/label.helper';\r\nimport { D0Types } from './series-vertical.component';\r\nimport { DataItem } from '../models/chart-data.model';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-series-horizontal]',\r\n  template: `\r\n    <svg:g\r\n      ngx-charts-bar\r\n      *ngFor=\"let bar of bars; trackBy: trackBy\"\r\n      [@animationState]=\"'active'\"\r\n      [width]=\"bar.width\"\r\n      [height]=\"bar.height\"\r\n      [x]=\"bar.x\"\r\n      [y]=\"bar.y\"\r\n      [fill]=\"bar.color\"\r\n      [stops]=\"bar.gradientStops\"\r\n      [data]=\"bar.data\"\r\n      [orientation]=\"'horizontal'\"\r\n      [roundEdges]=\"bar.roundEdges\"\r\n      (select)=\"click($event)\"\r\n      [gradient]=\"gradient\"\r\n      [isActive]=\"isActive(bar.data)\"\r\n      [ariaLabel]=\"bar.ariaLabel\"\r\n      [animations]=\"animations\"\r\n      (activate)=\"activate.emit($event)\"\r\n      (deactivate)=\"deactivate.emit($event)\"\r\n      ngx-tooltip\r\n      [tooltipDisabled]=\"tooltipDisabled\"\r\n      [tooltipPlacement]=\"tooltipPlacement\"\r\n      [tooltipType]=\"tooltipType\"\r\n      [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\r\n      [tooltipTemplate]=\"tooltipTemplate\"\r\n      [tooltipContext]=\"bar.data\"\r\n      [noBarWhenZero]=\"noBarWhenZero\"\r\n    ></svg:g>\r\n    <svg:g *ngIf=\"showDataLabel\">\r\n      <svg:g\r\n        ngx-charts-bar-label\r\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\r\n        [barX]=\"b.x\"\r\n        [barY]=\"b.y\"\r\n        [barWidth]=\"b.width\"\r\n        [barHeight]=\"b.height\"\r\n        [value]=\"b.total\"\r\n        [valueFormatting]=\"dataLabelFormatting\"\r\n        [orientation]=\"'horizontal'\"\r\n        (dimensionsChanged)=\"dataLabelWidthChanged.emit({ size: $event, index: i })\"\r\n      />\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('animationState', [\r\n      transition(':leave', [\r\n        style({\r\n          opacity: 1\r\n        }),\r\n        animate(500, style({ opacity: 0 }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class SeriesHorizontal implements OnChanges {\r\n  bars: any;\r\n  x: any;\r\n  y: any;\r\n  barsForDataLabels: Array<{ x: number; y: number; width: number; height: number; total: number; series: string }> = [];\r\n\r\n  @Input() dims;\r\n  @Input() type = 'standard';\r\n  @Input() series;\r\n  @Input() xScale;\r\n  @Input() yScale;\r\n  @Input() colors;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() gradient: boolean;\r\n  @Input() activeEntries: any[];\r\n  @Input() seriesName: string;\r\n  @Input() tooltipTemplate: TemplateRef<any>;\r\n  @Input() roundEdges: boolean;\r\n  @Input() animations: boolean = true;\r\n  @Input() showDataLabel: boolean = false;\r\n  @Input() dataLabelFormatting: any;\r\n  @Input() noBarWhenZero: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n  @Output() activate = new EventEmitter();\r\n  @Output() deactivate = new EventEmitter();\r\n  @Output() dataLabelWidthChanged = new EventEmitter();\r\n\r\n  tooltipPlacement: string;\r\n  tooltipType: string;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    this.updateTooltipSettings();\r\n    const d0 = {\r\n      [D0Types.positive]: 0,\r\n      [D0Types.negative]: 0\r\n    };\r\n    let d0Type: D0Types;\r\n    d0Type = D0Types.positive;\r\n    let total;\r\n    if (this.type === 'normalized') {\r\n      total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\r\n    }\r\n    const xScaleMin = Math.max(this.xScale.domain()[0], 0);\r\n\r\n    this.bars = this.series.map((d, index) => {\r\n      let value = d.value;\r\n      const label = this.getLabel(d);\r\n      const formattedLabel = formatLabel(label);\r\n      const roundEdges = this.roundEdges;\r\n      d0Type = value > 0 ? D0Types.positive : D0Types.negative;\r\n\r\n      const bar: any = {\r\n        value,\r\n        label,\r\n        roundEdges,\r\n        data: d,\r\n        formattedLabel\r\n      };\r\n\r\n      bar.height = this.yScale.bandwidth();\r\n\r\n      if (this.type === 'standard') {\r\n        bar.width = Math.abs(this.xScale(value) - this.xScale(xScaleMin));\r\n        if (value < 0) {\r\n          bar.x = this.xScale(value);\r\n        } else {\r\n          bar.x = this.xScale(xScaleMin);\r\n        }\r\n        bar.y = this.yScale(label);\r\n      } else if (this.type === 'stacked') {\r\n        const offset0 = d0[d0Type];\r\n        const offset1 = offset0 + value;\r\n        d0[d0Type] += value;\r\n\r\n        bar.width = this.xScale(offset1) - this.xScale(offset0);\r\n        bar.x = this.xScale(offset0);\r\n        bar.y = 0;\r\n        bar.offset0 = offset0;\r\n        bar.offset1 = offset1;\r\n      } else if (this.type === 'normalized') {\r\n        let offset0 = d0[d0Type];\r\n        let offset1 = offset0 + value;\r\n        d0[d0Type] += value;\r\n\r\n        if (total > 0) {\r\n          offset0 = (offset0 * 100) / total;\r\n          offset1 = (offset1 * 100) / total;\r\n        } else {\r\n          offset0 = 0;\r\n          offset1 = 0;\r\n        }\r\n\r\n        bar.width = this.xScale(offset1) - this.xScale(offset0);\r\n        bar.x = this.xScale(offset0);\r\n        bar.y = 0;\r\n        bar.offset0 = offset0;\r\n        bar.offset1 = offset1;\r\n        value = (offset1 - offset0).toFixed(2) + '%';\r\n      }\r\n\r\n      if (this.colors.scaleType === 'ordinal') {\r\n        bar.color = this.colors.getColor(label);\r\n      } else {\r\n        if (this.type === 'standard') {\r\n          bar.color = this.colors.getColor(value);\r\n          bar.gradientStops = this.colors.getLinearGradientStops(value);\r\n        } else {\r\n          bar.color = this.colors.getColor(bar.offset1);\r\n          bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\r\n        }\r\n      }\r\n\r\n      let tooltipLabel = formattedLabel;\r\n      bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\r\n      if (this.seriesName) {\r\n        tooltipLabel = `${this.seriesName} â¢ ${formattedLabel}`;\r\n        bar.data.series = this.seriesName;\r\n        bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\r\n      }\r\n\r\n      bar.tooltipText = this.tooltipDisabled\r\n        ? undefined\r\n        : `\r\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\r\n        <span class=\"tooltip-val\">${\r\n          this.dataLabelFormatting ? this.dataLabelFormatting(value) : value.toLocaleString()\r\n        }</span>\r\n      `;\r\n\r\n      return bar;\r\n    });\r\n\r\n    this.updateDataLabels();\r\n  }\r\n\r\n  updateDataLabels() {\r\n    if (this.type === 'stacked') {\r\n      this.barsForDataLabels = [];\r\n      const section: any = {};\r\n      section.series = this.seriesName;\r\n      const totalPositive = this.series.map(d => d.value).reduce((sum, d) => (d > 0 ? sum + d : sum), 0);\r\n      const totalNegative = this.series.map(d => d.value).reduce((sum, d) => (d < 0 ? sum + d : sum), 0);\r\n      section.total = totalPositive + totalNegative;\r\n      section.x = 0;\r\n      section.y = 0;\r\n      // if total is positive then we show it on the right, otherwise on the left\r\n      if (section.total > 0) {\r\n        section.width = this.xScale(totalPositive);\r\n      } else {\r\n        section.width = this.xScale(totalNegative);\r\n      }\r\n      section.height = this.yScale.bandwidth();\r\n      this.barsForDataLabels.push(section);\r\n    } else {\r\n      this.barsForDataLabels = this.series.map(d => {\r\n        const section: any = {};\r\n        section.series = this.seriesName ? this.seriesName : d.label;\r\n        section.total = d.value;\r\n        section.x = this.xScale(0);\r\n        section.y = this.yScale(d.label);\r\n        section.width = this.xScale(section.total) - this.xScale(0);\r\n        section.height = this.yScale.bandwidth();\r\n        return section;\r\n      });\r\n    }\r\n  }\r\n\r\n  updateTooltipSettings() {\r\n    this.tooltipPlacement = this.tooltipDisabled ? undefined : 'top';\r\n    this.tooltipType = this.tooltipDisabled ? undefined : 'tooltip';\r\n  }\r\n\r\n  isActive(entry): boolean {\r\n    if (!this.activeEntries) return false;\r\n    const item = this.activeEntries.find(d => {\r\n      return entry.name === d.name && entry.series === d.series;\r\n    });\r\n    return item !== undefined;\r\n  }\r\n\r\n  getLabel(dataItem): string {\r\n    if (dataItem.label) {\r\n      return dataItem.label;\r\n    }\r\n    return dataItem.name;\r\n  }\r\n\r\n  trackBy(index, bar) {\r\n    return bar.label;\r\n  }\r\n\r\n  trackDataLabelBy(index, barLabel) {\r\n    return index + '#' + barLabel.series + '#' + barLabel.total;\r\n  }\r\n\r\n  click(data: DataItem): void {\r\n    this.select.emit(data);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ChangeDetectionStrategy,\r\n  ElementRef,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport { formatLabel } from '../common/label.helper';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-bar-label]',\r\n  template: `\r\n    <svg:text\r\n      class=\"textDataLabel\"\r\n      alignment-baseline=\"middle\"\r\n      [attr.text-anchor]=\"textAnchor\"\r\n      [attr.transform]=\"transform\"\r\n      [attr.x]=\"x\"\r\n      [attr.y]=\"y\"\r\n    >\r\n      {{ formatedValue }}\r\n    </svg:text>\r\n  `,\r\n  styleUrls: ['./bar-label.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BarLabelComponent implements OnChanges {\r\n  @Input() value;\r\n  @Input() valueFormatting: any;\r\n  @Input() barX;\r\n  @Input() barY;\r\n  @Input() barWidth;\r\n  @Input() barHeight;\r\n  @Input() orientation;\r\n\r\n  @Output() dimensionsChanged: EventEmitter<any> = new EventEmitter();\r\n\r\n  element: any;\r\n  x: number;\r\n  y: number;\r\n  horizontalPadding: number = 2;\r\n  verticalPadding: number = 5;\r\n  formatedValue: string;\r\n  transform: string;\r\n  textAnchor: string;\r\n\r\n  constructor(element: ElementRef) {\r\n    this.element = element.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  getSize(): any {\r\n    const h = this.element.getBoundingClientRect().height;\r\n    const w = this.element.getBoundingClientRect().width;\r\n    return { height: h, width: w, negative: this.value < 0 };\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dimensionsChanged.emit(this.getSize());\r\n  }\r\n\r\n  update(): void {\r\n    if (this.valueFormatting) {\r\n      this.formatedValue = this.valueFormatting(this.value);\r\n    } else {\r\n      this.formatedValue = formatLabel(this.value);\r\n    }\r\n\r\n    if (this.orientation === 'horizontal') {\r\n      this.x = this.barX + this.barWidth;\r\n      // if the value is negative then it's on the left of the x0.\r\n      // we need to put the data label in front of the bar\r\n      if (this.value < 0) {\r\n        this.x = this.x - this.horizontalPadding;\r\n        this.textAnchor = 'end';\r\n      } else {\r\n        this.x = this.x + this.horizontalPadding;\r\n        this.textAnchor = 'start';\r\n      }\r\n      this.y = this.barY + this.barHeight / 2;\r\n    } else {\r\n      // orientation must be \"vertical\"\r\n      this.x = this.barX + this.barWidth / 2;\r\n      this.y = this.barY + this.barHeight;\r\n\r\n      if (this.value < 0) {\r\n        this.y = this.y + this.verticalPadding;\r\n        this.textAnchor = 'end';\r\n      } else {\r\n        this.y = this.y - this.verticalPadding;\r\n        this.textAnchor = 'start';\r\n      }\r\n      this.transform = `rotate(-45, ${this.x} , ${this.y})`;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ChartCommonModule } from '../common/chart-common.module';\r\nimport { BarComponent } from './bar.component';\r\nimport { BarHorizontalComponent } from './bar-horizontal.component';\r\nimport { BarHorizontal2DComponent } from './bar-horizontal-2d.component';\r\nimport { BarHorizontalNormalizedComponent } from './bar-horizontal-normalized.component';\r\nimport { BarHorizontalStackedComponent } from './bar-horizontal-stacked.component';\r\nimport { BarVerticalComponent } from './bar-vertical.component';\r\nimport { BarVertical2DComponent } from './bar-vertical-2d.component';\r\nimport { BarVerticalNormalizedComponent } from './bar-vertical-normalized.component';\r\nimport { BarVerticalStackedComponent } from './bar-vertical-stacked.component';\r\nimport { SeriesHorizontal } from './series-horizontal.component';\r\nimport { SeriesVerticalComponent } from './series-vertical.component';\r\nimport { BarLabelComponent } from './bar-label.component';\r\n\r\n@NgModule({\r\n  imports: [ChartCommonModule],\r\n  declarations: [\r\n    BarComponent,\r\n    BarHorizontalComponent,\r\n    BarHorizontal2DComponent,\r\n    BarHorizontalNormalizedComponent,\r\n    BarHorizontalStackedComponent,\r\n    BarVerticalComponent,\r\n    BarVertical2DComponent,\r\n    BarVerticalNormalizedComponent,\r\n    BarVerticalStackedComponent,\r\n    BarLabelComponent,\r\n    SeriesHorizontal,\r\n    SeriesVerticalComponent\r\n  ],\r\n  exports: [\r\n    BarComponent,\r\n    BarHorizontalComponent,\r\n    BarHorizontal2DComponent,\r\n    BarHorizontalNormalizedComponent,\r\n    BarHorizontalStackedComponent,\r\n    BarVerticalComponent,\r\n    BarVertical2DComponent,\r\n    BarVerticalNormalizedComponent,\r\n    BarVerticalStackedComponent,\r\n    BarLabelComponent,\r\n    SeriesHorizontal,\r\n    SeriesVerticalComponent\r\n  ]\r\n})\r\nexport class BarChartModule {}\r\n","import { scaleLinear, scalePoint, scaleTime } from 'd3-scale';\r\n\r\nexport function getDomain(values, scaleType, autoScale, minVal?, maxVal?): number[] {\r\n  let domain: number[] = [];\r\n  if (scaleType === 'linear') {\r\n    values = values.map(v => Number(v));\r\n    if (!autoScale) {\r\n      values.push(0);\r\n    }\r\n  }\r\n\r\n  if (scaleType === 'time' || scaleType === 'linear') {\r\n    const min = minVal ? minVal : Math.min(...values);\r\n    const max = maxVal ? maxVal : Math.max(...values);\r\n\r\n    domain = [min, max];\r\n  } else {\r\n    domain = values;\r\n  }\r\n\r\n  return domain;\r\n}\r\n\r\nexport function getScale(domain, range: number[], scaleType, roundDomains): any {\r\n  let scale: any;\r\n\r\n  if (scaleType === 'time') {\r\n    scale = scaleTime().range(range).domain(domain);\r\n  } else if (scaleType === 'linear') {\r\n    scale = scaleLinear().range(range).domain(domain);\r\n\r\n    if (roundDomains) {\r\n      scale = scale.nice();\r\n    }\r\n  } else if (scaleType === 'ordinal') {\r\n    scale = scalePoint().range([range[0], range[1]]).domain(domain);\r\n  }\r\n\r\n  return scale;\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  HostListener,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\nimport { scaleLinear } from 'd3-scale';\r\n\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { getScaleType } from '../common/domain.helper';\r\nimport { getDomain, getScale } from './bubble-chart.utils';\r\nimport { id } from '../utils/id';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-bubble-chart',\r\n  template: `\r\n    <ngx-charts-chart\r\n      [view]=\"[width, height]\"\r\n      [showLegend]=\"legend\"\r\n      [activeEntries]=\"activeEntries\"\r\n      [legendOptions]=\"legendOptions\"\r\n      [animations]=\"animations\"\r\n      (legendLabelClick)=\"onClick($event)\"\r\n      (legendLabelActivate)=\"onActivate($event)\"\r\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\r\n    >\r\n      <svg:defs>\r\n        <svg:clipPath [attr.id]=\"clipPathId\">\r\n          <svg:rect\r\n            [attr.width]=\"dims.width + 10\"\r\n            [attr.height]=\"dims.height + 10\"\r\n            [attr.transform]=\"'translate(-5, -5)'\"\r\n          />\r\n        </svg:clipPath>\r\n      </svg:defs>\r\n      <svg:g [attr.transform]=\"transform\" class=\"bubble-chart chart\">\r\n        <svg:g\r\n          ngx-charts-x-axis\r\n          *ngIf=\"xAxis\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [dims]=\"dims\"\r\n          [xScale]=\"xScale\"\r\n          [showLabel]=\"showXAxisLabel\"\r\n          [labelText]=\"xAxisLabel\"\r\n          [trimTicks]=\"trimXAxisTicks\"\r\n          [rotateTicks]=\"rotateXAxisTicks\"\r\n          [maxTickLength]=\"maxXAxisTickLength\"\r\n          [tickFormatting]=\"xAxisTickFormatting\"\r\n          [ticks]=\"xAxisTicks\"\r\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\r\n        />\r\n        <svg:g\r\n          ngx-charts-y-axis\r\n          *ngIf=\"yAxis\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [yScale]=\"yScale\"\r\n          [dims]=\"dims\"\r\n          [showLabel]=\"showYAxisLabel\"\r\n          [labelText]=\"yAxisLabel\"\r\n          [trimTicks]=\"trimYAxisTicks\"\r\n          [maxTickLength]=\"maxYAxisTickLength\"\r\n          [tickFormatting]=\"yAxisTickFormatting\"\r\n          [ticks]=\"yAxisTicks\"\r\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\r\n        />\r\n        <svg:rect\r\n          class=\"bubble-chart-area\"\r\n          x=\"0\"\r\n          y=\"0\"\r\n          [attr.width]=\"dims.width\"\r\n          [attr.height]=\"dims.height\"\r\n          style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\r\n          (mouseenter)=\"deactivateAll()\"\r\n        />\r\n        <svg:g [attr.clip-path]=\"clipPath\">\r\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\" [@animationState]=\"'active'\">\r\n            <svg:g\r\n              ngx-charts-bubble-series\r\n              [xScale]=\"xScale\"\r\n              [yScale]=\"yScale\"\r\n              [rScale]=\"rScale\"\r\n              [xScaleType]=\"xScaleType\"\r\n              [yScaleType]=\"yScaleType\"\r\n              [xAxisLabel]=\"xAxisLabel\"\r\n              [yAxisLabel]=\"yAxisLabel\"\r\n              [colors]=\"colors\"\r\n              [data]=\"series\"\r\n              [activeEntries]=\"activeEntries\"\r\n              [tooltipDisabled]=\"tooltipDisabled\"\r\n              [tooltipTemplate]=\"tooltipTemplate\"\r\n              (select)=\"onClick($event, series)\"\r\n              (activate)=\"onActivate($event)\"\r\n              (deactivate)=\"onDeactivate($event)\"\r\n            />\r\n          </svg:g>\r\n        </svg:g>\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  styleUrls: ['../common/base-chart.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: [\r\n    trigger('animationState', [\r\n      transition(':leave', [\r\n        style({\r\n          opacity: 1\r\n        }),\r\n        animate(\r\n          500,\r\n          style({\r\n            opacity: 0\r\n          })\r\n        )\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class BubbleChartComponent extends BaseChartComponent {\r\n  @Input() showGridLines: boolean = true;\r\n  @Input() legend = false;\r\n  @Input() legendTitle: string = 'Legend';\r\n  @Input() legendPosition: string = 'right';\r\n  @Input() xAxis: boolean = true;\r\n  @Input() yAxis: boolean = true;\r\n  @Input() showXAxisLabel: boolean;\r\n  @Input() showYAxisLabel: boolean;\r\n  @Input() xAxisLabel: string;\r\n  @Input() yAxisLabel: string;\r\n  @Input() trimXAxisTicks: boolean = true;\r\n  @Input() trimYAxisTicks: boolean = true;\r\n  @Input() rotateXAxisTicks: boolean = true;\r\n  @Input() maxXAxisTickLength: number = 16;\r\n  @Input() maxYAxisTickLength: number = 16;\r\n  @Input() xAxisTickFormatting: any;\r\n  @Input() yAxisTickFormatting: any;\r\n  @Input() xAxisTicks: any[];\r\n  @Input() yAxisTicks: any[];\r\n  @Input() roundDomains: boolean = false;\r\n  @Input() maxRadius = 10;\r\n  @Input() minRadius = 3;\r\n  @Input() autoScale: boolean;\r\n  @Input() schemeType = 'ordinal';\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() xScaleMin: any;\r\n  @Input() xScaleMax: any;\r\n  @Input() yScaleMin: any;\r\n  @Input() yScaleMax: any;\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n\r\n  dims: ViewDimensions;\r\n  colors: ColorHelper;\r\n  scaleType = 'linear';\r\n  margin = [10, 20, 10, 20];\r\n  bubblePadding = [0, 0, 0, 0];\r\n  data: any;\r\n\r\n  legendOptions: any;\r\n  transform: string;\r\n\r\n  clipPath: string;\r\n  clipPathId: string;\r\n\r\n  seriesDomain: any[];\r\n  xDomain: any[];\r\n  yDomain: any[];\r\n  rDomain: number[];\r\n\r\n  xScaleType: string;\r\n  yScaleType: string;\r\n\r\n  yScale: any;\r\n  xScale: any;\r\n  rScale: any;\r\n\r\n  xAxisHeight: number = 0;\r\n  yAxisWidth: number = 0;\r\n\r\n  activeEntries: any[] = [];\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin,\r\n      showXAxis: this.xAxis,\r\n      showYAxis: this.yAxis,\r\n      xAxisHeight: this.xAxisHeight,\r\n      yAxisWidth: this.yAxisWidth,\r\n      showXLabel: this.showXAxisLabel,\r\n      showYLabel: this.showYAxisLabel,\r\n      showLegend: this.legend,\r\n      legendType: this.schemeType,\r\n      legendPosition: this.legendPosition\r\n    });\r\n\r\n    this.seriesDomain = this.results.map(d => d.name);\r\n    this.rDomain = this.getRDomain();\r\n    this.xDomain = this.getXDomain();\r\n    this.yDomain = this.getYDomain();\r\n\r\n    this.transform = `translate(${this.dims.xOffset},${this.margin[0]})`;\r\n\r\n    const colorDomain = this.schemeType === 'ordinal' ? this.seriesDomain : this.rDomain;\r\n    this.colors = new ColorHelper(this.scheme, this.schemeType, colorDomain, this.customColors);\r\n\r\n    this.data = this.results;\r\n\r\n    this.minRadius = Math.max(this.minRadius, 1);\r\n    this.maxRadius = Math.max(this.maxRadius, 1);\r\n\r\n    this.rScale = this.getRScale(this.rDomain, [this.minRadius, this.maxRadius]);\r\n\r\n    this.bubblePadding = [0, 0, 0, 0];\r\n    this.setScales();\r\n\r\n    this.bubblePadding = this.getBubblePadding();\r\n    this.setScales();\r\n\r\n    this.legendOptions = this.getLegendOptions();\r\n\r\n    this.clipPathId = 'clip' + id().toString();\r\n    this.clipPath = `url(#${this.clipPathId})`;\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  hideCircles(): void {\r\n    this.deactivateAll();\r\n  }\r\n\r\n  onClick(data, series?): void {\r\n    if (series) {\r\n      data.series = series.name;\r\n    }\r\n\r\n    this.select.emit(data);\r\n  }\r\n\r\n  getBubblePadding() {\r\n    let yMin = 0;\r\n    let xMin = 0;\r\n    let yMax = this.dims.height;\r\n    let xMax = this.dims.width;\r\n\r\n    for (const s of this.data) {\r\n      for (const d of s.series) {\r\n        const r = this.rScale(d.r);\r\n        const cx = this.xScaleType === 'linear' ? this.xScale(Number(d.x)) : this.xScale(d.x);\r\n        const cy = this.yScaleType === 'linear' ? this.yScale(Number(d.y)) : this.yScale(d.y);\r\n        xMin = Math.max(r - cx, xMin);\r\n        yMin = Math.max(r - cy, yMin);\r\n        yMax = Math.max(cy + r, yMax);\r\n        xMax = Math.max(cx + r, xMax);\r\n      }\r\n    }\r\n\r\n    xMax = Math.max(xMax - this.dims.width, 0);\r\n    yMax = Math.max(yMax - this.dims.height, 0);\r\n\r\n    return [yMin, xMax, yMax, xMin];\r\n  }\r\n\r\n  setScales() {\r\n    let width = this.dims.width;\r\n    if (this.xScaleMin === undefined && this.xScaleMax === undefined) {\r\n      width = width - this.bubblePadding[1];\r\n    }\r\n    let height = this.dims.height;\r\n    if (this.yScaleMin === undefined && this.yScaleMax === undefined) {\r\n      height = height - this.bubblePadding[2];\r\n    }\r\n    this.xScale = this.getXScale(this.xDomain, width);\r\n    this.yScale = this.getYScale(this.yDomain, height);\r\n  }\r\n\r\n  getYScale(domain, height): any {\r\n    return getScale(domain, [height, this.bubblePadding[0]], this.yScaleType, this.roundDomains);\r\n  }\r\n\r\n  getXScale(domain, width): any {\r\n    return getScale(domain, [this.bubblePadding[3], width], this.xScaleType, this.roundDomains);\r\n  }\r\n\r\n  getRScale(domain, range): any {\r\n    const scale = scaleLinear().range(range).domain(domain);\r\n\r\n    return this.roundDomains ? scale.nice() : scale;\r\n  }\r\n\r\n  getLegendOptions(): any {\r\n    const opts = {\r\n      scaleType: this.schemeType,\r\n      colors: undefined,\r\n      domain: [],\r\n      position: this.legendPosition,\r\n      title: undefined\r\n    };\r\n\r\n    if (opts.scaleType === 'ordinal') {\r\n      opts.domain = this.seriesDomain;\r\n      opts.colors = this.colors;\r\n      opts.title = this.legendTitle;\r\n    } else {\r\n      opts.domain = this.rDomain;\r\n      opts.colors = this.colors.scale;\r\n    }\r\n\r\n    return opts;\r\n  }\r\n\r\n  getXDomain(): any[] {\r\n    const values = [];\r\n\r\n    for (const results of this.results) {\r\n      for (const d of results.series) {\r\n        if (!values.includes(d.x)) {\r\n          values.push(d.x);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.xScaleType = getScaleType(values);\r\n    return getDomain(values, this.xScaleType, this.autoScale, this.xScaleMin, this.xScaleMax);\r\n  }\r\n\r\n  getYDomain(): any[] {\r\n    const values = [];\r\n\r\n    for (const results of this.results) {\r\n      for (const d of results.series) {\r\n        if (!values.includes(d.y)) {\r\n          values.push(d.y);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.yScaleType = getScaleType(values);\r\n    return getDomain(values, this.yScaleType, this.autoScale, this.yScaleMin, this.yScaleMax);\r\n  }\r\n\r\n  getRDomain(): number[] {\r\n    let min = Infinity;\r\n    let max = -Infinity;\r\n\r\n    for (const results of this.results) {\r\n      for (const d of results.series) {\r\n        const value = Number(d.r) || 1;\r\n        min = Math.min(min, value);\r\n        max = Math.max(max, value);\r\n      }\r\n    }\r\n\r\n    return [min, max];\r\n  }\r\n\r\n  updateYAxisWidth({ width }): void {\r\n    this.yAxisWidth = width;\r\n    this.update();\r\n  }\r\n\r\n  updateXAxisHeight({ height }): void {\r\n    this.xAxisHeight = height;\r\n    this.update();\r\n  }\r\n\r\n  onActivate(item): void {\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name;\r\n    });\r\n    if (idx > -1) {\r\n      return;\r\n    }\r\n\r\n    this.activeEntries = [item, ...this.activeEntries];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(item): void {\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name;\r\n    });\r\n\r\n    this.activeEntries.splice(idx, 1);\r\n    this.activeEntries = [...this.activeEntries];\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  deactivateAll() {\r\n    this.activeEntries = [...this.activeEntries];\r\n    for (const entry of this.activeEntries) {\r\n      this.deactivate.emit({ value: entry, entries: [] });\r\n    }\r\n    this.activeEntries = [];\r\n  }\r\n\r\n  trackBy(index, item): string {\r\n    return item.name;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  SimpleChanges,\r\n  EventEmitter,\r\n  OnChanges,\r\n  ChangeDetectionStrategy,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\nimport { formatLabel, escapeLabel } from '../common/label.helper';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-bubble-series]',\r\n  template: `\r\n    <svg:g *ngFor=\"let circle of circles; trackBy: trackBy\">\r\n      <svg:g [attr.transform]=\"circle.transform\">\r\n        <svg:g\r\n          ngx-charts-circle\r\n          [@animationState]=\"'active'\"\r\n          class=\"circle\"\r\n          [cx]=\"0\"\r\n          [cy]=\"0\"\r\n          [r]=\"circle.radius\"\r\n          [fill]=\"circle.color\"\r\n          [style.opacity]=\"circle.opacity\"\r\n          [class.active]=\"circle.isActive\"\r\n          [pointerEvents]=\"'all'\"\r\n          [data]=\"circle.value\"\r\n          [classNames]=\"circle.classNames\"\r\n          (select)=\"onClick(circle.data)\"\r\n          (activate)=\"activateCircle(circle)\"\r\n          (deactivate)=\"deactivateCircle(circle)\"\r\n          ngx-tooltip\r\n          [tooltipDisabled]=\"tooltipDisabled\"\r\n          [tooltipPlacement]=\"'top'\"\r\n          [tooltipType]=\"'tooltip'\"\r\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\r\n          [tooltipTemplate]=\"tooltipTemplate\"\r\n          [tooltipContext]=\"circle.data\"\r\n        />\r\n      </svg:g>\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('animationState', [\r\n      transition(':enter', [\r\n        style({\r\n          opacity: 0,\r\n          transform: 'scale(0)'\r\n        }),\r\n        animate(250, style({ opacity: 1, transform: 'scale(1)' }))\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class BubbleSeriesComponent implements OnChanges {\r\n  @Input() data;\r\n  @Input() xScale;\r\n  @Input() yScale;\r\n  @Input() rScale;\r\n  @Input() xScaleType;\r\n  @Input() yScaleType;\r\n  @Input() colors;\r\n  @Input() visibleValue;\r\n  @Input() activeEntries: any[];\r\n  @Input() xAxisLabel: string;\r\n  @Input() yAxisLabel: string;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() tooltipTemplate: TemplateRef<any>;\r\n\r\n  @Output() select = new EventEmitter();\r\n  @Output() activate = new EventEmitter();\r\n  @Output() deactivate = new EventEmitter();\r\n\r\n  areaPath: any;\r\n  circles: any[];\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    this.circles = this.getCircles();\r\n  }\r\n\r\n  getCircles(): any[] {\r\n    const seriesName = this.data.name;\r\n\r\n    return this.data.series\r\n      .map((d, i) => {\r\n        if (typeof d.y !== 'undefined' && typeof d.x !== 'undefined') {\r\n          const y = d.y;\r\n          const x = d.x;\r\n          const r = d.r;\r\n\r\n          const radius = this.rScale(r || 1);\r\n          const tooltipLabel = formatLabel(d.name);\r\n\r\n          const cx = this.xScaleType === 'linear' ? this.xScale(Number(x)) : this.xScale(x);\r\n          const cy = this.yScaleType === 'linear' ? this.yScale(Number(y)) : this.yScale(y);\r\n\r\n          const color = this.colors.scaleType === 'linear' ? this.colors.getColor(r) : this.colors.getColor(seriesName);\r\n\r\n          const isActive = !this.activeEntries.length ? true : this.isActive({ name: seriesName });\r\n          const opacity = isActive ? 1 : 0.3;\r\n\r\n          const data = Object.assign({}, d, {\r\n            series: seriesName,\r\n            name: d.name,\r\n            value: d.y,\r\n            x: d.x,\r\n            radius: d.r\r\n          });\r\n\r\n          return {\r\n            data,\r\n            x,\r\n            y,\r\n            r,\r\n            classNames: [`circle-data-${i}`],\r\n            value: y,\r\n            label: x,\r\n            cx,\r\n            cy,\r\n            radius,\r\n            tooltipLabel,\r\n            color,\r\n            opacity,\r\n            seriesName,\r\n            isActive,\r\n            transform: `translate(${cx},${cy})`\r\n          };\r\n        }\r\n      })\r\n      .filter(circle => circle !== undefined);\r\n  }\r\n\r\n  getTooltipText(circle): string {\r\n    const hasRadius = typeof circle.r !== 'undefined';\r\n    const hasTooltipLabel = circle.tooltipLabel && circle.tooltipLabel.length;\r\n    const hasSeriesName = circle.seriesName && circle.seriesName.length;\r\n\r\n    const radiusValue = hasRadius ? formatLabel(circle.r) : '';\r\n    const xAxisLabel = this.xAxisLabel && this.xAxisLabel !== '' ? `${this.xAxisLabel}:` : '';\r\n    const yAxisLabel = this.yAxisLabel && this.yAxisLabel !== '' ? `${this.yAxisLabel}:` : '';\r\n    const x = formatLabel(circle.x);\r\n    const y = formatLabel(circle.y);\r\n    const name =\r\n      hasSeriesName && hasTooltipLabel\r\n        ? `${circle.seriesName} â¢ ${circle.tooltipLabel}`\r\n        : circle.seriesName + circle.tooltipLabel;\r\n    const tooltipTitle =\r\n      hasSeriesName || hasTooltipLabel ? `<span class=\"tooltip-label\">${escapeLabel(name)}</span>` : '';\r\n\r\n    return `\r\n      ${tooltipTitle}\r\n      <span class=\"tooltip-label\">\r\n        <label>${escapeLabel(xAxisLabel)}</label> ${escapeLabel(x)}<br />\r\n        <label>${escapeLabel(yAxisLabel)}</label> ${escapeLabel(y)}\r\n      </span>\r\n      <span class=\"tooltip-val\">\r\n        ${escapeLabel(radiusValue)}\r\n      </span>\r\n    `;\r\n  }\r\n\r\n  onClick(data): void {\r\n    this.select.emit(data);\r\n  }\r\n\r\n  isActive(entry): boolean {\r\n    if (!this.activeEntries) return false;\r\n    const item = this.activeEntries.find(d => {\r\n      return entry.name === d.name;\r\n    });\r\n    return item !== undefined;\r\n  }\r\n\r\n  isVisible(circle): boolean {\r\n    if (this.activeEntries.length > 0) {\r\n      return this.isActive({ name: circle.seriesName });\r\n    }\r\n\r\n    return circle.opacity !== 0;\r\n  }\r\n\r\n  activateCircle(circle): void {\r\n    circle.barVisible = true;\r\n    this.activate.emit({ name: this.data.name });\r\n  }\r\n\r\n  deactivateCircle(circle): void {\r\n    circle.barVisible = false;\r\n    this.deactivate.emit({ name: this.data.name });\r\n  }\r\n\r\n  trackBy(index, circle): string {\r\n    return `${circle.data.series} ${circle.data.name}`;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ChartCommonModule } from '../common/chart-common.module';\r\nimport { BubbleChartComponent } from './bubble-chart.component';\r\nimport { BubbleSeriesComponent } from './bubble-series.component';\r\n\r\n@NgModule({\r\n  imports: [ChartCommonModule],\r\n  declarations: [BubbleChartComponent, BubbleSeriesComponent],\r\n  exports: [BubbleChartComponent, BubbleSeriesComponent]\r\n})\r\nexport class BubbleChartModule {}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  SimpleChanges,\r\n  ElementRef,\r\n  OnChanges,\r\n  ChangeDetectionStrategy,\r\n  HostListener\r\n} from '@angular/core';\r\nimport { select } from 'd3-selection';\r\n\r\nimport { id } from '../utils/id';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-heat-map-cell]',\r\n  template: `\r\n    <svg:g [attr.transform]=\"transform\" class=\"cell\">\r\n      <defs *ngIf=\"gradient\">\r\n        <svg:g ngx-charts-svg-linear-gradient orientation=\"vertical\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\r\n      </defs>\r\n      <svg:rect\r\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\r\n        rx=\"3\"\r\n        [attr.width]=\"width\"\r\n        [attr.height]=\"height\"\r\n        class=\"cell\"\r\n        style=\"cursor: pointer\"\r\n        (click)=\"onClick()\"\r\n      />\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class HeatMapCellComponent implements OnChanges {\r\n  @Input() fill;\r\n  @Input() x;\r\n  @Input() y;\r\n  @Input() width;\r\n  @Input() height;\r\n  @Input() data;\r\n  @Input() label;\r\n  @Input() gradient: boolean = false;\r\n  @Input() animations: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n  @Output() activate = new EventEmitter();\r\n  @Output() deactivate = new EventEmitter();\r\n\r\n  element: HTMLElement;\r\n  transform: string;\r\n  activeRange: any[];\r\n  startOpacity: number;\r\n  gradientId: string;\r\n  gradientUrl: string;\r\n  gradientStops: any[];\r\n\r\n  constructor(element: ElementRef) {\r\n    this.element = element.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.transform = `translate(${this.x} , ${this.y})`;\r\n\r\n    this.startOpacity = 0.3;\r\n    this.gradientId = 'grad' + id().toString();\r\n    this.gradientUrl = `url(#${this.gradientId})`;\r\n    this.gradientStops = this.getGradientStops();\r\n\r\n    if (this.animations) {\r\n      this.loadAnimation();\r\n    }\r\n  }\r\n\r\n  getGradientStops() {\r\n    return [\r\n      {\r\n        offset: 0,\r\n        color: this.fill,\r\n        opacity: this.startOpacity\r\n      },\r\n      {\r\n        offset: 100,\r\n        color: this.fill,\r\n        opacity: 1\r\n      }\r\n    ];\r\n  }\r\n\r\n  loadAnimation(): void {\r\n    const node = select(this.element).select('.cell');\r\n    node.attr('opacity', 0);\r\n    this.animateToCurrentForm();\r\n  }\r\n\r\n  animateToCurrentForm(): void {\r\n    const node = select(this.element).select('.cell');\r\n\r\n    node.transition().duration(750).attr('opacity', 1);\r\n  }\r\n\r\n  onClick() {\r\n    this.select.emit(this.data);\r\n  }\r\n\r\n  @HostListener('mouseenter')\r\n  onMouseEnter(): void {\r\n    this.activate.emit(this.data);\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  onMouseLeave(): void {\r\n    this.deactivate.emit(this.data);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  SimpleChanges,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  OnInit,\r\n  ChangeDetectionStrategy,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { formatLabel, escapeLabel } from '../common/label.helper';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-heat-map-cell-series]',\r\n  template: `\r\n    <svg:g\r\n      ngx-charts-heat-map-cell\r\n      *ngFor=\"let c of cells; trackBy: trackBy\"\r\n      [x]=\"c.x\"\r\n      [y]=\"c.y\"\r\n      [width]=\"c.width\"\r\n      [height]=\"c.height\"\r\n      [fill]=\"c.fill\"\r\n      [data]=\"c.data\"\r\n      (select)=\"onClick(c.cell)\"\r\n      (activate)=\"activate.emit(c.cell)\"\r\n      (deactivate)=\"deactivate.emit(c.cell)\"\r\n      [gradient]=\"gradient\"\r\n      [animations]=\"animations\"\r\n      ngx-tooltip\r\n      [tooltipDisabled]=\"tooltipDisabled\"\r\n      [tooltipPlacement]=\"'top'\"\r\n      [tooltipType]=\"'tooltip'\"\r\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(c)\"\r\n      [tooltipTemplate]=\"tooltipTemplate\"\r\n      [tooltipContext]=\"{ series: c.series, name: c.label, value: c.data }\"\r\n    ></svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class HeatCellSeriesComponent implements OnChanges, OnInit {\r\n  @Input() data;\r\n  @Input() colors;\r\n  @Input() xScale;\r\n  @Input() yScale;\r\n  @Input() gradient: boolean;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() tooltipText: any;\r\n  @Input() tooltipTemplate: TemplateRef<any>;\r\n  @Input() animations: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  cells: any[];\r\n\r\n  ngOnInit() {\r\n    if (!this.tooltipText) {\r\n      this.tooltipText = this.getTooltipText;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    this.cells = this.getCells();\r\n  }\r\n\r\n  getCells() {\r\n    const cells = [];\r\n\r\n    this.data.map(row => {\r\n      row.series.map(cell => {\r\n        const value = cell.value;\r\n        cell.series = row.name;\r\n\r\n        cells.push({\r\n          row,\r\n          cell,\r\n          x: this.xScale(row.name),\r\n          y: this.yScale(cell.name),\r\n          width: this.xScale.bandwidth(),\r\n          height: this.yScale.bandwidth(),\r\n          fill: this.colors.getColor(value),\r\n          data: value,\r\n          label: formatLabel(cell.name),\r\n          series: row.name\r\n        });\r\n      });\r\n    });\r\n\r\n    return cells;\r\n  }\r\n\r\n  getTooltipText({ label, data, series }): string {\r\n    return `\r\n      <span class=\"tooltip-label\">${escapeLabel(series)} â¢ ${escapeLabel(label)}</span>\r\n      <span class=\"tooltip-val\">${data.toLocaleString()}</span>\r\n    `;\r\n  }\r\n\r\n  trackBy(index, item): string {\r\n    return item.tooltipText;\r\n  }\r\n\r\n  onClick(data): void {\r\n    this.select.emit(data);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport { scaleBand } from 'd3-scale';\r\n\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { getScaleType } from '../common/domain.helper';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-heat-map',\r\n  template: `\r\n    <ngx-charts-chart\r\n      [view]=\"[width, height]\"\r\n      [showLegend]=\"legend\"\r\n      [animations]=\"animations\"\r\n      [legendOptions]=\"legendOptions\"\r\n      (legendLabelClick)=\"onClick($event)\"\r\n    >\r\n      <svg:g [attr.transform]=\"transform\" class=\"heat-map chart\">\r\n        <svg:g\r\n          ngx-charts-x-axis\r\n          *ngIf=\"xAxis\"\r\n          [xScale]=\"xScale\"\r\n          [dims]=\"dims\"\r\n          [showLabel]=\"showXAxisLabel\"\r\n          [labelText]=\"xAxisLabel\"\r\n          [trimTicks]=\"trimXAxisTicks\"\r\n          [rotateTicks]=\"rotateXAxisTicks\"\r\n          [maxTickLength]=\"maxXAxisTickLength\"\r\n          [tickFormatting]=\"xAxisTickFormatting\"\r\n          [ticks]=\"xAxisTicks\"\r\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-y-axis\r\n          *ngIf=\"yAxis\"\r\n          [yScale]=\"yScale\"\r\n          [dims]=\"dims\"\r\n          [showLabel]=\"showYAxisLabel\"\r\n          [labelText]=\"yAxisLabel\"\r\n          [trimTicks]=\"trimYAxisTicks\"\r\n          [maxTickLength]=\"maxYAxisTickLength\"\r\n          [tickFormatting]=\"yAxisTickFormatting\"\r\n          [ticks]=\"yAxisTicks\"\r\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\r\n        ></svg:g>\r\n        <svg:rect\r\n          *ngFor=\"let rect of rects\"\r\n          [attr.x]=\"rect.x\"\r\n          [attr.y]=\"rect.y\"\r\n          [attr.rx]=\"rect.rx\"\r\n          [attr.width]=\"rect.width\"\r\n          [attr.height]=\"rect.height\"\r\n          [attr.fill]=\"rect.fill\"\r\n        />\r\n        <svg:g\r\n          ngx-charts-heat-map-cell-series\r\n          [xScale]=\"xScale\"\r\n          [yScale]=\"yScale\"\r\n          [colors]=\"colors\"\r\n          [data]=\"results\"\r\n          [gradient]=\"gradient\"\r\n          [animations]=\"animations\"\r\n          [tooltipDisabled]=\"tooltipDisabled\"\r\n          [tooltipTemplate]=\"tooltipTemplate\"\r\n          [tooltipText]=\"tooltipText\"\r\n          (select)=\"onClick($event)\"\r\n          (activate)=\"onActivate($event, undefined)\"\r\n          (deactivate)=\"onDeactivate($event, undefined)\"\r\n        />\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['../common/base-chart.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class HeatMapComponent extends BaseChartComponent {\r\n  @Input() legend;\r\n  @Input() legendTitle: string = 'Legend';\r\n  @Input() legendPosition: string = 'right';\r\n  @Input() xAxis;\r\n  @Input() yAxis;\r\n  @Input() showXAxisLabel;\r\n  @Input() showYAxisLabel;\r\n  @Input() xAxisLabel;\r\n  @Input() yAxisLabel;\r\n  @Input() gradient: boolean;\r\n  @Input() innerPadding: number | number[] = 8;\r\n  @Input() trimXAxisTicks: boolean = true;\r\n  @Input() trimYAxisTicks: boolean = true;\r\n  @Input() rotateXAxisTicks: boolean = true;\r\n  @Input() maxXAxisTickLength: number = 16;\r\n  @Input() maxYAxisTickLength: number = 16;\r\n  @Input() xAxisTickFormatting: any;\r\n  @Input() yAxisTickFormatting: any;\r\n  @Input() xAxisTicks: any[];\r\n  @Input() yAxisTicks: any[];\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() tooltipText: any;\r\n  @Input() min: any;\r\n  @Input() max: any;\r\n  @Input() activeEntries: any[] = [];\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n\r\n  dims: ViewDimensions;\r\n  xDomain: any[];\r\n  yDomain: any[];\r\n  valueDomain: any[];\r\n  xScale: any;\r\n  yScale: any;\r\n  color: any;\r\n  colors: ColorHelper;\r\n  colorScale: any;\r\n  transform: string;\r\n  rects: any[];\r\n  margin = [10, 20, 10, 20];\r\n  xAxisHeight: number = 0;\r\n  yAxisWidth: number = 0;\r\n  legendOptions: any;\r\n  scaleType: string = 'linear';\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    this.formatDates();\r\n\r\n    this.xDomain = this.getXDomain();\r\n    this.yDomain = this.getYDomain();\r\n    this.valueDomain = this.getValueDomain();\r\n\r\n    this.scaleType = getScaleType(this.valueDomain, false);\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin,\r\n      showXAxis: this.xAxis,\r\n      showYAxis: this.yAxis,\r\n      xAxisHeight: this.xAxisHeight,\r\n      yAxisWidth: this.yAxisWidth,\r\n      showXLabel: this.showXAxisLabel,\r\n      showYLabel: this.showYAxisLabel,\r\n      showLegend: this.legend,\r\n      legendType: this.scaleType,\r\n      legendPosition: this.legendPosition\r\n    });\r\n\r\n    if (this.scaleType === 'linear') {\r\n      let min = this.min;\r\n      let max = this.max;\r\n      if (!this.min) {\r\n        min = Math.min(0, ...this.valueDomain);\r\n      }\r\n      if (!this.max) {\r\n        max = Math.max(...this.valueDomain);\r\n      }\r\n      this.valueDomain = [min, max];\r\n    }\r\n\r\n    this.xScale = this.getXScale();\r\n    this.yScale = this.getYScale();\r\n\r\n    this.setColors();\r\n    this.legendOptions = this.getLegendOptions();\r\n\r\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\r\n    this.rects = this.getRects();\r\n  }\r\n\r\n  getXDomain(): any {\r\n    const domain = [];\r\n    for (const group of this.results) {\r\n      if (!domain.includes(group.name)) {\r\n        domain.push(group.name);\r\n      }\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getYDomain(): any[] {\r\n    const domain = [];\r\n\r\n    for (const group of this.results) {\r\n      for (const d of group.series) {\r\n        if (!domain.includes(d.name)) {\r\n          domain.push(d.name);\r\n        }\r\n      }\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getValueDomain(): any[] {\r\n    const domain = [];\r\n\r\n    for (const group of this.results) {\r\n      for (const d of group.series) {\r\n        if (!domain.includes(d.value)) {\r\n          domain.push(d.value);\r\n        }\r\n      }\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  /**\r\n   * Converts the input to gap paddingInner in fraction\r\n   * Supports the following inputs:\r\n   *    Numbers: 8\r\n   *    Strings: \"8\", \"8px\", \"8%\"\r\n   *    Arrays: [8,2], \"8,2\", \"[8,2]\"\r\n   *    Mixed: [8,\"2%\"], [\"8px\",\"2%\"], \"8,2%\", \"[8,2%]\"\r\n   *\r\n   * @memberOf HeatMapComponent\r\n   */\r\n  getDimension(value: string | number | Array<string | number>, index = 0, N: number, L: number): number {\r\n    if (typeof value === 'string') {\r\n      value = value\r\n        .replace('[', '')\r\n        .replace(']', '')\r\n        .replace('px', '')\r\n        // tslint:disable-next-line: quotemark\r\n        .replace(\"'\", '');\r\n\r\n      if (value.includes(',')) {\r\n        value = value.split(',');\r\n      }\r\n    }\r\n    if (Array.isArray(value) && typeof index === 'number') {\r\n      return this.getDimension(value[index], null, N, L);\r\n    }\r\n    if (typeof value === 'string' && value.includes('%')) {\r\n      return +value.replace('%', '') / 100;\r\n    }\r\n    return N / (L / +value + 1);\r\n  }\r\n\r\n  getXScale(): any {\r\n    const f = this.getDimension(this.innerPadding, 0, this.xDomain.length, this.dims.width);\r\n    return scaleBand().rangeRound([0, this.dims.width]).domain(this.xDomain).paddingInner(f);\r\n  }\r\n\r\n  getYScale(): any {\r\n    const f = this.getDimension(this.innerPadding, 1, this.yDomain.length, this.dims.height);\r\n    return scaleBand().rangeRound([this.dims.height, 0]).domain(this.yDomain).paddingInner(f);\r\n  }\r\n\r\n  getRects(): any[] {\r\n    const rects = [];\r\n\r\n    this.xDomain.map(xVal => {\r\n      this.yDomain.map(yVal => {\r\n        rects.push({\r\n          x: this.xScale(xVal),\r\n          y: this.yScale(yVal),\r\n          rx: 3,\r\n          width: this.xScale.bandwidth(),\r\n          height: this.yScale.bandwidth(),\r\n          fill: 'rgba(200,200,200,0.03)'\r\n        });\r\n      });\r\n    });\r\n\r\n    return rects;\r\n  }\r\n\r\n  onClick(data): void {\r\n    this.select.emit(data);\r\n  }\r\n\r\n  setColors(): void {\r\n    this.colors = new ColorHelper(this.scheme, this.scaleType, this.valueDomain);\r\n  }\r\n\r\n  getLegendOptions() {\r\n    return {\r\n      scaleType: this.scaleType,\r\n      domain: this.valueDomain,\r\n      colors: this.scaleType === 'ordinal' ? this.colors : this.colors.scale,\r\n      title: this.scaleType === 'ordinal' ? this.legendTitle : undefined,\r\n      position: this.legendPosition\r\n    };\r\n  }\r\n\r\n  updateYAxisWidth({ width }): void {\r\n    this.yAxisWidth = width;\r\n    this.update();\r\n  }\r\n\r\n  updateXAxisHeight({ height }): void {\r\n    this.xAxisHeight = height;\r\n    this.update();\r\n  }\r\n\r\n  onActivate(event, group, fromLegend = false) {\r\n    const item = Object.assign({}, event);\r\n    if (group) {\r\n      item.series = group.name;\r\n    }\r\n\r\n    const items = this.results\r\n      .map(g => g.series)\r\n      .flat()\r\n      .filter(i => {\r\n        if (fromLegend) {\r\n          return i.label === item.name;\r\n        } else {\r\n          return i.name === item.name && i.series === item.series;\r\n        }\r\n      });\r\n\r\n    this.activeEntries = [...items];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(event, group, fromLegend = false) {\r\n    const item = Object.assign({}, event);\r\n    if (group) {\r\n      item.series = group.name;\r\n    }\r\n\r\n    this.activeEntries = this.activeEntries.filter(i => {\r\n      if (fromLegend) {\r\n        return i.label !== item.name;\r\n      } else {\r\n        return !(i.name === item.name && i.series === item.series);\r\n      }\r\n    });\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ChartCommonModule } from '../common/chart-common.module';\r\nimport { HeatMapCellComponent } from './heat-map-cell.component';\r\nimport { HeatCellSeriesComponent } from './heat-map-cell-series.component';\r\nimport { HeatMapComponent } from './heat-map.component';\r\n\r\n@NgModule({\r\n  imports: [ChartCommonModule],\r\n  declarations: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent],\r\n  exports: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent]\r\n})\r\nexport class HeatMapModule {}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  ElementRef,\r\n  ChangeDetectionStrategy,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\nimport { select } from 'd3-selection';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-line]',\r\n  template: `\r\n    <svg:path\r\n      [@animationState]=\"'active'\"\r\n      class=\"line\"\r\n      [attr.d]=\"initialPath\"\r\n      [attr.fill]=\"fill\"\r\n      [attr.stroke]=\"stroke\"\r\n      stroke-width=\"1.5px\"\r\n    />\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('animationState', [\r\n      transition(':enter', [\r\n        style({\r\n          strokeDasharray: 2000,\r\n          strokeDashoffset: 2000\r\n        }),\r\n        animate(\r\n          1000,\r\n          style({\r\n            strokeDashoffset: 0\r\n          })\r\n        )\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class LineComponent implements OnChanges {\r\n  @Input() path;\r\n  @Input() stroke;\r\n  @Input() data;\r\n  @Input() fill: string = 'none';\r\n  @Input() animations: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n\r\n  initialized: boolean = false;\r\n  initialPath: string;\r\n\r\n  constructor(private element: ElementRef) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (!this.initialized) {\r\n      this.initialized = true;\r\n      this.initialPath = this.path;\r\n    } else {\r\n      this.updatePathEl();\r\n    }\r\n  }\r\n\r\n  updatePathEl(): void {\r\n    const node = select(this.element.nativeElement).select('.line');\r\n\r\n    if (this.animations) {\r\n      node.transition().duration(750).attr('d', this.path);\r\n    } else {\r\n      node.attr('d', this.path);\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewEncapsulation,\r\n  HostListener,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\nimport { scaleLinear, scaleTime, scalePoint } from 'd3-scale';\r\nimport { curveLinear } from 'd3-shape';\r\n\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nimport { id } from '../utils/id';\r\nimport { getUniqueXDomainValues, getScaleType } from '../common/domain.helper';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-line-chart',\r\n  template: `\r\n    <ngx-charts-chart\r\n      [view]=\"[width, height]\"\r\n      [showLegend]=\"legend\"\r\n      [legendOptions]=\"legendOptions\"\r\n      [activeEntries]=\"activeEntries\"\r\n      [animations]=\"animations\"\r\n      (legendLabelClick)=\"onClick($event)\"\r\n      (legendLabelActivate)=\"onActivate($event)\"\r\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\r\n    >\r\n      <svg:defs>\r\n        <svg:clipPath [attr.id]=\"clipPathId\">\r\n          <svg:rect\r\n            [attr.width]=\"dims.width + 10\"\r\n            [attr.height]=\"dims.height + 10\"\r\n            [attr.transform]=\"'translate(-5, -5)'\"\r\n          />\r\n        </svg:clipPath>\r\n      </svg:defs>\r\n      <svg:g [attr.transform]=\"transform\" class=\"line-chart chart\" (click)=\"onXClick($event)\">\r\n        <svg:g\r\n          ngx-charts-x-axis\r\n          *ngIf=\"xAxis\"\r\n          [xScale]=\"xScale\"\r\n          [dims]=\"dims\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [showLabel]=\"showXAxisLabel\"\r\n          [labelText]=\"xAxisLabel\"\r\n          [trimTicks]=\"trimXAxisTicks\"\r\n          [rotateTicks]=\"rotateXAxisTicks\"\r\n          [maxTickLength]=\"maxXAxisTickLength\"\r\n          [tickFormatting]=\"xAxisTickFormatting\"\r\n          [activeTime]=\"activeTime\"\r\n          [ticks]=\"xAxisTicks\"\r\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-y-axis\r\n          *ngIf=\"yAxis\"\r\n          [yScale]=\"yScale\"\r\n          [dims]=\"dims\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [showLabel]=\"showYAxisLabel\"\r\n          [labelText]=\"yAxisLabel\"\r\n          [trimTicks]=\"trimYAxisTicks\"\r\n          [maxTickLength]=\"maxYAxisTickLength\"\r\n          [tickFormatting]=\"yAxisTickFormatting\"\r\n          [ticks]=\"yAxisTicks\"\r\n          [referenceLines]=\"referenceLines\"\r\n          [showRefLines]=\"showRefLines\"\r\n          [showRefLabels]=\"showRefLabels\"\r\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\r\n        ></svg:g>\r\n        <svg:g [attr.clip-path]=\"clipPath\">\r\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\r\n            <svg:g\r\n              ngx-charts-line-series\r\n              [xScale]=\"xScale\"\r\n              [yScale]=\"yScale\"\r\n              [colors]=\"colors\"\r\n              [data]=\"series\"\r\n              [activeEntries]=\"activeEntries\"\r\n              [scaleType]=\"scaleType\"\r\n              [curve]=\"curve\"\r\n              [rangeFillOpacity]=\"rangeFillOpacity\"\r\n              [hasRange]=\"hasRange\"\r\n              [animations]=\"animations\"\r\n            />\r\n          </svg:g>\r\n\r\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\r\n            <svg:g\r\n              ngx-charts-tooltip-area\r\n              [dims]=\"dims\"\r\n              [xSet]=\"xSet\"\r\n              [xScale]=\"xScale\"\r\n              [yScale]=\"yScale\"\r\n              [results]=\"results\"\r\n              [colors]=\"colors\"\r\n              [tooltipDisabled]=\"tooltipDisabled\"\r\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\r\n              (hover)=\"updateHoveredVertical($event)\"\r\n            />\r\n\r\n            <svg:g *ngFor=\"let series of results\">\r\n              <svg:g\r\n                ngx-charts-circle-series\r\n                [xScale]=\"xScale\"\r\n                [yScale]=\"yScale\"\r\n                [colors]=\"colors\"\r\n                [data]=\"series\"\r\n                [scaleType]=\"scaleType\"\r\n                [visibleValue]=\"hoveredVertical\"\r\n                [activeEntries]=\"activeEntries\"\r\n                [tooltipDisabled]=\"tooltipDisabled\"\r\n                [tooltipTemplate]=\"tooltipTemplate\"\r\n                (select)=\"onClick($event)\"\r\n                (activate)=\"onActivate($event)\"\r\n                (deactivate)=\"onDeactivate($event)\"\r\n              />\r\n            </svg:g>\r\n          </svg:g>\r\n        </svg:g>\r\n      </svg:g>\r\n      <svg:g\r\n        ngx-charts-timeline\r\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\r\n        [attr.transform]=\"timelineTransform\"\r\n        [results]=\"results\"\r\n        [view]=\"[timelineWidth, height]\"\r\n        [height]=\"timelineHeight\"\r\n        [scheme]=\"scheme\"\r\n        [customColors]=\"customColors\"\r\n        [scaleType]=\"scaleType\"\r\n        [legend]=\"legend\"\r\n        (onDomainChange)=\"updateDomain($event)\"\r\n      >\r\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\r\n          <svg:g\r\n            ngx-charts-line-series\r\n            [xScale]=\"timelineXScale\"\r\n            [yScale]=\"timelineYScale\"\r\n            [colors]=\"colors\"\r\n            [data]=\"series\"\r\n            [scaleType]=\"scaleType\"\r\n            [curve]=\"curve\"\r\n            [hasRange]=\"hasRange\"\r\n            [animations]=\"animations\"\r\n          />\r\n        </svg:g>\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  styleUrls: ['../common/base-chart.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('animationState', [\r\n      transition(':leave', [\r\n        style({\r\n          opacity: 1\r\n        }),\r\n        animate(\r\n          500,\r\n          style({\r\n            opacity: 0\r\n          })\r\n        )\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class LineChartComponent extends BaseChartComponent {\r\n  @Input() legend;\r\n  @Input() legendTitle: string = 'Legend';\r\n  @Input() legendPosition: string = 'right';\r\n  @Input() xAxis;\r\n  @Input() yAxis;\r\n  @Input() showXAxisLabel;\r\n  @Input() showYAxisLabel;\r\n  @Input() xAxisLabel;\r\n  @Input() yAxisLabel;\r\n  @Input() autoScale;\r\n  @Input() timeline;\r\n  @Input() gradient: boolean;\r\n  @Input() showGridLines: boolean = true;\r\n  @Input() curve: any = curveLinear;\r\n  @Input() activeEntries: any[] = [];\r\n  @Input() schemeType: string;\r\n  @Input() rangeFillOpacity: number;\r\n  @Input() trimXAxisTicks: boolean = true;\r\n  @Input() trimYAxisTicks: boolean = true;\r\n  @Input() rotateXAxisTicks: boolean = true;\r\n  @Input() maxXAxisTickLength: number = 16;\r\n  @Input() maxYAxisTickLength: number = 16;\r\n  @Input() xAxisTickFormatting: any;\r\n  @Input() yAxisTickFormatting: any;\r\n  @Input() xAxisTicks: any[];\r\n  @Input() yAxisTicks: any[];\r\n  @Input() roundDomains: boolean = false;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() showRefLines: boolean = false;\r\n  @Input() referenceLines: any;\r\n  @Input() showRefLabels: boolean = true;\r\n  @Input() xScaleMin: any;\r\n  @Input() xScaleMax: any;\r\n  @Input() yScaleMin: number;\r\n  @Input() yScaleMax: number;\r\n  @Input() activeTime;\r\n  @Output() clickCallback: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n  @ContentChild('seriesTooltipTemplate') seriesTooltipTemplate: TemplateRef<any>;\r\n\r\n  dims: ViewDimensions;\r\n  xSet: any;\r\n  xDomain: any;\r\n  yDomain: any;\r\n  seriesDomain: any;\r\n  yScale: any;\r\n  xScale: any;\r\n  colors: ColorHelper;\r\n  scaleType: string;\r\n  transform: string;\r\n  clipPath: string;\r\n  clipPathId: string;\r\n  series: any;\r\n  areaPath: any;\r\n  margin = [10, 20, 10, 20];\r\n  hoveredVertical: any; // the value of the x axis that is hovered over\r\n  xAxisHeight: number = 0;\r\n  yAxisWidth: number = 0;\r\n  filteredDomain: any;\r\n  legendOptions: any;\r\n  hasRange: boolean; // whether the line has a min-max range around it\r\n  timelineWidth: any;\r\n  timelineHeight: number = 50;\r\n  timelineXScale: any;\r\n  timelineYScale: any;\r\n  timelineXDomain: any;\r\n  timelineTransform: any;\r\n  timelinePadding: number = 10;\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin,\r\n      showXAxis: this.xAxis,\r\n      showYAxis: this.yAxis,\r\n      xAxisHeight: this.xAxisHeight,\r\n      yAxisWidth: this.yAxisWidth,\r\n      showXLabel: this.showXAxisLabel,\r\n      showYLabel: this.showYAxisLabel,\r\n      showLegend: this.legend,\r\n      legendType: this.schemeType,\r\n      legendPosition: this.legendPosition\r\n    });\r\n\r\n    if (this.timeline) {\r\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\r\n    }\r\n\r\n    this.xDomain = this.getXDomain();\r\n    if (this.filteredDomain) {\r\n      this.xDomain = this.filteredDomain;\r\n    }\r\n\r\n    this.yDomain = this.getYDomain();\r\n    this.seriesDomain = this.getSeriesDomain();\r\n\r\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\r\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\r\n\r\n    this.updateTimeline();\r\n\r\n    this.setColors();\r\n    this.legendOptions = this.getLegendOptions();\r\n\r\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\r\n\r\n    this.clipPathId = 'clip' + id().toString();\r\n    this.clipPath = `url(#${this.clipPathId})`;\r\n  }\r\n\r\n  updateTimeline(): void {\r\n    if (this.timeline) {\r\n      this.timelineWidth = this.dims.width;\r\n      this.timelineXDomain = this.getXDomain();\r\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\r\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\r\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\r\n    }\r\n  }\r\n\r\n  getXDomain(): any[] {\r\n    let values = getUniqueXDomainValues(this.results);\r\n\r\n    this.scaleType = getScaleType(values);\r\n    let domain = [];\r\n\r\n    if (this.scaleType === 'linear') {\r\n      values = values.map(v => Number(v));\r\n    }\r\n\r\n    let min;\r\n    let max;\r\n    if (this.scaleType === 'time' || this.scaleType === 'linear') {\r\n      min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\r\n\r\n      max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\r\n    }\r\n\r\n    if (this.scaleType === 'time') {\r\n      domain = [new Date(min), new Date(max)];\r\n      this.xSet = [...values].sort((a, b) => {\r\n        const aDate = a.getTime();\r\n        const bDate = b.getTime();\r\n        if (aDate > bDate) return 1;\r\n        if (bDate > aDate) return -1;\r\n        return 0;\r\n      });\r\n    } else if (this.scaleType === 'linear') {\r\n      domain = [min, max];\r\n      // Use compare function to sort numbers numerically\r\n      this.xSet = [...values].sort((a, b) => a - b);\r\n    } else {\r\n      domain = values;\r\n      this.xSet = values;\r\n    }\r\n\r\n    return domain;\r\n  }\r\n\r\n  getYDomain(): any[] {\r\n    const domain = [];\r\n    for (const results of this.results) {\r\n      for (const d of results.series) {\r\n        if (domain.indexOf(d.value) < 0) {\r\n          domain.push(d.value);\r\n        }\r\n        if (d.min !== undefined) {\r\n          this.hasRange = true;\r\n          if (domain.indexOf(d.min) < 0) {\r\n            domain.push(d.min);\r\n          }\r\n        }\r\n        if (d.max !== undefined) {\r\n          this.hasRange = true;\r\n          if (domain.indexOf(d.max) < 0) {\r\n            domain.push(d.max);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const values = [...domain];\r\n    if (!this.autoScale) {\r\n      values.push(0);\r\n    }\r\n\r\n    const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\r\n\r\n    const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\r\n\r\n    return [min, max];\r\n  }\r\n\r\n  getSeriesDomain(): any[] {\r\n    return this.results.map(d => d.name);\r\n  }\r\n\r\n  getXScale(domain, width): any {\r\n    let scale;\r\n\r\n    if (this.scaleType === 'time') {\r\n      scale = scaleTime().range([0, width]).domain(domain);\r\n    } else if (this.scaleType === 'linear') {\r\n      scale = scaleLinear().range([0, width]).domain(domain);\r\n\r\n      if (this.roundDomains) {\r\n        scale = scale.nice();\r\n      }\r\n    } else if (this.scaleType === 'ordinal') {\r\n      scale = scalePoint().range([0, width]).padding(0.1).domain(domain);\r\n    }\r\n\r\n    return scale;\r\n  }\r\n\r\n  getYScale(domain, height): any {\r\n    const scale = scaleLinear().range([height, 0]).domain(domain);\r\n\r\n    return this.roundDomains ? scale.nice() : scale;\r\n  }\r\n\r\n  updateDomain(domain): void {\r\n    this.filteredDomain = domain;\r\n    this.xDomain = this.filteredDomain;\r\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\r\n  }\r\n\r\n  updateHoveredVertical(item): void {\r\n    this.hoveredVertical = item.value;\r\n    this.deactivateAll();\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  hideCircles(): void {\r\n    this.hoveredVertical = null;\r\n    this.deactivateAll();\r\n  }\r\n\r\n  onClick(data): void {\r\n    this.select.emit(data);\r\n  }\r\n\r\n  onXClick(data):void{\r\n    let _time=this.xScale.ticks.apply(this.xScale, [data.clientX-this.dims.xOffset])[0];\r\n    this.activeTime=_time;\r\n    if(this.clickCallback) this.clickCallback.emit(_time);\r\n  }\r\n\r\n  trackBy(index, item): string {\r\n    return item.name;\r\n  }\r\n\r\n  setColors(): void {\r\n    let domain;\r\n    if (this.schemeType === 'ordinal') {\r\n      domain = this.seriesDomain;\r\n    } else {\r\n      domain = this.yDomain;\r\n    }\r\n\r\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\r\n  }\r\n\r\n  getLegendOptions() {\r\n    const opts = {\r\n      scaleType: this.schemeType,\r\n      colors: undefined,\r\n      domain: [],\r\n      title: undefined,\r\n      position: this.legendPosition\r\n    };\r\n    if (opts.scaleType === 'ordinal') {\r\n      opts.domain = this.seriesDomain;\r\n      opts.colors = this.colors;\r\n      opts.title = this.legendTitle;\r\n    } else {\r\n      opts.domain = this.yDomain;\r\n      opts.colors = this.colors.scale;\r\n    }\r\n    return opts;\r\n  }\r\n\r\n  updateYAxisWidth({ width }): void {\r\n    this.yAxisWidth = width;\r\n    this.update();\r\n  }\r\n\r\n  updateXAxisHeight({ height }): void {\r\n    this.xAxisHeight = height;\r\n    this.update();\r\n  }\r\n\r\n  onActivate(item) {\r\n    this.deactivateAll();\r\n\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value;\r\n    });\r\n    if (idx > -1) {\r\n      return;\r\n    }\r\n\r\n    this.activeEntries = [item];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(item) {\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value;\r\n    });\r\n\r\n    this.activeEntries.splice(idx, 1);\r\n    this.activeEntries = [...this.activeEntries];\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  deactivateAll() {\r\n    this.activeEntries = [...this.activeEntries];\r\n    for (const entry of this.activeEntries) {\r\n      this.deactivate.emit({ value: entry, entries: [] });\r\n    }\r\n    this.activeEntries = [];\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\r\nimport { area, line } from 'd3-shape';\r\n\r\nimport { id } from '../utils/id';\r\nimport { sortLinear, sortByTime, sortByDomain } from '../utils/sort';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-line-series]',\r\n  template: `\r\n    <svg:g>\r\n      <defs>\r\n        <svg:g\r\n          ngx-charts-svg-linear-gradient\r\n          *ngIf=\"hasGradient\"\r\n          orientation=\"vertical\"\r\n          [name]=\"gradientId\"\r\n          [stops]=\"gradientStops\"\r\n        />\r\n      </defs>\r\n      <svg:g\r\n        ngx-charts-area\r\n        class=\"line-highlight\"\r\n        [data]=\"data\"\r\n        [path]=\"areaPath\"\r\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\r\n        [opacity]=\"0.25\"\r\n        [startOpacity]=\"0\"\r\n        [gradient]=\"true\"\r\n        [stops]=\"areaGradientStops\"\r\n        [class.active]=\"isActive(data)\"\r\n        [class.inactive]=\"isInactive(data)\"\r\n        [animations]=\"animations\"\r\n      />\r\n      <svg:g\r\n        ngx-charts-line\r\n        class=\"line-series\"\r\n        [data]=\"data\"\r\n        [path]=\"path\"\r\n        [stroke]=\"stroke\"\r\n        [animations]=\"animations\"\r\n        [class.active]=\"isActive(data)\"\r\n        [class.inactive]=\"isInactive(data)\"\r\n      />\r\n      <svg:g\r\n        ngx-charts-area\r\n        *ngIf=\"hasRange\"\r\n        class=\"line-series-range\"\r\n        [data]=\"data\"\r\n        [path]=\"outerPath\"\r\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\r\n        [class.active]=\"isActive(data)\"\r\n        [class.inactive]=\"isInactive(data)\"\r\n        [opacity]=\"rangeFillOpacity\"\r\n        [animations]=\"animations\"\r\n      />\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LineSeriesComponent implements OnChanges {\r\n  @Input() data;\r\n  @Input() xScale;\r\n  @Input() yScale;\r\n  @Input() colors;\r\n  @Input() scaleType;\r\n  @Input() curve: any;\r\n  @Input() activeEntries: any[];\r\n  @Input() rangeFillOpacity: number;\r\n  @Input() hasRange: boolean;\r\n  @Input() animations: boolean = true;\r\n\r\n  path: string;\r\n  outerPath: string;\r\n  areaPath: string;\r\n  gradientId: string;\r\n  gradientUrl: string;\r\n  hasGradient: boolean;\r\n  gradientStops: any[];\r\n  areaGradientStops: any[];\r\n  stroke: any;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    this.updateGradients();\r\n\r\n    const data = this.sortData(this.data.series);\r\n\r\n    const lineGen = this.getLineGenerator();\r\n    this.path = lineGen(data) || '';\r\n\r\n    const areaGen = this.getAreaGenerator();\r\n    this.areaPath = areaGen(data) || '';\r\n\r\n    if (this.hasRange) {\r\n      const range = this.getRangeGenerator();\r\n      this.outerPath = range(data) || '';\r\n    }\r\n\r\n    if (this.hasGradient) {\r\n      this.stroke = this.gradientUrl;\r\n      const values = this.data.series.map(d => d.value);\r\n      const max = Math.max(...values);\r\n      const min = Math.min(...values);\r\n      if (max === min) {\r\n        this.stroke = this.colors.getColor(max);\r\n      }\r\n    } else {\r\n      this.stroke = this.colors.getColor(this.data.name);\r\n    }\r\n  }\r\n\r\n  getLineGenerator(): any {\r\n    return line<any>()\r\n      .x(d => {\r\n        const label = d.name;\r\n        let value;\r\n        if (this.scaleType === 'time') {\r\n          value = this.xScale(label);\r\n        } else if (this.scaleType === 'linear') {\r\n          value = this.xScale(Number(label));\r\n        } else {\r\n          value = this.xScale(label);\r\n        }\r\n        return value;\r\n      })\r\n      .y(d => this.yScale(d.value))\r\n      .curve(this.curve);\r\n  }\r\n\r\n  getRangeGenerator(): any {\r\n    return area<any>()\r\n      .x(d => {\r\n        const label = d.name;\r\n        let value;\r\n        if (this.scaleType === 'time') {\r\n          value = this.xScale(label);\r\n        } else if (this.scaleType === 'linear') {\r\n          value = this.xScale(Number(label));\r\n        } else {\r\n          value = this.xScale(label);\r\n        }\r\n        return value;\r\n      })\r\n      .y0(d => this.yScale(typeof d.min === 'number' ? d.min : d.value))\r\n      .y1(d => this.yScale(typeof d.max === 'number' ? d.max : d.value))\r\n      .curve(this.curve);\r\n  }\r\n\r\n  getAreaGenerator(): any {\r\n    const xProperty = d => {\r\n      const label = d.name;\r\n      return this.xScale(label);\r\n    };\r\n\r\n    return area<any>()\r\n      .x(xProperty)\r\n      .y0(() => this.yScale.range()[0])\r\n      .y1(d => this.yScale(d.value))\r\n      .curve(this.curve);\r\n  }\r\n\r\n  sortData(data) {\r\n    if (this.scaleType === 'linear') {\r\n      data = sortLinear(data, 'name');\r\n    } else if (this.scaleType === 'time') {\r\n      data = sortByTime(data, 'name');\r\n    } else {\r\n      data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  updateGradients() {\r\n    if (this.colors.scaleType === 'linear') {\r\n      this.hasGradient = true;\r\n      this.gradientId = 'grad' + id().toString();\r\n      this.gradientUrl = `url(#${this.gradientId})`;\r\n      const values = this.data.series.map(d => d.value);\r\n      const max = Math.max(...values);\r\n      const min = Math.min(...values);\r\n      this.gradientStops = this.colors.getLinearGradientStops(max, min);\r\n      this.areaGradientStops = this.colors.getLinearGradientStops(max);\r\n    } else {\r\n      this.hasGradient = false;\r\n      this.gradientStops = undefined;\r\n      this.areaGradientStops = undefined;\r\n    }\r\n  }\r\n\r\n  isActive(entry): boolean {\r\n    if (!this.activeEntries) return false;\r\n    const item = this.activeEntries.find(d => {\r\n      return entry.name === d.name;\r\n    });\r\n    return item !== undefined;\r\n  }\r\n\r\n  isInactive(entry): boolean {\r\n    if (!this.activeEntries || this.activeEntries.length === 0) return false;\r\n    const item = this.activeEntries.find(d => {\r\n      return entry.name === d.name;\r\n    });\r\n    return item === undefined;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ChartCommonModule } from '../common/chart-common.module';\r\nimport { LineComponent } from './line.component';\r\nimport { LineChartComponent } from './line-chart.component';\r\nimport { LineSeriesComponent } from './line-series.component';\r\n\r\n@NgModule({\r\n  imports: [ChartCommonModule],\r\n  declarations: [LineComponent, LineChartComponent, LineSeriesComponent],\r\n  exports: [LineComponent, LineChartComponent, LineSeriesComponent]\r\n})\r\nexport class LineChartModule {}\r\n","export function isDate(value) {\r\n  return toString.call(value) === '[object Date]';\r\n}\r\n\r\nexport function isNumber(value) {\r\n  return typeof value === 'number';\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { trigger, style, animate, transition } from '@angular/animations';\r\nimport { scaleLinear, scaleTime, scalePoint } from 'd3-scale';\r\nimport { curveCardinalClosed } from 'd3-shape';\r\n\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nimport { getScaleType } from '../common/domain.helper';\r\nimport { isDate } from '../utils/types';\r\n\r\nconst twoPI = 2 * Math.PI;\r\n\r\n@Component({\r\n  selector: 'ngx-charts-polar-chart',\r\n  template: `\r\n    <ngx-charts-chart\r\n      [view]=\"[width, height]\"\r\n      [showLegend]=\"legend\"\r\n      [legendOptions]=\"legendOptions\"\r\n      [activeEntries]=\"activeEntries\"\r\n      [animations]=\"animations\"\r\n      (legendLabelClick)=\"onClick($event)\"\r\n      (legendLabelActivate)=\"onActivate($event)\"\r\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\r\n    >\r\n      <svg:g class=\"polar-chart chart\" [attr.transform]=\"transform\">\r\n        <svg:g [attr.transform]=\"transformPlot\">\r\n          <svg:circle class=\"polar-chart-background\" cx=\"0\" cy=\"0\" [attr.r]=\"this.outerRadius\" />\r\n          <svg:g *ngIf=\"showGridLines\">\r\n            <svg:circle\r\n              *ngFor=\"let r of radiusTicks\"\r\n              class=\"gridline-path radial-gridline-path\"\r\n              cx=\"0\"\r\n              cy=\"0\"\r\n              [attr.r]=\"r\"\r\n            />\r\n          </svg:g>\r\n          <svg:g *ngIf=\"xAxis\">\r\n            <svg:g\r\n              ngx-charts-pie-label\r\n              *ngFor=\"let tick of thetaTicks\"\r\n              [data]=\"tick\"\r\n              [radius]=\"outerRadius\"\r\n              [label]=\"tick.label\"\r\n              [max]=\"outerRadius\"\r\n              [value]=\"showGridLines ? 1 : outerRadius\"\r\n              [explodeSlices]=\"true\"\r\n              [animations]=\"animations\"\r\n              [labelTrim]=\"labelTrim\"\r\n              [labelTrimSize]=\"labelTrimSize\"\r\n            ></svg:g>\r\n          </svg:g>\r\n        </svg:g>\r\n        <svg:g\r\n          ngx-charts-y-axis\r\n          [attr.transform]=\"transformYAxis\"\r\n          *ngIf=\"yAxis\"\r\n          [yScale]=\"yAxisScale\"\r\n          [dims]=\"yAxisDims\"\r\n          [showGridLines]=\"showGridLines\"\r\n          [showLabel]=\"showYAxisLabel\"\r\n          [labelText]=\"yAxisLabel\"\r\n          [trimTicks]=\"trimYAxisTicks\"\r\n          [maxTickLength]=\"maxYAxisTickLength\"\r\n          [tickFormatting]=\"yAxisTickFormatting\"\r\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-axis-label\r\n          *ngIf=\"xAxis && showXAxisLabel\"\r\n          [label]=\"xAxisLabel\"\r\n          [offset]=\"labelOffset\"\r\n          [orient]=\"'bottom'\"\r\n          [height]=\"dims.height\"\r\n          [width]=\"dims.width\"\r\n        ></svg:g>\r\n        <svg:g [attr.transform]=\"transformPlot\">\r\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\r\n            <svg:g\r\n              ngx-charts-polar-series\r\n              [gradient]=\"gradient\"\r\n              [xScale]=\"xScale\"\r\n              [yScale]=\"yScale\"\r\n              [colors]=\"colors\"\r\n              [data]=\"series\"\r\n              [activeEntries]=\"activeEntries\"\r\n              [scaleType]=\"scaleType\"\r\n              [curve]=\"curve\"\r\n              [rangeFillOpacity]=\"rangeFillOpacity\"\r\n              [animations]=\"animations\"\r\n              [tooltipDisabled]=\"tooltipDisabled\"\r\n              [tooltipTemplate]=\"tooltipTemplate\"\r\n              (select)=\"onClick($event)\"\r\n              (activate)=\"onActivate($event)\"\r\n              (deactivate)=\"onDeactivate($event)\"\r\n            />\r\n          </svg:g>\r\n        </svg:g>\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  styleUrls: [\r\n    '../common/base-chart.component.scss',\r\n    '../pie-chart/pie-chart.component.scss',\r\n    './polar-chart.component.scss'\r\n  ],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    trigger('animationState', [\r\n      transition(':leave', [\r\n        style({\r\n          opacity: 1\r\n        }),\r\n        animate(\r\n          500,\r\n          style({\r\n            opacity: 0\r\n          })\r\n        )\r\n      ])\r\n    ])\r\n  ]\r\n})\r\nexport class PolarChartComponent extends BaseChartComponent {\r\n  @Input() legend: boolean;\r\n  @Input() legendTitle: string = 'Legend';\r\n  @Input() legendPosition: string = 'right';\r\n  @Input() xAxis: boolean;\r\n  @Input() yAxis: boolean;\r\n  @Input() showXAxisLabel: boolean;\r\n  @Input() showYAxisLabel: boolean;\r\n  @Input() xAxisLabel: string;\r\n  @Input() yAxisLabel: string;\r\n  @Input() autoScale: boolean;\r\n  @Input() showGridLines: boolean = true;\r\n  @Input() curve: any = curveCardinalClosed;\r\n  @Input() activeEntries: any[] = [];\r\n  @Input() schemeType: string;\r\n  @Input() rangeFillOpacity: number = 0.15;\r\n  @Input() trimYAxisTicks: boolean = true;\r\n  @Input() maxYAxisTickLength: number = 16;\r\n  @Input() xAxisTickFormatting: (o: any) => any;\r\n  @Input() yAxisTickFormatting: (o: any) => any;\r\n  @Input() roundDomains: boolean = false;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() showSeriesOnHover: boolean = true;\r\n  @Input() gradient: boolean = false;\r\n  @Input() yAxisMinScale: number = 0;\r\n  @Input() labelTrim: boolean = true;\r\n  @Input() labelTrimSize: number = 10;\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n\r\n  dims: ViewDimensions;\r\n  yAxisDims: ViewDimensions;\r\n  labelOffset: number;\r\n  xDomain: any;\r\n  yDomain: any;\r\n  seriesDomain: any;\r\n  yScale: any; // -> rScale\r\n  xScale: any; // -> tScale\r\n  yAxisScale: any; // -> yScale\r\n  colors: ColorHelper;\r\n  scaleType: string;\r\n  transform: string;\r\n  transformPlot: string;\r\n  transformYAxis: string;\r\n  transformXAxis: string;\r\n  series: any; // ???\r\n  margin = [10, 20, 10, 20];\r\n  xAxisHeight: number = 0;\r\n  yAxisWidth: number = 0;\r\n  filteredDomain: any;\r\n  legendOptions: any;\r\n  thetaTicks: any[];\r\n  radiusTicks: number[];\r\n  outerRadius: number;\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    this.setDims();\r\n\r\n    this.setScales();\r\n    this.setColors();\r\n    this.legendOptions = this.getLegendOptions();\r\n\r\n    this.setTicks();\r\n  }\r\n\r\n  setDims() {\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin,\r\n      showXAxis: this.xAxis,\r\n      showYAxis: this.yAxis,\r\n      xAxisHeight: this.xAxisHeight,\r\n      yAxisWidth: this.yAxisWidth,\r\n      showXLabel: this.showXAxisLabel,\r\n      showYLabel: this.showYAxisLabel,\r\n      showLegend: this.legend,\r\n      legendType: this.schemeType,\r\n      legendPosition: this.legendPosition\r\n    });\r\n\r\n    const halfWidth = Math.floor(this.dims.width / 2);\r\n    const halfHeight = Math.floor(this.dims.height / 2);\r\n\r\n    const outerRadius = (this.outerRadius = Math.min(halfHeight / 1.5, halfWidth / 1.5));\r\n\r\n    const yOffset = Math.max(0, halfHeight - outerRadius);\r\n\r\n    this.yAxisDims = {\r\n      ...this.dims,\r\n      width: halfWidth\r\n    };\r\n\r\n    this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\r\n    this.transformYAxis = `translate(0, ${yOffset})`;\r\n    this.labelOffset = this.dims.height + 40;\r\n    this.transformPlot = `translate(${halfWidth}, ${halfHeight})`;\r\n  }\r\n\r\n  setScales() {\r\n    const xValues = this.getXValues();\r\n    this.scaleType = getScaleType(xValues);\r\n    this.xDomain = this.filteredDomain || this.getXDomain(xValues);\r\n\r\n    this.yDomain = this.getYDomain();\r\n    this.seriesDomain = this.getSeriesDomain();\r\n\r\n    this.xScale = this.getXScale(this.xDomain, twoPI);\r\n    this.yScale = this.getYScale(this.yDomain, this.outerRadius);\r\n    this.yAxisScale = this.getYScale(this.yDomain.reverse(), this.outerRadius);\r\n  }\r\n\r\n  setTicks() {\r\n    let tickFormat;\r\n    if (this.xAxisTickFormatting) {\r\n      tickFormat = this.xAxisTickFormatting;\r\n    } else if (this.xScale.tickFormat) {\r\n      tickFormat = this.xScale.tickFormat.apply(this.xScale, [5]);\r\n    } else {\r\n      tickFormat = d => {\r\n        if (isDate(d)) {\r\n          return d.toLocaleDateString();\r\n        }\r\n        return d.toLocaleString();\r\n      };\r\n    }\r\n\r\n    const outerRadius = this.outerRadius;\r\n    const s = 1.1;\r\n\r\n    this.thetaTicks = this.xDomain.map(d => {\r\n      const startAngle = this.xScale(d);\r\n      const dd = s * outerRadius * (startAngle > Math.PI ? -1 : 1);\r\n      const label = tickFormat(d);\r\n\r\n      const startPos = [outerRadius * Math.sin(startAngle), -outerRadius * Math.cos(startAngle)];\r\n      const pos = [dd, s * startPos[1]];\r\n      return {\r\n        innerRadius: 0,\r\n        outerRadius,\r\n        startAngle,\r\n        endAngle: startAngle,\r\n        value: outerRadius,\r\n        label,\r\n        startPos,\r\n        pos\r\n      };\r\n    });\r\n\r\n    const minDistance = 10;\r\n\r\n    /* from pie chart, abstract out -*/\r\n    for (let i = 0; i < this.thetaTicks.length - 1; i++) {\r\n      const a = this.thetaTicks[i];\r\n\r\n      for (let j = i + 1; j < this.thetaTicks.length; j++) {\r\n        const b = this.thetaTicks[j];\r\n        // if they're on the same side\r\n        if (b.pos[0] * a.pos[0] > 0) {\r\n          // if they're overlapping\r\n          const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\r\n          if (o > 0) {\r\n            // push the second up or down\r\n            b.pos[1] += Math.sign(b.pos[0]) * o;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.radiusTicks = this.yAxisScale.ticks(Math.floor(this.dims.height / 50)).map(d => this.yScale(d));\r\n  }\r\n\r\n  getXValues(): any[] {\r\n    const values = [];\r\n    for (const results of this.results) {\r\n      for (const d of results.series) {\r\n        if (!values.includes(d.name)) {\r\n          values.push(d.name);\r\n        }\r\n      }\r\n    }\r\n    return values;\r\n  }\r\n\r\n  getXDomain(values = this.getXValues()): any[] {\r\n    if (this.scaleType === 'time') {\r\n      const min = Math.min(...values);\r\n      const max = Math.max(...values);\r\n      return [min, max];\r\n    } else if (this.scaleType === 'linear') {\r\n      values = values.map(v => Number(v));\r\n      const min = Math.min(...values);\r\n      const max = Math.max(...values);\r\n      return [min, max];\r\n    }\r\n    return values;\r\n  }\r\n\r\n  getYValues(): any[] {\r\n    const domain = [];\r\n\r\n    for (const results of this.results) {\r\n      for (const d of results.series) {\r\n        if (domain.indexOf(d.value) < 0) {\r\n          domain.push(d.value);\r\n        }\r\n        if (d.min !== undefined) {\r\n          if (domain.indexOf(d.min) < 0) {\r\n            domain.push(d.min);\r\n          }\r\n        }\r\n        if (d.max !== undefined) {\r\n          if (domain.indexOf(d.max) < 0) {\r\n            domain.push(d.max);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return domain;\r\n  }\r\n\r\n  getYDomain(domain = this.getYValues()): any[] {\r\n    let min = Math.min(...domain);\r\n    const max = Math.max(this.yAxisMinScale, ...domain);\r\n\r\n    min = Math.max(0, min);\r\n    if (!this.autoScale) {\r\n      min = Math.min(0, min);\r\n    }\r\n\r\n    return [min, max];\r\n  }\r\n\r\n  getSeriesDomain(): any[] {\r\n    return this.results.map(d => d.name);\r\n  }\r\n\r\n  getXScale(domain, width): any {\r\n    switch (this.scaleType) {\r\n      case 'time':\r\n        return scaleTime().range([0, width]).domain(domain);\r\n      case 'linear':\r\n        const scale = scaleLinear().range([0, width]).domain(domain);\r\n        return this.roundDomains ? scale.nice() : scale;\r\n      default:\r\n        return scalePoint()\r\n          .range([0, width - twoPI / domain.length])\r\n          .padding(0)\r\n          .domain(domain);\r\n    }\r\n  }\r\n\r\n  getYScale(domain, height): any {\r\n    const scale = scaleLinear().range([0, height]).domain(domain);\r\n\r\n    return this.roundDomains ? scale.nice() : scale;\r\n  }\r\n\r\n  onClick(data, series?): void {\r\n    if (series) {\r\n      data.series = series.name;\r\n    }\r\n\r\n    this.select.emit(data);\r\n  }\r\n\r\n  setColors(): void {\r\n    const domain = this.schemeType === 'ordinal' ? this.seriesDomain : this.yDomain.reverse();\r\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\r\n  }\r\n\r\n  getLegendOptions() {\r\n    if (this.schemeType === 'ordinal') {\r\n      return {\r\n        scaleType: this.schemeType,\r\n        colors: this.colors,\r\n        domain: this.seriesDomain,\r\n        title: this.legendTitle,\r\n        position: this.legendPosition\r\n      };\r\n    }\r\n    return {\r\n      scaleType: this.schemeType,\r\n      colors: this.colors.scale,\r\n      domain: this.yDomain,\r\n      title: undefined,\r\n      position: this.legendPosition\r\n    };\r\n  }\r\n\r\n  updateYAxisWidth({ width }): void {\r\n    this.yAxisWidth = width;\r\n    this.update();\r\n  }\r\n\r\n  updateXAxisHeight({ height }): void {\r\n    this.xAxisHeight = height;\r\n    this.update();\r\n  }\r\n\r\n  onActivate(item) {\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value;\r\n    });\r\n    if (idx > -1) {\r\n      return;\r\n    }\r\n    this.activeEntries = this.showSeriesOnHover ? [item, ...this.activeEntries] : this.activeEntries;\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(item) {\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value;\r\n    });\r\n\r\n    this.activeEntries.splice(idx, 1);\r\n    this.activeEntries = [...this.activeEntries];\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  deactivateAll() {\r\n    this.activeEntries = [...this.activeEntries];\r\n    for (const entry of this.activeEntries) {\r\n      this.deactivate.emit({ value: entry, entries: [] });\r\n    }\r\n    this.activeEntries = [];\r\n  }\r\n\r\n  trackBy(index, item) {\r\n    return item.name;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ChangeDetectionStrategy,\r\n  TemplateRef,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport { lineRadial } from 'd3-shape';\r\n\r\nimport { id } from '../utils/id';\r\nimport { sortLinear, sortByTime, sortByDomain } from '../utils/sort';\r\nimport { escapeLabel } from '../common/label.helper';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-polar-series]',\r\n  template: `\r\n    <svg:g class=\"polar-charts-series\">\r\n      <defs>\r\n        <svg:g\r\n          ngx-charts-svg-radial-gradient\r\n          *ngIf=\"hasGradient\"\r\n          orientation=\"vertical\"\r\n          [color]=\"seriesColor\"\r\n          [name]=\"gradientId\"\r\n          [startOpacity]=\"0.25\"\r\n          [endOpacity]=\"1\"\r\n          [stops]=\"gradientStops\"\r\n        />\r\n      </defs>\r\n      <svg:g\r\n        ngx-charts-line\r\n        class=\"polar-series-path\"\r\n        [path]=\"path\"\r\n        [stroke]=\"hasGradient ? gradientUrl : seriesColor\"\r\n        [class.active]=\"active\"\r\n        [class.inactive]=\"inactive\"\r\n        [attr.fill-opacity]=\"rangeFillOpacity\"\r\n        [fill]=\"hasGradient ? gradientUrl : seriesColor\"\r\n        [animations]=\"animations\"\r\n      />\r\n      <svg:g\r\n        ngx-charts-circle\r\n        *ngFor=\"let circle of circles\"\r\n        class=\"circle\"\r\n        [cx]=\"circle.cx\"\r\n        [cy]=\"circle.cy\"\r\n        [r]=\"circleRadius\"\r\n        [fill]=\"circle.color\"\r\n        [style.opacity]=\"inactive ? 0.2 : 1\"\r\n        ngx-tooltip\r\n        [tooltipDisabled]=\"tooltipDisabled\"\r\n        [tooltipPlacement]=\"'top'\"\r\n        tooltipType=\"tooltip\"\r\n        [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(circle)\"\r\n        [tooltipTemplate]=\"tooltipTemplate\"\r\n        [tooltipContext]=\"circle.data\"\r\n        (select)=\"select.emit(circle.data)\"\r\n        (activate)=\"activate.emit({ name: circle.data.series })\"\r\n        (deactivate)=\"deactivate.emit({ name: circle.data.series })\"\r\n      ></svg:g>\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PolarSeriesComponent implements OnChanges {\r\n  @Input() name;\r\n  @Input() data;\r\n  @Input() xScale; // Theta\r\n  @Input() yScale; // R\r\n  @Input() colors;\r\n  @Input() scaleType;\r\n  @Input() curve: any;\r\n  @Input() activeEntries: any[];\r\n  @Input() rangeFillOpacity: number;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() tooltipText: (o: any) => string;\r\n  @Input() gradient: boolean = false;\r\n  @Input() tooltipTemplate: TemplateRef<any>;\r\n  @Input() animations: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n  @Output() activate = new EventEmitter();\r\n  @Output() deactivate = new EventEmitter();\r\n\r\n  path: string;\r\n  circles: any[];\r\n  circleRadius: number = 3;\r\n\r\n  outerPath: string;\r\n  areaPath: string;\r\n  gradientId: string;\r\n  gradientUrl: string;\r\n  hasGradient: boolean;\r\n  gradientStops: any[];\r\n  areaGradientStops: any[];\r\n  seriesColor: string;\r\n\r\n  active: boolean;\r\n  inactive: boolean;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    this.updateGradients();\r\n\r\n    const line = this.getLineGenerator();\r\n\r\n    const data = this.sortData(this.data.series);\r\n\r\n    const seriesName = this.data.name;\r\n    const linearScaleType = this.colors.scaleType === 'linear';\r\n    const min = this.yScale.domain()[0];\r\n    this.seriesColor = this.colors.getColor(linearScaleType ? min : seriesName);\r\n\r\n    this.path = line(data) || '';\r\n\r\n    this.circles = data.map(d => {\r\n      const a = this.getAngle(d);\r\n      const r = this.getRadius(d);\r\n      const value = d.value;\r\n\r\n      const color = this.colors.getColor(linearScaleType ? Math.abs(value) : seriesName);\r\n\r\n      const cData = Object.assign({}, d, {\r\n        series: seriesName,\r\n        value,\r\n        name: d.name\r\n      });\r\n\r\n      return {\r\n        data: cData,\r\n        cx: r * Math.sin(a),\r\n        cy: -r * Math.cos(a),\r\n        value,\r\n        color,\r\n        label: d.name\r\n      };\r\n    });\r\n\r\n    this.active = this.isActive(this.data);\r\n    this.inactive = this.isInactive(this.data);\r\n    this.tooltipText = this.tooltipText || (c => this.defaultTooltipText(c));\r\n  }\r\n\r\n  getAngle(d) {\r\n    const label = d.name;\r\n    if (this.scaleType === 'time') {\r\n      return this.xScale(label);\r\n    } else if (this.scaleType === 'linear') {\r\n      return this.xScale(Number(label));\r\n    }\r\n    return this.xScale(label);\r\n  }\r\n\r\n  getRadius(d) {\r\n    return this.yScale(d.value);\r\n  }\r\n\r\n  getLineGenerator(): any {\r\n    return lineRadial<any>()\r\n      .angle(d => this.getAngle(d))\r\n      .radius(d => this.getRadius(d))\r\n      .curve(this.curve);\r\n  }\r\n\r\n  sortData(data) {\r\n    if (this.scaleType === 'linear') {\r\n      return sortLinear(data, 'name');\r\n    } else if (this.scaleType === 'time') {\r\n      return sortByTime(data, 'name');\r\n    }\r\n    return sortByDomain(data, 'name', 'asc', this.xScale.domain());\r\n  }\r\n\r\n  isActive(entry): boolean {\r\n    if (!this.activeEntries) return false;\r\n    const item = this.activeEntries.find(d => {\r\n      return entry.name === d.name;\r\n    });\r\n    return item !== undefined;\r\n  }\r\n\r\n  isInactive(entry): boolean {\r\n    if (!this.activeEntries || this.activeEntries.length === 0) return false;\r\n    const item = this.activeEntries.find(d => {\r\n      return entry.name === d.name;\r\n    });\r\n    return item === undefined;\r\n  }\r\n\r\n  defaultTooltipText({ label, value }): string {\r\n    return `\r\n      <span class=\"tooltip-label\">${escapeLabel(this.data.name)} â¢ ${escapeLabel(label)}</span>\r\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\r\n    `;\r\n  }\r\n\r\n  updateGradients() {\r\n    this.hasGradient = this.gradient || this.colors.scaleType === 'linear';\r\n\r\n    if (!this.hasGradient) {\r\n      return;\r\n    }\r\n\r\n    this.gradientId = 'grad' + id().toString();\r\n    this.gradientUrl = `url(#${this.gradientId})`;\r\n\r\n    if (this.colors.scaleType === 'linear') {\r\n      const values = this.data.series.map(d => d.value);\r\n      const max = Math.max(...values);\r\n      const min = Math.min(...values);\r\n      this.gradientStops = this.colors.getLinearGradientStops(max, min);\r\n    } else {\r\n      this.gradientStops = undefined;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChild,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  TemplateRef,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nimport { DataItem } from '../models/chart-data.model';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-advanced-pie-chart',\r\n  template: `\r\n    <div [style.width.px]=\"width\" [style.height.px]=\"height\">\r\n      <div class=\"advanced-pie chart\" [style.width.px]=\"dims.width\" [style.height.px]=\"dims.height\">\r\n        <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\r\n          <svg:g [attr.transform]=\"transform\" class=\"pie chart\">\r\n            <svg:g\r\n              ngx-charts-pie-series\r\n              [colors]=\"colors\"\r\n              [series]=\"results\"\r\n              [innerRadius]=\"innerRadius\"\r\n              [activeEntries]=\"activeEntries\"\r\n              [outerRadius]=\"outerRadius\"\r\n              [gradient]=\"gradient\"\r\n              [tooltipDisabled]=\"tooltipDisabled\"\r\n              [tooltipTemplate]=\"tooltipTemplate\"\r\n              [tooltipText]=\"tooltipText\"\r\n              (select)=\"onClick($event)\"\r\n              (activate)=\"onActivate($event)\"\r\n              (deactivate)=\"onDeactivate($event)\"\r\n              [animations]=\"animations\"\r\n            ></svg:g>\r\n          </svg:g>\r\n        </ngx-charts-chart>\r\n      </div>\r\n      <div class=\"advanced-pie-legend-wrapper\" [style.width.px]=\"width - dims.width\" [style.height.px]=\"height\">\r\n        <ngx-charts-advanced-legend\r\n          [data]=\"results\"\r\n          [colors]=\"colors\"\r\n          [width]=\"width - dims.width - margin[1]\"\r\n          [label]=\"label\"\r\n          [animations]=\"animations\"\r\n          [valueFormatting]=\"valueFormatting\"\r\n          [labelFormatting]=\"nameFormatting\"\r\n          [percentageFormatting]=\"percentageFormatting\"\r\n          (select)=\"onClick($event)\"\r\n          (activate)=\"onActivate($event, true)\"\r\n          (deactivate)=\"onDeactivate($event, true)\"\r\n        >\r\n        </ngx-charts-advanced-legend>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styleUrls: ['../common/base-chart.component.scss', './advanced-pie-chart.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AdvancedPieChartComponent extends BaseChartComponent {\r\n  @Input() gradient: boolean;\r\n  @Input() activeEntries: any[] = [];\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() tooltipText: any;\r\n  @Input() label: string = 'Total';\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n\r\n  data: any;\r\n  dims: ViewDimensions;\r\n  domain: any[];\r\n  outerRadius: number;\r\n  innerRadius: number;\r\n  transform: string;\r\n  colors: ColorHelper;\r\n  legendWidth: number;\r\n  margin = [20, 20, 20, 20];\r\n\r\n  @Input() valueFormatting: (value: number) => any;\r\n  @Input() nameFormatting: (value: string) => any;\r\n  @Input() percentageFormatting: (value: number) => any;\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: (this.width * 4) / 12.0,\r\n      height: this.height,\r\n      margins: this.margin\r\n    });\r\n\r\n    this.formatDates();\r\n\r\n    this.domain = this.getDomain();\r\n    this.setColors();\r\n\r\n    const xOffset = this.dims.width / 2;\r\n    const yOffset = this.margin[0] + this.dims.height / 2;\r\n    this.legendWidth = this.width - this.dims.width - this.margin[1];\r\n\r\n    this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2.5;\r\n    this.innerRadius = this.outerRadius * 0.75;\r\n\r\n    this.transform = `translate(${xOffset} , ${yOffset})`;\r\n  }\r\n\r\n  getDomain(): any[] {\r\n    return this.results.map(d => d.label);\r\n  }\r\n\r\n  onClick(data: DataItem) {\r\n    this.select.emit(data);\r\n  }\r\n\r\n  setColors(): void {\r\n    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\r\n  }\r\n\r\n  onActivate(item, fromLegend = false) {\r\n    item = this.results.find(d => {\r\n      if (fromLegend) {\r\n        return d.label === item.name;\r\n      } else {\r\n        return d.name === item.name;\r\n      }\r\n    });\r\n\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value && d.series === item.series;\r\n    });\r\n    if (idx > -1) {\r\n      return;\r\n    }\r\n\r\n    this.activeEntries = [item, ...this.activeEntries];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(item, fromLegend = false) {\r\n    item = this.results.find(d => {\r\n      if (fromLegend) {\r\n        return d.label === item.name;\r\n      } else {\r\n        return d.name === item.name;\r\n      }\r\n    });\r\n\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value && d.series === item.series;\r\n    });\r\n\r\n    this.activeEntries.splice(idx, 1);\r\n    this.activeEntries = [...this.activeEntries];\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\r\nimport { arc } from 'd3-shape';\r\n\r\nimport { trimLabel } from '../common/trim-label.helper';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-pie-label]',\r\n  template: `\r\n    <title>{{ label }}</title>\r\n    <svg:g [attr.transform]=\"attrTransform\" [style.transform]=\"styleTransform\" [style.transition]=\"textTransition\">\r\n      <svg:text\r\n        class=\"pie-label\"\r\n        [class.animation]=\"animations\"\r\n        dy=\".35em\"\r\n        [style.textAnchor]=\"textAnchor()\"\r\n        [style.shapeRendering]=\"'crispEdges'\"\r\n      >\r\n        {{ labelTrim ? trimLabel(label, labelTrimSize) : label }}\r\n      </svg:text>\r\n    </svg:g>\r\n    <svg:path\r\n      [attr.d]=\"line\"\r\n      [attr.stroke]=\"color\"\r\n      fill=\"none\"\r\n      class=\"pie-label-line line\"\r\n      [class.animation]=\"animations\"\r\n    ></svg:path>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PieLabelComponent implements OnChanges {\r\n  @Input() data;\r\n  @Input() radius;\r\n  @Input() label;\r\n  @Input() color;\r\n  @Input() max;\r\n  @Input() value;\r\n  @Input() explodeSlices;\r\n  @Input() animations: boolean = true;\r\n  @Input() labelTrim: boolean = true;\r\n  @Input() labelTrimSize: number = 10;\r\n\r\n  trimLabel: (label: string, max?: number) => string;\r\n  line: string;\r\n\r\n  private readonly isIE = /(edge|msie|trident)/i.test(navigator.userAgent);\r\n\r\n  constructor() {\r\n    this.trimLabel = trimLabel;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    let startRadius = this.radius;\r\n    if (this.explodeSlices) {\r\n      startRadius = (this.radius * this.value) / this.max;\r\n    }\r\n\r\n    const innerArc = arc().innerRadius(startRadius).outerRadius(startRadius);\r\n\r\n    // Calculate innerPos then scale outer position to match label position\r\n    const innerPos = innerArc.centroid(this.data);\r\n\r\n    let scale = this.data.pos[1] / innerPos[1];\r\n    if (this.data.pos[1] === 0 || innerPos[1] === 0) {\r\n      scale = 1;\r\n    }\r\n    const outerPos = [scale * innerPos[0], scale * innerPos[1]];\r\n\r\n    this.line = `M${innerPos}L${outerPos}L${this.data.pos}`;\r\n  }\r\n\r\n  get textX(): number {\r\n    return this.data.pos[0];\r\n  }\r\n\r\n  get textY(): number {\r\n    return this.data.pos[1];\r\n  }\r\n\r\n  get styleTransform(): string {\r\n    return this.isIE ? null : `translate3d(${this.textX}px,${this.textY}px, 0)`;\r\n  }\r\n\r\n  get attrTransform(): string {\r\n    return !this.isIE ? null : `translate(${this.textX},${this.textY})`;\r\n  }\r\n\r\n  get textTransition(): string {\r\n    return this.isIE || !this.animations ? null : 'transform 0.75s';\r\n  }\r\n\r\n  textAnchor(): any {\r\n    return this.midAngle(this.data) < Math.PI ? 'start' : 'end';\r\n  }\r\n\r\n  midAngle(d): number {\r\n    return d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ElementRef,\r\n  SimpleChanges,\r\n  OnChanges,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { interpolate } from 'd3-interpolate';\r\nimport { select } from 'd3-selection';\r\nimport { arc } from 'd3-shape';\r\n\r\nimport { id } from '../utils/id';\r\n/* tslint:disable */\r\nimport { MouseEvent } from '../events';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-pie-arc]',\r\n  template: `\r\n    <svg:g class=\"arc-group\">\r\n      <svg:defs *ngIf=\"gradient\">\r\n        <svg:g\r\n          ngx-charts-svg-radial-gradient\r\n          [color]=\"fill\"\r\n          orientation=\"vertical\"\r\n          [name]=\"radialGradientId\"\r\n          [startOpacity]=\"startOpacity\"\r\n        />\r\n      </svg:defs>\r\n      <svg:path\r\n        [attr.d]=\"path\"\r\n        class=\"arc\"\r\n        [class.active]=\"isActive\"\r\n        [attr.fill]=\"getGradient()\"\r\n        (click)=\"onClick()\"\r\n        (dblclick)=\"onDblClick($event)\"\r\n        (mouseenter)=\"activate.emit(data)\"\r\n        (mouseleave)=\"deactivate.emit(data)\"\r\n        [style.pointer-events]=\"getPointerEvents()\"\r\n      />\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PieArcComponent implements OnChanges {\r\n  @Input() fill;\r\n  @Input() startAngle: number = 0;\r\n  @Input() endAngle: number = Math.PI * 2;\r\n  @Input() innerRadius;\r\n  @Input() outerRadius;\r\n  @Input() cornerRadius: number = 0;\r\n  @Input() value;\r\n  @Input() max;\r\n  @Input() data;\r\n  @Input() explodeSlices: boolean = false;\r\n  @Input() gradient: boolean = false;\r\n  @Input() animate: boolean = true;\r\n  @Input() pointerEvents: boolean = true;\r\n  @Input() isActive: boolean = false;\r\n\r\n  @Output() select = new EventEmitter();\r\n  @Output() activate = new EventEmitter();\r\n  @Output() deactivate = new EventEmitter();\r\n  @Output() dblclick = new EventEmitter();\r\n\r\n  element: HTMLElement;\r\n  path: any;\r\n  startOpacity: number;\r\n  radialGradientId: string;\r\n  linearGradientId: string;\r\n  gradientFill: string;\r\n  initialized: boolean = false;\r\n  private _timeout;\r\n\r\n  constructor(element: ElementRef) {\r\n    this.element = element.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  getGradient() {\r\n    return this.gradient ? this.gradientFill : this.fill;\r\n  }\r\n\r\n  getPointerEvents() {\r\n    return this.pointerEvents ? 'auto' : 'none';\r\n  }\r\n\r\n  update(): void {\r\n    const calc = this.calculateArc();\r\n    this.startOpacity = 0.5;\r\n    this.radialGradientId = 'linearGrad' + id().toString();\r\n    this.gradientFill = `url(#${this.radialGradientId})`;\r\n\r\n    if (this.animate) {\r\n      if (this.initialized) {\r\n        this.updateAnimation();\r\n      } else {\r\n        this.loadAnimation();\r\n        this.initialized = true;\r\n      }\r\n    } else {\r\n      this.path = calc.startAngle(this.startAngle).endAngle(this.endAngle)();\r\n    }\r\n  }\r\n\r\n  calculateArc(): any {\r\n    let outerRadius = this.outerRadius;\r\n    if (this.explodeSlices && this.innerRadius === 0) {\r\n      outerRadius = (this.outerRadius * this.value) / this.max;\r\n    }\r\n\r\n    return arc().innerRadius(this.innerRadius).outerRadius(outerRadius).cornerRadius(this.cornerRadius);\r\n  }\r\n\r\n  loadAnimation(): void {\r\n    const node = select(this.element)\r\n      .selectAll('.arc')\r\n      .data([{ startAngle: this.startAngle, endAngle: this.endAngle }]);\r\n\r\n    const calc = this.calculateArc();\r\n\r\n    node\r\n      .transition()\r\n      .attrTween('d', function (d) {\r\n        (<any>this)._current = (<any>this)._current || d;\r\n        const copyOfD = Object.assign({}, d);\r\n        copyOfD.endAngle = copyOfD.startAngle;\r\n        const interpolater = interpolate(copyOfD, copyOfD);\r\n        (<any>this)._current = interpolater(0);\r\n        return function (t) {\r\n          return calc(interpolater(t));\r\n        };\r\n      })\r\n      .transition()\r\n      .duration(750)\r\n      .attrTween('d', function (d) {\r\n        (<any>this)._current = (<any>this)._current || d;\r\n        const interpolater = interpolate((<any>this)._current, d);\r\n        (<any>this)._current = interpolater(0);\r\n        return function (t) {\r\n          return calc(interpolater(t));\r\n        };\r\n      });\r\n  }\r\n\r\n  updateAnimation(): void {\r\n    const node = select(this.element)\r\n      .selectAll('.arc')\r\n      .data([{ startAngle: this.startAngle, endAngle: this.endAngle }]);\r\n\r\n    const calc = this.calculateArc();\r\n\r\n    node\r\n      .transition()\r\n      .duration(750)\r\n      .attrTween('d', function (d) {\r\n        (<any>this)._current = (<any>this)._current || d;\r\n        const interpolater = interpolate((<any>this)._current, d);\r\n        (<any>this)._current = interpolater(0);\r\n        return function (t) {\r\n          return calc(interpolater(t));\r\n        };\r\n      });\r\n  }\r\n\r\n  onClick(): void {\r\n    clearTimeout(this._timeout);\r\n    this._timeout = setTimeout(() => this.select.emit(this.data), 200);\r\n  }\r\n\r\n  onDblClick(event: MouseEvent) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    clearTimeout(this._timeout);\r\n\r\n    this.dblclick.emit({\r\n      data: this.data,\r\n      nativeEvent: event\r\n    });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  ViewEncapsulation,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { calculateViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nimport { DataItem } from '../models/chart-data.model';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-pie-chart',\r\n  template: `\r\n    <ngx-charts-chart\r\n      [view]=\"[width, height]\"\r\n      [showLegend]=\"legend\"\r\n      [legendOptions]=\"legendOptions\"\r\n      [activeEntries]=\"activeEntries\"\r\n      [animations]=\"animations\"\r\n      (legendLabelActivate)=\"onActivate($event, true)\"\r\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\r\n      (legendLabelClick)=\"onClick($event)\"\r\n    >\r\n      <svg:g [attr.transform]=\"translation\" class=\"pie-chart chart\">\r\n        <svg:g\r\n          ngx-charts-pie-series\r\n          [colors]=\"colors\"\r\n          [series]=\"data\"\r\n          [showLabels]=\"labels\"\r\n          [labelFormatting]=\"labelFormatting\"\r\n          [trimLabels]=\"trimLabels\"\r\n          [maxLabelLength]=\"maxLabelLength\"\r\n          [activeEntries]=\"activeEntries\"\r\n          [innerRadius]=\"innerRadius\"\r\n          [outerRadius]=\"outerRadius\"\r\n          [explodeSlices]=\"explodeSlices\"\r\n          [gradient]=\"gradient\"\r\n          [animations]=\"animations\"\r\n          [tooltipDisabled]=\"tooltipDisabled\"\r\n          [tooltipTemplate]=\"tooltipTemplate\"\r\n          [tooltipText]=\"tooltipText\"\r\n          (dblclick)=\"dblclick.emit($event)\"\r\n          (select)=\"onClick($event)\"\r\n          (activate)=\"onActivate($event)\"\r\n          (deactivate)=\"onDeactivate($event)\"\r\n        />\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  styleUrls: ['../common/base-chart.component.scss', './pie-chart.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PieChartComponent extends BaseChartComponent {\r\n  @Input() labels = false;\r\n  @Input() legend = false;\r\n  @Input() legendTitle: string = 'Legend';\r\n  @Input() legendPosition: string = 'right';\r\n  @Input() explodeSlices = false;\r\n  @Input() doughnut = false;\r\n  @Input() arcWidth = 0.25;\r\n  @Input() gradient: boolean;\r\n  @Input() activeEntries: any[] = [];\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() labelFormatting: any;\r\n  @Input() trimLabels: boolean = true;\r\n  @Input() maxLabelLength: number = 10;\r\n  @Input() tooltipText: any;\r\n  @Output() dblclick = new EventEmitter();\r\n  // optional margins\r\n  @Input() margins: number[];\r\n  @Output() select = new EventEmitter();\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n\r\n  translation: string;\r\n  outerRadius: number;\r\n  innerRadius: number;\r\n  data: any;\r\n  colors: ColorHelper;\r\n  domain: any;\r\n  dims: any;\r\n  legendOptions: any;\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    if (this.labels && this.hasNoOptionalMarginsSet()) {\r\n      this.margins = [30, 80, 30, 80];\r\n    } else if (!this.labels && this.hasNoOptionalMarginsSet()) {\r\n      // default value for margins\r\n      this.margins = [20, 20, 20, 20];\r\n    }\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margins,\r\n      showLegend: this.legend,\r\n      legendPosition: this.legendPosition\r\n    });\r\n\r\n    this.formatDates();\r\n\r\n    const xOffset = this.margins[3] + this.dims.width / 2;\r\n    const yOffset = this.margins[0] + this.dims.height / 2;\r\n    this.translation = `translate(${xOffset}, ${yOffset})`;\r\n    this.outerRadius = Math.min(this.dims.width, this.dims.height);\r\n    if (this.labels) {\r\n      // make room for labels\r\n      this.outerRadius /= 3;\r\n    } else {\r\n      this.outerRadius /= 2;\r\n    }\r\n    this.innerRadius = 0;\r\n    if (this.doughnut) {\r\n      this.innerRadius = this.outerRadius * (1 - this.arcWidth);\r\n    }\r\n\r\n    this.domain = this.getDomain();\r\n\r\n    // sort data according to domain\r\n    this.data = this.results.sort((a, b) => {\r\n      return this.domain.indexOf(a.name) - this.domain.indexOf(b.name);\r\n    });\r\n\r\n    this.setColors();\r\n    this.legendOptions = this.getLegendOptions();\r\n  }\r\n\r\n  getDomain(): any[] {\r\n    return this.results.map(d => d.label);\r\n  }\r\n\r\n  onClick(data: DataItem): void {\r\n    this.select.emit(data);\r\n  }\r\n\r\n  setColors(): void {\r\n    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\r\n  }\r\n\r\n  getLegendOptions() {\r\n    return {\r\n      scaleType: 'ordinal',\r\n      domain: this.domain,\r\n      colors: this.colors,\r\n      title: this.legendTitle,\r\n      position: this.legendPosition\r\n    };\r\n  }\r\n\r\n  onActivate(item, fromLegend = false) {\r\n    item = this.results.find(d => {\r\n      if (fromLegend) {\r\n        return d.label === item.name;\r\n      } else {\r\n        return d.name === item.name;\r\n      }\r\n    });\r\n\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value && d.series === item.series;\r\n    });\r\n    if (idx > -1) {\r\n      return;\r\n    }\r\n\r\n    this.activeEntries = [item, ...this.activeEntries];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(item, fromLegend = false) {\r\n    item = this.results.find(d => {\r\n      if (fromLegend) {\r\n        return d.label === item.name;\r\n      } else {\r\n        return d.name === item.name;\r\n      }\r\n    });\r\n\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value && d.series === item.series;\r\n    });\r\n\r\n    this.activeEntries.splice(idx, 1);\r\n    this.activeEntries = [...this.activeEntries];\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  private hasNoOptionalMarginsSet(): boolean {\r\n    return !this.margins || this.margins.length <= 0;\r\n  }\r\n}\r\n","import { scaleBand } from 'd3-scale';\r\n\r\nexport function gridSize(dims, len, minWidth) {\r\n  let rows = 1;\r\n  let cols = len;\r\n  const width = dims.width;\r\n\r\n  if (width > minWidth) {\r\n    while (width / cols < minWidth) {\r\n      rows += 1;\r\n      cols = Math.ceil(len / rows);\r\n    }\r\n  }\r\n\r\n  return [cols, rows];\r\n}\r\n\r\nexport function gridLayout(dims, data, minWidth, designatedTotal) {\r\n  const xScale: any = scaleBand<number>();\r\n  const yScale: any = scaleBand<number>();\r\n  const width = dims.width;\r\n  const height = dims.height;\r\n\r\n  const [columns, rows] = gridSize(dims, data.length, minWidth);\r\n\r\n  const xDomain = [];\r\n  const yDomain = [];\r\n  for (let i = 0; i < rows; i++) {\r\n    yDomain.push(i);\r\n  }\r\n  for (let i = 0; i < columns; i++) {\r\n    xDomain.push(i);\r\n  }\r\n  xScale.domain(xDomain);\r\n  yScale.domain(yDomain);\r\n\r\n  xScale.rangeRound([0, width], 0.1);\r\n  yScale.rangeRound([0, height], 0.1);\r\n\r\n  const res = [];\r\n  const total = designatedTotal ? designatedTotal : getTotal(data);\r\n  const cardWidth = xScale.bandwidth();\r\n  const cardHeight = yScale.bandwidth();\r\n\r\n  for (let i = 0; i < data.length; i++) {\r\n    res[i] = {};\r\n    res[i].data = {\r\n      name: data[i] ? data[i].name : '',\r\n      value: data[i] ? data[i].value : undefined,\r\n      extra: data[i] ? data[i].extra : undefined,\r\n      label: data[i] ? data[i].label : ''\r\n    };\r\n    res[i].x = xScale(i % columns);\r\n    res[i].y = yScale(Math.floor(i / columns));\r\n    res[i].width = cardWidth;\r\n    res[i].height = cardHeight;\r\n    res[i].data.percent = total > 0 ? res[i].data.value / total : 0;\r\n    res[i].data.total = total;\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\nfunction getTotal(results) {\r\n  return results.map(d => (d ? d.value : 0)).reduce((sum, val) => sum + val, 0);\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport { min } from 'd3-array';\r\nimport { format } from 'd3-format';\r\n\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nimport { trimLabel } from '../common/trim-label.helper';\r\nimport { gridLayout } from '../common/grid-layout.helper';\r\nimport { formatLabel } from '../common/label.helper';\r\nimport { DataItem } from '../models/chart-data.model';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-pie-grid',\r\n  template: `\r\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\r\n      <svg:g [attr.transform]=\"transform\" class=\"pie-grid chart\">\r\n        <svg:g *ngFor=\"let series of series\" class=\"pie-grid-item\" [attr.transform]=\"series.transform\">\r\n          <svg:g\r\n            ngx-charts-pie-grid-series\r\n            [colors]=\"series.colors\"\r\n            [data]=\"series.data\"\r\n            [innerRadius]=\"series.innerRadius\"\r\n            [outerRadius]=\"series.outerRadius\"\r\n            [animations]=\"animations\"\r\n            (select)=\"onClick($event)\"\r\n            ngx-tooltip\r\n            [tooltipDisabled]=\"tooltipDisabled\"\r\n            [tooltipPlacement]=\"'top'\"\r\n            [tooltipType]=\"'tooltip'\"\r\n            [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText({ data: series })\"\r\n            [tooltipTemplate]=\"tooltipTemplate\"\r\n            [tooltipContext]=\"series.data[0].data\"\r\n            (activate)=\"onActivate($event)\"\r\n            (deactivate)=\"onDeactivate($event)\"\r\n          />\r\n          <svg:text\r\n            *ngIf=\"animations\"\r\n            class=\"label percent-label\"\r\n            dy=\"-0.5em\"\r\n            x=\"0\"\r\n            y=\"5\"\r\n            ngx-charts-count-up\r\n            [countTo]=\"series.percent\"\r\n            [countSuffix]=\"'%'\"\r\n            text-anchor=\"middle\"\r\n          ></svg:text>\r\n          <svg:text *ngIf=\"!animations\" class=\"label percent-label\" dy=\"-0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\r\n            {{ series.percent.toLocaleString() }}\r\n          </svg:text>\r\n          <svg:text class=\"label\" dy=\"0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\r\n            {{ series.label }}\r\n          </svg:text>\r\n          <svg:text\r\n            *ngIf=\"animations\"\r\n            class=\"label\"\r\n            dy=\"1.23em\"\r\n            x=\"0\"\r\n            [attr.y]=\"series.outerRadius\"\r\n            text-anchor=\"middle\"\r\n            ngx-charts-count-up\r\n            [countTo]=\"series.total\"\r\n            [countPrefix]=\"label + ': '\"\r\n          ></svg:text>\r\n          <svg:text\r\n            *ngIf=\"!animations\"\r\n            class=\"label\"\r\n            dy=\"1.23em\"\r\n            x=\"0\"\r\n            [attr.y]=\"series.outerRadius\"\r\n            text-anchor=\"middle\"\r\n          >\r\n            {{ label }}: {{ series.total.toLocaleString() }}\r\n          </svg:text>\r\n        </svg:g>\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  styleUrls: ['../common/base-chart.component.scss', './pie-grid.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PieGridComponent extends BaseChartComponent {\r\n  @Input() designatedTotal: number;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() tooltipText: (o: any) => any;\r\n  @Input() label: string = 'Total';\r\n  @Input() minWidth: number = 150;\r\n  @Input() activeEntries: any[] = [];\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  dims: ViewDimensions;\r\n  data: any[];\r\n  transform: string;\r\n  series: any[];\r\n  domain: any[];\r\n  colorScale: ColorHelper;\r\n  margin = [20, 20, 20, 20];\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin\r\n    });\r\n\r\n    this.formatDates();\r\n\r\n    this.domain = this.getDomain();\r\n\r\n    this.data = gridLayout(this.dims, this.results, this.minWidth, this.designatedTotal);\r\n    this.transform = `translate(${this.margin[3]} , ${this.margin[0]})`;\r\n\r\n    this.series = this.getSeries();\r\n    this.setColors();\r\n\r\n    this.tooltipText = this.tooltipText || this.defaultTooltipText;\r\n  }\r\n\r\n  defaultTooltipText({ data }): string {\r\n    const label = trimLabel(formatLabel(data.name));\r\n    const val = data.value.toLocaleString();\r\n    return `\r\n      <span class=\"tooltip-label\">${label}</span>\r\n      <span class=\"tooltip-val\">${val}</span>\r\n    `;\r\n  }\r\n\r\n  getDomain(): any[] {\r\n    return this.results.map(d => d.label);\r\n  }\r\n\r\n  getSeries(): any[] {\r\n    const total = this.designatedTotal ? this.designatedTotal : this.getTotal();\r\n\r\n    return this.data.map(d => {\r\n      const baselineLabelHeight = 20;\r\n      const padding = 10;\r\n      const name = d.data.name;\r\n      const label = formatLabel(name);\r\n      const value = d.data.value;\r\n      const radius = min([d.width - padding, d.height - baselineLabelHeight]) / 2 - 5;\r\n      const innerRadius = radius * 0.9;\r\n\r\n      let count = 0;\r\n      const colors = () => {\r\n        count += 1;\r\n        if (count === 1) {\r\n          return 'rgba(100,100,100,0.3)';\r\n        } else {\r\n          return this.colorScale.getColor(label);\r\n        }\r\n      };\r\n\r\n      const xPos = d.x + (d.width - padding) / 2;\r\n      const yPos = d.y + (d.height - baselineLabelHeight) / 2;\r\n\r\n      return {\r\n        transform: `translate(${xPos}, ${yPos})`,\r\n        colors,\r\n        innerRadius,\r\n        outerRadius: radius,\r\n        name,\r\n        label: trimLabel(label),\r\n        total: value,\r\n        value,\r\n        percent: format('.1%')(d.data.percent),\r\n        data: [\r\n          d,\r\n          {\r\n            data: {\r\n              other: true,\r\n              value: total - value,\r\n              name: d.data.name\r\n            }\r\n          }\r\n        ]\r\n      };\r\n    });\r\n  }\r\n\r\n  getTotal(): any {\r\n    return this.results.map(d => d.value).reduce((sum, d) => sum + d, 0);\r\n  }\r\n\r\n  onClick(data: DataItem): void {\r\n    this.select.emit(data);\r\n  }\r\n\r\n  setColors(): void {\r\n    this.colorScale = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\r\n  }\r\n\r\n  onActivate(item, fromLegend = false) {\r\n    item = this.results.find(d => {\r\n      if (fromLegend) {\r\n        return d.label === item.name;\r\n      } else {\r\n        return d.name === item.name;\r\n      }\r\n    });\r\n\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value && d.series === item.series;\r\n    });\r\n    if (idx > -1) {\r\n      return;\r\n    }\r\n\r\n    this.activeEntries = [item, ...this.activeEntries];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(item, fromLegend = false) {\r\n    item = this.results.find(d => {\r\n      if (fromLegend) {\r\n        return d.label === item.name;\r\n      } else {\r\n        return d.name === item.name;\r\n      }\r\n    });\r\n\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value && d.series === item.series;\r\n    });\r\n\r\n    this.activeEntries.splice(idx, 1);\r\n    this.activeEntries = [...this.activeEntries];\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ElementRef,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { pie } from 'd3-shape';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-pie-grid-series]',\r\n  template: `\r\n    <svg:g class=\"pie-grid-arcs\">\r\n      <svg:g\r\n        ngx-charts-pie-arc\r\n        *ngFor=\"let arc of arcs; trackBy: trackBy\"\r\n        [attr.class]=\"arc.class\"\r\n        [startAngle]=\"arc.startAngle\"\r\n        [endAngle]=\"arc.endAngle\"\r\n        [innerRadius]=\"innerRadius\"\r\n        [outerRadius]=\"outerRadius\"\r\n        [fill]=\"color(arc)\"\r\n        [value]=\"arc.data.value\"\r\n        [data]=\"arc.data\"\r\n        [gradient]=\"false\"\r\n        [pointerEvents]=\"arc.pointerEvents\"\r\n        [animate]=\"arc.animate\"\r\n        (select)=\"onClick($event)\"\r\n        (activate)=\"activate.emit($event)\"\r\n        (deactivate)=\"deactivate.emit($event)\"\r\n      ></svg:g>\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PieGridSeriesComponent implements OnChanges {\r\n  @Input() colors;\r\n  @Input() data;\r\n  @Input() innerRadius = 70;\r\n  @Input() outerRadius = 80;\r\n  @Input() animations: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n  @Output() activate = new EventEmitter();\r\n  @Output() deactivate = new EventEmitter();\r\n\r\n  element: HTMLElement;\r\n  layout: any;\r\n  arcs: any;\r\n\r\n  constructor(element: ElementRef) {\r\n    this.element = element.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    this.layout = pie<any, any>()\r\n      .value(d => d.data.value)\r\n      .sort(null);\r\n\r\n    this.arcs = this.getArcs();\r\n  }\r\n\r\n  getArcs(): any[] {\r\n    return this.layout(this.data).map((arc, index) => {\r\n      const label = arc.data.data.name;\r\n      const other = arc.data.data.other;\r\n\r\n      if (index === 0) {\r\n        arc.startAngle = 0;\r\n      }\r\n\r\n      const color = this.colors(label);\r\n      return {\r\n        data: arc.data.data,\r\n        class: 'arc ' + 'arc' + index,\r\n        fill: color,\r\n        startAngle: other ? 0 : arc.startAngle,\r\n        endAngle: arc.endAngle,\r\n        animate: this.animations && !other,\r\n        pointerEvents: !other\r\n      };\r\n    });\r\n  }\r\n\r\n  onClick(data): void {\r\n    this.select.emit(this.data[0].data);\r\n  }\r\n\r\n  trackBy(index, item): string {\r\n    return item.data.name;\r\n  }\r\n\r\n  label(arc): string {\r\n    return arc.data.name;\r\n  }\r\n\r\n  color(arc): any {\r\n    return this.colors(this.label(arc));\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  SimpleChanges,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  ChangeDetectionStrategy,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { max } from 'd3-array';\r\nimport { arc, pie } from 'd3-shape';\r\n\r\nimport { formatLabel, escapeLabel } from '../common/label.helper';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-pie-series]',\r\n  template: `\r\n    <svg:g *ngFor=\"let arc of data; trackBy: trackBy\">\r\n      <svg:g\r\n        ngx-charts-pie-label\r\n        *ngIf=\"labelVisible(arc)\"\r\n        [data]=\"arc\"\r\n        [radius]=\"outerRadius\"\r\n        [color]=\"color(arc)\"\r\n        [label]=\"labelText(arc)\"\r\n        [labelTrim]=\"trimLabels\"\r\n        [labelTrimSize]=\"maxLabelLength\"\r\n        [max]=\"max\"\r\n        [value]=\"arc.value\"\r\n        [explodeSlices]=\"explodeSlices\"\r\n        [animations]=\"animations\"\r\n      ></svg:g>\r\n      <svg:g\r\n        ngx-charts-pie-arc\r\n        [startAngle]=\"arc.startAngle\"\r\n        [endAngle]=\"arc.endAngle\"\r\n        [innerRadius]=\"innerRadius\"\r\n        [outerRadius]=\"outerRadius\"\r\n        [fill]=\"color(arc)\"\r\n        [value]=\"arc.data.value\"\r\n        [gradient]=\"gradient\"\r\n        [data]=\"arc.data\"\r\n        [max]=\"max\"\r\n        [explodeSlices]=\"explodeSlices\"\r\n        [isActive]=\"isActive(arc.data)\"\r\n        [animate]=\"animations\"\r\n        (select)=\"onClick($event)\"\r\n        (activate)=\"activate.emit($event)\"\r\n        (deactivate)=\"deactivate.emit($event)\"\r\n        (dblclick)=\"dblclick.emit($event)\"\r\n        ngx-tooltip\r\n        [tooltipDisabled]=\"tooltipDisabled\"\r\n        [tooltipPlacement]=\"'top'\"\r\n        [tooltipType]=\"'tooltip'\"\r\n        [tooltipTitle]=\"getTooltipTitle(arc)\"\r\n        [tooltipTemplate]=\"tooltipTemplate\"\r\n        [tooltipContext]=\"arc.data\"\r\n      ></svg:g>\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PieSeriesComponent implements OnChanges {\r\n  @Input() colors;\r\n  @Input() series: any = [];\r\n  @Input() dims;\r\n  @Input() innerRadius = 60;\r\n  @Input() outerRadius = 80;\r\n  @Input() explodeSlices;\r\n  @Input() showLabels;\r\n  @Input() gradient: boolean;\r\n  @Input() activeEntries: any[];\r\n  @Input() labelFormatting: any;\r\n  @Input() trimLabels: boolean = true;\r\n  @Input() maxLabelLength: number = 10;\r\n  @Input() tooltipText: (o: any) => any;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() tooltipTemplate: TemplateRef<any>;\r\n  @Input() animations: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n  @Output() activate = new EventEmitter();\r\n  @Output() deactivate = new EventEmitter();\r\n  @Output() dblclick = new EventEmitter();\r\n\r\n  max: number;\r\n  data: any;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    const pieGenerator = pie<any, any>()\r\n      .value(d => d.value)\r\n      .sort(null);\r\n\r\n    const arcData = pieGenerator(this.series);\r\n\r\n    this.max = max(arcData, d => {\r\n      return d.value;\r\n    });\r\n\r\n    this.data = this.calculateLabelPositions(arcData);\r\n    this.tooltipText = this.tooltipText || this.defaultTooltipText;\r\n  }\r\n\r\n  midAngle(d): number {\r\n    return d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n  }\r\n\r\n  outerArc(): any {\r\n    const factor = 1.5;\r\n\r\n    return arc()\r\n      .innerRadius(this.outerRadius * factor)\r\n      .outerRadius(this.outerRadius * factor);\r\n  }\r\n\r\n  calculateLabelPositions(pieData): any {\r\n    const factor = 1.5;\r\n    const minDistance = 10;\r\n    const labelPositions = pieData;\r\n\r\n    labelPositions.forEach(d => {\r\n      d.pos = this.outerArc().centroid(d);\r\n      d.pos[0] = factor * this.outerRadius * (this.midAngle(d) < Math.PI ? 1 : -1);\r\n    });\r\n\r\n    for (let i = 0; i < labelPositions.length - 1; i++) {\r\n      const a = labelPositions[i];\r\n      if (!this.labelVisible(a)) {\r\n        continue;\r\n      }\r\n\r\n      for (let j = i + 1; j < labelPositions.length; j++) {\r\n        const b = labelPositions[j];\r\n        if (!this.labelVisible(b)) {\r\n          continue;\r\n        }\r\n        // if they're on the same side\r\n        if (b.pos[0] * a.pos[0] > 0) {\r\n          // if they're overlapping\r\n          const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\r\n          if (o > 0) {\r\n            // push the second up or down\r\n            b.pos[1] += Math.sign(b.pos[0]) * o;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return labelPositions;\r\n  }\r\n\r\n  labelVisible(myArc): boolean {\r\n    return this.showLabels && myArc.endAngle - myArc.startAngle > Math.PI / 30;\r\n  }\r\n\r\n  getTooltipTitle(a) {\r\n    return this.tooltipTemplate ? undefined : this.tooltipText(a);\r\n  }\r\n\r\n  labelText(myArc): string {\r\n    if (this.labelFormatting) {\r\n      return this.labelFormatting(myArc.data.name);\r\n    }\r\n    return this.label(myArc);\r\n  }\r\n\r\n  label(myArc): string {\r\n    return formatLabel(myArc.data.name);\r\n  }\r\n\r\n  defaultTooltipText(myArc): string {\r\n    const label = this.label(myArc);\r\n    const val = formatLabel(myArc.data.value);\r\n\r\n    return `\r\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\r\n      <span class=\"tooltip-val\">${val}</span>\r\n    `;\r\n  }\r\n\r\n  color(myArc): any {\r\n    return this.colors.getColor(this.label(myArc));\r\n  }\r\n\r\n  trackBy(index, item): string {\r\n    return item.data.name;\r\n  }\r\n\r\n  onClick(data): void {\r\n    this.select.emit(data);\r\n  }\r\n\r\n  isActive(entry): boolean {\r\n    if (!this.activeEntries) return false;\r\n    const item = this.activeEntries.find(d => {\r\n      return entry.name === d.name && entry.series === d.series;\r\n    });\r\n    return item !== undefined;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ChartCommonModule } from '../common/chart-common.module';\r\nimport { AdvancedPieChartComponent } from './advanced-pie-chart.component';\r\nimport { PieLabelComponent } from './pie-label.component';\r\nimport { PieArcComponent } from './pie-arc.component';\r\nimport { PieChartComponent } from './pie-chart.component';\r\nimport { PieGridComponent } from './pie-grid.component';\r\nimport { PieGridSeriesComponent } from './pie-grid-series.component';\r\nimport { PieSeriesComponent } from './pie-series.component';\r\n\r\n@NgModule({\r\n  imports: [ChartCommonModule],\r\n  declarations: [\r\n    AdvancedPieChartComponent,\r\n    PieLabelComponent,\r\n    PieArcComponent,\r\n    PieChartComponent,\r\n    PieGridComponent,\r\n    PieGridSeriesComponent,\r\n    PieSeriesComponent\r\n  ],\r\n  exports: [\r\n    AdvancedPieChartComponent,\r\n    PieLabelComponent,\r\n    PieArcComponent,\r\n    PieChartComponent,\r\n    PieGridComponent,\r\n    PieGridSeriesComponent,\r\n    PieSeriesComponent\r\n  ]\r\n})\r\nexport class PieChartModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { ChartCommonModule } from '../common/chart-common.module';\r\nimport { PolarChartComponent } from './polar-chart.component';\r\nimport { PolarSeriesComponent } from './polar-series.component';\r\nimport { PieChartModule } from '../pie-chart/pie-chart.module';\r\nimport { LineChartModule } from '../line-chart/line-chart.module';\r\n\r\n@NgModule({\r\n  imports: [ChartCommonModule, PieChartModule, LineChartModule],\r\n  declarations: [PolarChartComponent, PolarSeriesComponent],\r\n  exports: [PolarChartComponent, PolarSeriesComponent]\r\n})\r\nexport class PolarChartModule {}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ElementRef,\r\n  SimpleChanges,\r\n  OnChanges,\r\n  ViewChild,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  NgZone,\r\n  OnDestroy\r\n} from '@angular/core';\r\nimport { trimLabel } from '../common/trim-label.helper';\r\nimport { roundedRect } from '../common/shape.helper';\r\nimport { escapeLabel } from '../common/label.helper';\r\nimport { decimalChecker, count } from '../common/count/count.helper';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-card]',\r\n  template: `\r\n    <svg:g [attr.transform]=\"transform\" class=\"cell\" (click)=\"onClick()\">\r\n      <svg:rect class=\"card\" [style.fill]=\"color\" [attr.width]=\"cardWidth\" [attr.height]=\"cardHeight\" rx=\"3\" ry=\"3\" />\r\n      <svg:path\r\n        *ngIf=\"bandColor && bandColor !== color\"\r\n        class=\"card-band\"\r\n        [attr.fill]=\"bandColor\"\r\n        [attr.transform]=\"transformBand\"\r\n        stroke=\"none\"\r\n        [attr.d]=\"bandPath\"\r\n      />\r\n      <title>{{ label }}</title>\r\n      <svg:foreignObject\r\n        class=\"trimmed-label\"\r\n        x=\"5\"\r\n        [attr.x]=\"textPadding[3]\"\r\n        [attr.y]=\"cardHeight - textPadding[2]\"\r\n        [attr.width]=\"textWidth\"\r\n        [attr.height]=\"labelFontSize + textPadding[2]\"\r\n        alignment-baseline=\"hanging\"\r\n      >\r\n        <xhtml:p\r\n          [style.color]=\"textColor\"\r\n          [style.fontSize.px]=\"labelFontSize\"\r\n          [style.lineHeight.px]=\"labelFontSize\"\r\n          [innerHTML]=\"formattedLabel\"\r\n        >\r\n        </xhtml:p>\r\n      </svg:foreignObject>\r\n      <svg:text\r\n        #textEl\r\n        class=\"value-text\"\r\n        [attr.x]=\"textPadding[3]\"\r\n        [attr.y]=\"textPadding[0]\"\r\n        [style.fill]=\"textColor\"\r\n        text-anchor=\"start\"\r\n        alignment-baseline=\"hanging\"\r\n        [style.font-size.pt]=\"textFontSize\"\r\n      >\r\n        {{ value }}\r\n      </svg:text>\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CardComponent implements OnChanges, OnDestroy {\r\n  @Input() color;\r\n  @Input() bandColor;\r\n  @Input() textColor;\r\n\r\n  @Input() x;\r\n  @Input() y;\r\n  @Input() width;\r\n  @Input() height;\r\n  @Input() label;\r\n  @Input() data;\r\n  @Input() medianSize: number;\r\n  @Input() valueFormatting: any;\r\n  @Input() labelFormatting: any;\r\n  @Input() animations: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n\r\n  @ViewChild('textEl', { static: false }) textEl: ElementRef;\r\n\r\n  element: HTMLElement;\r\n  value: string = '';\r\n  transform: string;\r\n  formattedLabel: string;\r\n  cardWidth: number;\r\n  cardHeight: number;\r\n  textWidth: number;\r\n  textFontSize: number = 12;\r\n  textTransform: string = '';\r\n  initialized: boolean = false;\r\n  animationReq: any;\r\n\r\n  bandHeight: number = 10;\r\n  transformBand: string;\r\n  textPadding = [10, 20, 5, 20];\r\n  labelFontSize = 15;\r\n\r\n  bandPath: string;\r\n\r\n  constructor(element: ElementRef, private cd: ChangeDetectorRef, private zone: NgZone) {\r\n    this.element = element.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    cancelAnimationFrame(this.animationReq);\r\n  }\r\n\r\n  update(): void {\r\n    this.zone.run(() => {\r\n      const hasValue = this.data && typeof this.data.value !== 'undefined';\r\n      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\r\n      const labelFormatting = this.labelFormatting || (card => escapeLabel(trimLabel(card.label, 55)));\r\n\r\n      this.transform = `translate(${this.x} , ${this.y})`;\r\n\r\n      this.textWidth = Math.max(0, this.width) - this.textPadding[1] - this.textPadding[3];\r\n      this.cardWidth = Math.max(0, this.width);\r\n      this.cardHeight = Math.max(0, this.height);\r\n\r\n      this.label = this.label ? this.label : this.data.name;\r\n\r\n      const cardData = {\r\n        label: this.label,\r\n        data: this.data,\r\n        value: this.data.value\r\n      };\r\n\r\n      this.formattedLabel = labelFormatting(cardData);\r\n      this.transformBand = `translate(0 , ${this.cardHeight - this.bandHeight})`;\r\n\r\n      const value = hasValue ? valueFormatting(cardData) : '';\r\n\r\n      this.value = this.paddedValue(value);\r\n      this.setPadding();\r\n\r\n      this.bandPath = roundedRect(0, 0, this.cardWidth, this.bandHeight, 3, [false, false, true, true]);\r\n\r\n      setTimeout(() => {\r\n        this.scaleText();\r\n        this.value = value;\r\n        if (hasValue && !this.initialized) {\r\n          setTimeout(() => this.startCount(), 20);\r\n        }\r\n      }, 8);\r\n    });\r\n  }\r\n\r\n  paddedValue(value: string) {\r\n    if (this.medianSize && this.medianSize > value.length) {\r\n      value += '\\u2007'.repeat(this.medianSize - value.length);\r\n    }\r\n    return value;\r\n  }\r\n\r\n  startCount(): void {\r\n    if (!this.initialized && this.animations) {\r\n      cancelAnimationFrame(this.animationReq);\r\n\r\n      const val = this.data.value;\r\n      const decs = decimalChecker(val);\r\n      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\r\n\r\n      const callback = ({ value, finished }) => {\r\n        this.zone.run(() => {\r\n          value = finished ? val : value;\r\n          this.value = valueFormatting({ label: this.label, data: this.data, value });\r\n          if (!finished) {\r\n            this.value = this.paddedValue(this.value);\r\n          }\r\n          this.cd.markForCheck();\r\n        });\r\n      };\r\n\r\n      this.animationReq = count(0, val, decs, 1, callback);\r\n      this.initialized = true;\r\n    }\r\n  }\r\n\r\n  scaleText(): void {\r\n    this.zone.run(() => {\r\n      const { width, height } = this.textEl.nativeElement.getBoundingClientRect();\r\n      if (width === 0 || height === 0) {\r\n        return;\r\n      }\r\n\r\n      const textPadding = (this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8);\r\n      const availableWidth = this.cardWidth - 2 * textPadding;\r\n      const availableHeight = this.cardHeight / 3;\r\n\r\n      const resizeScale = Math.min(availableWidth / width, availableHeight / height);\r\n      this.textFontSize = Math.floor(this.textFontSize * resizeScale);\r\n      this.labelFontSize = Math.min(this.textFontSize, 15);\r\n\r\n      this.setPadding();\r\n      this.cd.markForCheck();\r\n    });\r\n  }\r\n\r\n  setPadding() {\r\n    this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\r\n    const padding = this.cardHeight / 2;\r\n    this.textPadding[0] = padding - this.textFontSize - this.labelFontSize / 2;\r\n    this.textPadding[2] = padding - this.labelFontSize;\r\n  }\r\n\r\n  onClick(): void {\r\n    this.select.emit(this.data);\r\n  }\r\n}\r\n","import * as d3_color from 'd3-color';\r\n\r\n/**\r\n * Converts a hex to RGB\r\n *\r\n * @export\r\n */\r\nexport function hexToRgb(value: string): any {\r\n  // deprecated, use d3.color()\r\n  return d3_color.rgb(value);\r\n}\r\n\r\n/**\r\n * Accepts a color (string) and returns a inverted hex color (string)\r\n * http://stackoverflow.com/questions/9600295/automatically-change-text-color-to-assure-readability\r\n *\r\n * @export\r\n */\r\nexport function invertColor(value: string): string {\r\n  const color = d3_color.rgb(value);\r\n  const { r, g, b, opacity } = color;\r\n  if (opacity === 0) {\r\n    return color.toString();\r\n  }\r\n  const yiq = (r * 299 + g * 587 + b * 114) / 1000;\r\n  const depth = yiq >= 128 ? -0.8 : 0.8;\r\n\r\n  return shadeRGBColor(color, depth);\r\n}\r\n\r\n/**\r\n * Given a rgb, it will darken/lighten\r\n * http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors\r\n *\r\n * @export\r\n * @param \\{ r, g, b }\r\n */\r\nexport function shadeRGBColor({ r, g, b }, percent) {\r\n  const t = percent < 0 ? 0 : 255;\r\n  const p = percent < 0 ? percent * -1 : percent;\r\n\r\n  r = Math.round((t - r) * p) + r;\r\n  g = Math.round((t - g) * p) + g;\r\n  b = Math.round((t - b) * p) + b;\r\n\r\n  return `rgb(${r}, ${g}, ${b})`;\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { invertColor } from '../utils/color-utils';\r\n\r\nexport interface CardModel {\r\n  x;\r\n  y;\r\n  width: number;\r\n  height: number;\r\n  color: string;\r\n  label: string;\r\n  data;\r\n  tooltipText: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-card-series]',\r\n  template: `\r\n    <svg:rect\r\n      *ngFor=\"let c of emptySlots; trackBy: trackBy\"\r\n      class=\"card-empty\"\r\n      [attr.x]=\"c.x\"\r\n      [attr.y]=\"c.y\"\r\n      [style.fill]=\"emptyColor\"\r\n      [attr.width]=\"c.width\"\r\n      [attr.height]=\"c.height\"\r\n      rx=\"3\"\r\n      ry=\"3\"\r\n    />\r\n    <svg:g\r\n      ngx-charts-card\r\n      *ngFor=\"let c of cards; trackBy: trackBy\"\r\n      [x]=\"c.x\"\r\n      [y]=\"c.y\"\r\n      [width]=\"c.width\"\r\n      [height]=\"c.height\"\r\n      [color]=\"c.color\"\r\n      [bandColor]=\"c.bandColor\"\r\n      [textColor]=\"c.textColor\"\r\n      [data]=\"c.data\"\r\n      [label]=\"c.label\"\r\n      [medianSize]=\"medianSize\"\r\n      [valueFormatting]=\"valueFormatting\"\r\n      [labelFormatting]=\"labelFormatting\"\r\n      [animations]=\"animations\"\r\n      (select)=\"onClick($event)\"\r\n    />\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CardSeriesComponent implements OnChanges {\r\n  @Input() data: any[];\r\n  @Input() slots: any[];\r\n  @Input() dims;\r\n  @Input() colors;\r\n  @Input() innerPadding = 15;\r\n\r\n  @Input() cardColor;\r\n  @Input() bandColor;\r\n  @Input() emptyColor = 'rgba(0, 0, 0, 0)';\r\n  @Input() textColor;\r\n  @Input() valueFormatting: any;\r\n  @Input() labelFormatting: any;\r\n  @Input() animations: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n\r\n  cards: CardModel[];\r\n  emptySlots: any[];\r\n  medianSize: number;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    if (this.data.length > 2) {\r\n      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\r\n\r\n      const sortedLengths = this.data\r\n        .map(d => {\r\n          const hasValue = d && d.data && typeof d.data.value !== 'undefined' && d.data.value !== null;\r\n          return hasValue\r\n            ? valueFormatting({\r\n                data: d.data,\r\n                label: d ? d.data.name : '',\r\n                value: d && d.data ? d.data.value : ''\r\n              }).length\r\n            : 0;\r\n        })\r\n        .sort((a, b) => b - a);\r\n      const idx = Math.ceil(this.data.length / 2);\r\n      this.medianSize = sortedLengths[idx];\r\n    }\r\n\r\n    const cards = this.getCards();\r\n    this.cards = cards.filter(d => d.data.value !== null);\r\n    this.emptySlots = cards.filter(d => d.data.value === null);\r\n  }\r\n\r\n  getCards(): any[] {\r\n    const yPadding =\r\n      typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[0] + this.innerPadding[2];\r\n    const xPadding =\r\n      typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[1] + this.innerPadding[3];\r\n\r\n    return this.data.map((d, index) => {\r\n      let label = d.data.name;\r\n      if (label && label.constructor.name === 'Date') {\r\n        label = label.toLocaleDateString();\r\n      } else {\r\n        label = label ? label.toLocaleString() : label;\r\n      }\r\n\r\n      const value = d.data.value;\r\n      const valueColor = label ? this.colors.getColor(label) : this.emptyColor;\r\n      const color = this.cardColor || valueColor || '#000';\r\n      return {\r\n        x: d.x,\r\n        y: d.y,\r\n        width: d.width - xPadding,\r\n        height: d.height - yPadding,\r\n        color,\r\n        bandColor: this.bandColor || valueColor,\r\n        textColor: this.textColor || invertColor(color),\r\n        label,\r\n        data: d.data,\r\n        tooltipText: `${label}: ${value}`\r\n      };\r\n    });\r\n  }\r\n\r\n  trackBy(index, card): string {\r\n    return card.label;\r\n  }\r\n\r\n  onClick(data): void {\r\n    this.select.emit(data);\r\n  }\r\n}\r\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\nimport { gridLayout, gridSize } from '../common/grid-layout.helper';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-number-card',\r\n  template: `\r\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\r\n      <svg:g [attr.transform]=\"transform\" class=\"number-card chart\" [class.clickable]=\"clickable\">\r\n        <svg:g\r\n          ngx-charts-card-series\r\n          [colors]=\"colors\"\r\n          [cardColor]=\"cardColor\"\r\n          [bandColor]=\"bandColor\"\r\n          [textColor]=\"textColor\"\r\n          [emptyColor]=\"emptyColor\"\r\n          [data]=\"data\"\r\n          [dims]=\"dims\"\r\n          [innerPadding]=\"innerPadding\"\r\n          [valueFormatting]=\"valueFormatting\"\r\n          [labelFormatting]=\"labelFormatting\"\r\n          [animations]=\"animations\"\r\n          (select)=\"onClick($event)\"\r\n        />\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  styleUrls: ['../common/base-chart.component.scss', './card.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class NumberCardComponent extends BaseChartComponent {\r\n  @Input() cardColor: string;\r\n  @Input() bandColor: string;\r\n  @Input() emptyColor: string = 'rgba(0, 0, 0, 0)';\r\n  @Input() innerPadding = 15;\r\n  @Input() textColor: string;\r\n  @Input() valueFormatting: any;\r\n  @Input() labelFormatting: any;\r\n  @Input() designatedTotal: number;\r\n\r\n  dims: ViewDimensions;\r\n  data: any[];\r\n  slots: any[];\r\n  colors: ColorHelper;\r\n  transform: string;\r\n  domain: any[];\r\n  margin = [10, 10, 10, 10];\r\n\r\n  backgroundCards: any[];\r\n\r\n  get clickable() {\r\n    return !!this.select.observers.length;\r\n  }\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin\r\n    });\r\n\r\n    this.formatDates();\r\n\r\n    this.domain = this.getDomain();\r\n\r\n    this.setColors();\r\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\r\n\r\n    const size = gridSize(this.dims, this.results.length, 150);\r\n    const N = size[0] * size[1];\r\n\r\n    const data = this.results.slice();\r\n\r\n    while (data.length < N) {\r\n      data.push({ value: null });\r\n    }\r\n\r\n    this.data = gridLayout(this.dims, data, 150, this.designatedTotal);\r\n  }\r\n\r\n  getDomain(): any[] {\r\n    return this.results.map(d => d.label);\r\n  }\r\n\r\n  onClick(data): void {\r\n    this.select.emit(data);\r\n  }\r\n\r\n  setColors(): void {\r\n    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ChartCommonModule } from '../common/chart-common.module';\r\nimport { CardComponent } from './card.component';\r\nimport { CardSeriesComponent } from './card-series.component';\r\nimport { NumberCardComponent } from './number-card.component';\r\n\r\n@NgModule({\r\n  imports: [ChartCommonModule],\r\n  declarations: [CardComponent, CardSeriesComponent, NumberCardComponent],\r\n  exports: [CardComponent, CardSeriesComponent, NumberCardComponent]\r\n})\r\nexport class NumberCardModule {}\r\n","import { Component, Input, Output, EventEmitter, ElementRef, OnChanges, ChangeDetectionStrategy } from '@angular/core';\r\nimport { select } from 'd3-selection';\r\n\r\nimport { invertColor } from '../utils/color-utils';\r\nimport { trimLabel } from '../common/trim-label.helper';\r\nimport { escapeLabel } from '../common/label.helper';\r\nimport { id } from '../utils/id';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-tree-map-cell]',\r\n  template: `\r\n    <svg:g>\r\n      <defs *ngIf=\"gradient\">\r\n        <svg:g ngx-charts-svg-linear-gradient orientation=\"vertical\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\r\n      </defs>\r\n      <svg:rect\r\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\r\n        [attr.width]=\"width\"\r\n        [attr.height]=\"height\"\r\n        [attr.x]=\"x\"\r\n        [attr.y]=\"y\"\r\n        [style.cursor]=\"'pointer'\"\r\n        class=\"cell\"\r\n        (click)=\"onClick()\"\r\n      />\r\n      <svg:foreignObject\r\n        *ngIf=\"width >= 70 && height >= 35\"\r\n        [attr.x]=\"x\"\r\n        [attr.y]=\"y\"\r\n        [attr.width]=\"width\"\r\n        [attr.height]=\"height\"\r\n        class=\"treemap-label\"\r\n        [style.pointer-events]=\"'none'\"\r\n      >\r\n        <xhtml:p [style.color]=\"getTextColor()\" [style.height]=\"height + 'px'\" [style.width]=\"width + 'px'\">\r\n          <xhtml:span class=\"treemap-label\" [innerHTML]=\"formattedLabel\"> </xhtml:span>\r\n          <xhtml:br />\r\n          <xhtml:span\r\n            *ngIf=\"animations\"\r\n            class=\"treemap-val\"\r\n            ngx-charts-count-up\r\n            [countTo]=\"value\"\r\n            [valueFormatting]=\"valueFormatting\"\r\n          >\r\n          </xhtml:span>\r\n          <xhtml:span *ngIf=\"!animations\" class=\"treemap-val\">\r\n            {{ formattedValue }}\r\n          </xhtml:span>\r\n        </xhtml:p>\r\n      </svg:foreignObject>\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TreeMapCellComponent implements OnChanges {\r\n  @Input() data;\r\n  @Input() fill;\r\n  @Input() x;\r\n  @Input() y;\r\n  @Input() width;\r\n  @Input() height;\r\n  @Input() label;\r\n  @Input() value;\r\n  @Input() valueType;\r\n  @Input() valueFormatting: any;\r\n  @Input() labelFormatting: any;\r\n  @Input() gradient: boolean = false;\r\n  @Input() animations: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n\r\n  gradientStops: any[];\r\n  gradientId: string;\r\n  gradientUrl: string;\r\n\r\n  element: HTMLElement;\r\n  transform: string;\r\n  formattedLabel: string;\r\n  formattedValue: string;\r\n  initialized: boolean = false;\r\n\r\n  constructor(element: ElementRef) {\r\n    this.element = element.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    this.update();\r\n\r\n    this.valueFormatting = this.valueFormatting || (value => value.toLocaleString());\r\n    const labelFormatting = this.labelFormatting || (cell => escapeLabel(trimLabel(cell.label, 55)));\r\n\r\n    const cellData = {\r\n      data: this.data,\r\n      label: this.label,\r\n      value: this.value\r\n    };\r\n\r\n    this.formattedValue = this.valueFormatting(cellData.value);\r\n    this.formattedLabel = labelFormatting(cellData);\r\n\r\n    this.gradientId = 'grad' + id().toString();\r\n    this.gradientUrl = `url(#${this.gradientId})`;\r\n    this.gradientStops = this.getGradientStops();\r\n  }\r\n\r\n  update(): void {\r\n    if (this.initialized) {\r\n      this.animateToCurrentForm();\r\n    } else {\r\n      if (this.animations) {\r\n        this.loadAnimation();\r\n      }\r\n      this.initialized = true;\r\n    }\r\n  }\r\n\r\n  loadAnimation(): void {\r\n    const node = select(this.element).select('.cell');\r\n\r\n    node.attr('opacity', 0).attr('x', this.x).attr('y', this.y);\r\n\r\n    this.animateToCurrentForm();\r\n  }\r\n\r\n  getTextColor(): string {\r\n    return invertColor(this.fill);\r\n  }\r\n\r\n  animateToCurrentForm(): void {\r\n    const node = select(this.element).select('.cell');\r\n\r\n    if (this.animations) {\r\n      node\r\n        .transition()\r\n        .duration(750)\r\n        .attr('opacity', 1)\r\n        .attr('x', this.x)\r\n        .attr('y', this.y)\r\n        .attr('width', this.width)\r\n        .attr('height', this.height);\r\n    } else {\r\n      node.attr('opacity', 1).attr('x', this.x).attr('y', this.y).attr('width', this.width).attr('height', this.height);\r\n    }\r\n  }\r\n\r\n  onClick(): void {\r\n    this.select.emit(this.data);\r\n  }\r\n\r\n  getGradientStops() {\r\n    return [\r\n      {\r\n        offset: 0,\r\n        color: this.fill,\r\n        opacity: 0.3\r\n      },\r\n      {\r\n        offset: 100,\r\n        color: this.fill,\r\n        opacity: 1\r\n      }\r\n    ];\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnChanges,\r\n  Input,\r\n  Output,\r\n  SimpleChanges,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { escapeLabel } from '../common/label.helper';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-tree-map-cell-series]',\r\n  template: `\r\n    <svg:g\r\n      ngx-charts-tree-map-cell\r\n      *ngFor=\"let c of cells; trackBy: trackBy\"\r\n      [data]=\"c.data\"\r\n      [x]=\"c.x\"\r\n      [y]=\"c.y\"\r\n      [width]=\"c.width\"\r\n      [height]=\"c.height\"\r\n      [fill]=\"c.fill\"\r\n      [label]=\"c.label\"\r\n      [value]=\"c.value\"\r\n      [valueType]=\"c.valueType\"\r\n      [valueFormatting]=\"valueFormatting\"\r\n      [labelFormatting]=\"labelFormatting\"\r\n      [gradient]=\"gradient\"\r\n      [animations]=\"animations\"\r\n      (select)=\"onClick($event)\"\r\n      ngx-tooltip\r\n      [tooltipDisabled]=\"tooltipDisabled\"\r\n      [tooltipPlacement]=\"'top'\"\r\n      [tooltipType]=\"'tooltip'\"\r\n      [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(c)\"\r\n      [tooltipTemplate]=\"tooltipTemplate\"\r\n      [tooltipContext]=\"c.data\"\r\n    ></svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TreeMapCellSeriesComponent implements OnChanges {\r\n  @Input() data;\r\n  @Input() dims;\r\n  @Input() colors;\r\n  @Input() valueFormatting: any;\r\n  @Input() labelFormatting: any;\r\n  @Input() gradient: boolean = false;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() tooltipTemplate: TemplateRef<any>;\r\n  @Input() animations: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n\r\n  cells: any[];\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.cells = this.getCells();\r\n  }\r\n\r\n  getCells(): any[] {\r\n    return this.data.children\r\n      .filter(d => {\r\n        return d.depth === 1;\r\n      })\r\n      .map((d, index) => {\r\n        const label = d.id;\r\n\r\n        return {\r\n          data: d.data,\r\n          x: d.x0,\r\n          y: d.y0,\r\n          width: d.x1 - d.x0,\r\n          height: d.y1 - d.y0,\r\n          fill: this.colors.getColor(label),\r\n          label,\r\n          value: d.value,\r\n          valueType: d.valueType\r\n        };\r\n      });\r\n  }\r\n\r\n  getTooltipText({ label, value }): string {\r\n    return `\r\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\r\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\r\n    `;\r\n  }\r\n\r\n  onClick(data): void {\r\n    this.select.emit(data);\r\n  }\r\n\r\n  trackBy(index, item): string {\r\n    return item.label;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { treemap, stratify } from 'd3-hierarchy';\r\n\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nimport { calculateViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-tree-map',\r\n  template: `\r\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\r\n      <svg:g [attr.transform]=\"transform\" class=\"tree-map chart\">\r\n        <svg:g\r\n          ngx-charts-tree-map-cell-series\r\n          [colors]=\"colors\"\r\n          [data]=\"data\"\r\n          [dims]=\"dims\"\r\n          [tooltipDisabled]=\"tooltipDisabled\"\r\n          [tooltipTemplate]=\"tooltipTemplate\"\r\n          [valueFormatting]=\"valueFormatting\"\r\n          [labelFormatting]=\"labelFormatting\"\r\n          [gradient]=\"gradient\"\r\n          [animations]=\"animations\"\r\n          (select)=\"onClick($event)\"\r\n        />\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  styleUrls: ['./tree-map.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TreeMapComponent extends BaseChartComponent {\r\n  @Input() results;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() valueFormatting: any;\r\n  @Input() labelFormatting: any;\r\n  @Input() gradient: boolean = false;\r\n\r\n  @Output() select = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n\r\n  dims: any;\r\n  domain: any;\r\n  transform: any;\r\n  colors: ColorHelper;\r\n  treemap: any;\r\n  data: any;\r\n  margin = [10, 10, 10, 10];\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin\r\n    });\r\n\r\n    this.domain = this.getDomain();\r\n\r\n    this.treemap = treemap<any>().size([this.dims.width, this.dims.height]);\r\n\r\n    const rootNode = {\r\n      name: 'root',\r\n      value: 0,\r\n      isRoot: true\r\n    };\r\n\r\n    const root = stratify<any>()\r\n      .id(d => {\r\n        let label = d.name;\r\n\r\n        if (label.constructor.name === 'Date') {\r\n          label = label.toLocaleDateString();\r\n        } else {\r\n          label = label.toLocaleString();\r\n        }\r\n        return label;\r\n      })\r\n      .parentId(d => (d.isRoot ? null : 'root'))([rootNode, ...this.results])\r\n      .sum(d => d.value);\r\n\r\n    this.data = this.treemap(root);\r\n\r\n    this.setColors();\r\n\r\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\r\n  }\r\n\r\n  getDomain(): any[] {\r\n    return this.results.map(d => d.name);\r\n  }\r\n\r\n  onClick(data): void {\r\n    this.select.emit(data);\r\n  }\r\n\r\n  setColors(): void {\r\n    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ChartCommonModule } from '../common/chart-common.module';\r\nimport { TreeMapCellComponent } from './tree-map-cell.component';\r\nimport { TreeMapCellSeriesComponent } from './tree-map-cell-series.component';\r\nimport { TreeMapComponent } from './tree-map.component';\r\n\r\n@NgModule({\r\n  imports: [ChartCommonModule],\r\n  declarations: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent],\r\n  exports: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent]\r\n})\r\nexport class TreeMapModule {}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ElementRef,\r\n  ViewChild,\r\n  AfterViewInit,\r\n  ViewEncapsulation,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { scaleLinear } from 'd3-scale';\r\n\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-linear-gauge',\r\n  template: `\r\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\" (click)=\"onClick()\">\r\n      <svg:g class=\"linear-gauge chart\">\r\n        <svg:g\r\n          ngx-charts-bar\r\n          class=\"background-bar\"\r\n          [width]=\"dims.width\"\r\n          [height]=\"3\"\r\n          [x]=\"margin[3]\"\r\n          [y]=\"dims.height / 2 + margin[0] - 2\"\r\n          [data]=\"{}\"\r\n          [orientation]=\"'horizontal'\"\r\n          [roundEdges]=\"true\"\r\n          [animations]=\"animations\"\r\n        ></svg:g>\r\n        <svg:g\r\n          ngx-charts-bar\r\n          [width]=\"valueScale(value)\"\r\n          [height]=\"3\"\r\n          [x]=\"margin[3]\"\r\n          [y]=\"dims.height / 2 + margin[0] - 2\"\r\n          [fill]=\"colors.getColor(units)\"\r\n          [data]=\"{}\"\r\n          [orientation]=\"'horizontal'\"\r\n          [roundEdges]=\"true\"\r\n          [animations]=\"animations\"\r\n        ></svg:g>\r\n\r\n        <svg:line\r\n          *ngIf=\"hasPreviousValue\"\r\n          [attr.transform]=\"transformLine\"\r\n          x1=\"0\"\r\n          y1=\"5\"\r\n          x2=\"0\"\r\n          y2=\"15\"\r\n          [attr.stroke]=\"colors.getColor(units)\"\r\n        />\r\n\r\n        <svg:line\r\n          *ngIf=\"hasPreviousValue\"\r\n          [attr.transform]=\"transformLine\"\r\n          x1=\"0\"\r\n          y1=\"-5\"\r\n          x2=\"0\"\r\n          y2=\"-15\"\r\n          [attr.stroke]=\"colors.getColor(units)\"\r\n        />\r\n\r\n        <svg:g [attr.transform]=\"transform\">\r\n          <svg:g [attr.transform]=\"valueTranslate\">\r\n            <svg:text\r\n              #valueTextEl\r\n              class=\"value\"\r\n              [style.textAnchor]=\"'middle'\"\r\n              [attr.transform]=\"valueTextTransform\"\r\n              alignment-baseline=\"after-edge\"\r\n            >\r\n              {{ displayValue }}\r\n            </svg:text>\r\n          </svg:g>\r\n\r\n          <svg:g [attr.transform]=\"unitsTranslate\">\r\n            <svg:text\r\n              #unitsTextEl\r\n              class=\"units\"\r\n              [style.textAnchor]=\"'middle'\"\r\n              [attr.transform]=\"unitsTextTransform\"\r\n              alignment-baseline=\"before-edge\"\r\n            >\r\n              {{ units }}\r\n            </svg:text>\r\n          </svg:g>\r\n        </svg:g>\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  styleUrls: ['../common/base-chart.component.scss', './linear-gauge.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LinearGaugeComponent extends BaseChartComponent implements AfterViewInit {\r\n  @Input() min: number = 0;\r\n  @Input() max: number = 100;\r\n  @Input() value: number = 0;\r\n  @Input() units: string;\r\n  @Input() previousValue;\r\n  @Input() valueFormatting: any;\r\n\r\n  @ViewChild('valueTextEl') valueTextEl: ElementRef;\r\n  @ViewChild('unitsTextEl') unitsTextEl: ElementRef;\r\n\r\n  dims: ViewDimensions;\r\n  valueDomain: any;\r\n  valueScale: any;\r\n\r\n  colors: ColorHelper;\r\n  transform: string;\r\n  margin: any[] = [10, 20, 10, 20];\r\n  transformLine: string;\r\n\r\n  valueResizeScale: number = 1;\r\n  unitsResizeScale: number = 1;\r\n  valueTextTransform: string = '';\r\n  valueTranslate: string = '';\r\n  unitsTextTransform: string = '';\r\n  unitsTranslate: string = '';\r\n  displayValue: string;\r\n  hasPreviousValue: boolean;\r\n\r\n  ngAfterViewInit(): void {\r\n    super.ngAfterViewInit();\r\n    setTimeout(() => {\r\n      this.scaleText('value');\r\n      this.scaleText('units');\r\n    });\r\n  }\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    this.hasPreviousValue = this.previousValue !== undefined;\r\n    this.max = Math.max(this.max, this.value);\r\n    this.min = Math.min(this.min, this.value);\r\n    if (this.hasPreviousValue) {\r\n      this.max = Math.max(this.max, this.previousValue);\r\n      this.min = Math.min(this.min, this.previousValue);\r\n    }\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin\r\n    });\r\n\r\n    this.valueDomain = this.getValueDomain();\r\n    this.valueScale = this.getValueScale();\r\n    this.displayValue = this.getDisplayValue();\r\n\r\n    this.setColors();\r\n\r\n    const xOffset = this.margin[3] + this.dims.width / 2;\r\n    const yOffset = this.margin[0] + this.dims.height / 2;\r\n\r\n    this.transform = `translate(${xOffset}, ${yOffset})`;\r\n    this.transformLine = `translate(${this.margin[3] + this.valueScale(this.previousValue)}, ${yOffset})`;\r\n    this.valueTranslate = `translate(0, -15)`;\r\n    this.unitsTranslate = `translate(0, 15)`;\r\n    setTimeout(() => this.scaleText('value'), 50);\r\n    setTimeout(() => this.scaleText('units'), 50);\r\n  }\r\n\r\n  getValueDomain(): any[] {\r\n    return [this.min, this.max];\r\n  }\r\n\r\n  getValueScale(): any {\r\n    return scaleLinear().range([0, this.dims.width]).domain(this.valueDomain);\r\n  }\r\n\r\n  getDisplayValue(): string {\r\n    if (this.valueFormatting) {\r\n      return this.valueFormatting(this.value);\r\n    }\r\n    return this.value.toLocaleString();\r\n  }\r\n\r\n  scaleText(element, repeat: boolean = true): void {\r\n    let el;\r\n    let resizeScale;\r\n    if (element === 'value') {\r\n      el = this.valueTextEl;\r\n      resizeScale = this.valueResizeScale;\r\n    } else {\r\n      el = this.unitsTextEl;\r\n      resizeScale = this.unitsResizeScale;\r\n    }\r\n\r\n    const { width, height } = el.nativeElement.getBoundingClientRect();\r\n    if (width === 0 || height === 0) return;\r\n    const oldScale = resizeScale;\r\n    const availableWidth = this.dims.width;\r\n    const availableHeight = Math.max(this.dims.height / 2 - 15, 0);\r\n    const resizeScaleWidth = Math.floor((availableWidth / (width / resizeScale)) * 100) / 100;\r\n    const resizeScaleHeight = Math.floor((availableHeight / (height / resizeScale)) * 100) / 100;\r\n    resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\r\n\r\n    if (resizeScale !== oldScale) {\r\n      if (element === 'value') {\r\n        this.valueResizeScale = resizeScale;\r\n        this.valueTextTransform = `scale(${resizeScale}, ${resizeScale})`;\r\n      } else {\r\n        this.unitsResizeScale = resizeScale;\r\n        this.unitsTextTransform = `scale(${resizeScale}, ${resizeScale})`;\r\n      }\r\n      this.cd.markForCheck();\r\n      if (repeat) {\r\n        setTimeout(() => {\r\n          this.scaleText(element, false);\r\n        }, 50);\r\n      }\r\n    }\r\n  }\r\n\r\n  onClick(): void {\r\n    this.select.emit({\r\n      name: 'Value',\r\n      value: this.value\r\n    });\r\n  }\r\n\r\n  setColors(): void {\r\n    this.colors = new ColorHelper(this.scheme, 'ordinal', [this.value], this.customColors);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ElementRef,\r\n  ViewChild,\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Output,\r\n  EventEmitter,\r\n  ViewEncapsulation,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { scaleLinear } from 'd3-scale';\r\n\r\nimport { BaseChartComponent } from '../common/base-chart.component';\r\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\n\r\n@Component({\r\n  selector: 'ngx-charts-gauge',\r\n  template: `\r\n    <ngx-charts-chart\r\n      [view]=\"[width, height]\"\r\n      [showLegend]=\"legend\"\r\n      [legendOptions]=\"legendOptions\"\r\n      [activeEntries]=\"activeEntries\"\r\n      [animations]=\"animations\"\r\n      (legendLabelClick)=\"onClick($event)\"\r\n      (legendLabelActivate)=\"onActivate($event)\"\r\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\r\n    >\r\n      <svg:g [attr.transform]=\"transform\" class=\"gauge chart\">\r\n        <svg:g *ngFor=\"let arc of arcs; trackBy: trackBy\" [attr.transform]=\"rotation\">\r\n          <svg:g\r\n            ngx-charts-gauge-arc\r\n            [backgroundArc]=\"arc.backgroundArc\"\r\n            [valueArc]=\"arc.valueArc\"\r\n            [cornerRadius]=\"cornerRadius\"\r\n            [colors]=\"colors\"\r\n            [isActive]=\"isActive(arc.valueArc.data)\"\r\n            [tooltipDisabled]=\"tooltipDisabled\"\r\n            [tooltipTemplate]=\"tooltipTemplate\"\r\n            [valueFormatting]=\"valueFormatting\"\r\n            [animations]=\"animations\"\r\n            (select)=\"onClick($event)\"\r\n            (activate)=\"onActivate($event)\"\r\n            (deactivate)=\"onDeactivate($event)\"\r\n          ></svg:g>\r\n        </svg:g>\r\n\r\n        <svg:g\r\n          ngx-charts-gauge-axis\r\n          *ngIf=\"showAxis\"\r\n          [bigSegments]=\"bigSegments\"\r\n          [smallSegments]=\"smallSegments\"\r\n          [min]=\"min\"\r\n          [max]=\"max\"\r\n          [radius]=\"outerRadius\"\r\n          [angleSpan]=\"angleSpan\"\r\n          [valueScale]=\"valueScale\"\r\n          [startAngle]=\"startAngle\"\r\n          [tickFormatting]=\"axisTickFormatting\"\r\n        ></svg:g>\r\n\r\n        <svg:text\r\n          #textEl\r\n          *ngIf=\"showText\"\r\n          [style.textAnchor]=\"'middle'\"\r\n          [attr.transform]=\"textTransform\"\r\n          alignment-baseline=\"central\"\r\n        >\r\n          <tspan x=\"0\" dy=\"0\">{{ displayValue }}</tspan>\r\n          <tspan x=\"0\" dy=\"1.2em\">{{ units }}</tspan>\r\n        </svg:text>\r\n      </svg:g>\r\n    </ngx-charts-chart>\r\n  `,\r\n  styleUrls: ['../common/base-chart.component.scss', './gauge.component.scss'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GaugeComponent extends BaseChartComponent implements AfterViewInit {\r\n  @Input() legend = false;\r\n  @Input() legendTitle: string = 'Legend';\r\n  @Input() legendPosition: string = 'right';\r\n  @Input() min: number = 0;\r\n  @Input() max: number = 100;\r\n  @Input() textValue: string;\r\n  @Input() units: string;\r\n  @Input() bigSegments: number = 10;\r\n  @Input() smallSegments: number = 5;\r\n  @Input() results: any[];\r\n  @Input() showAxis: boolean = true;\r\n  @Input() startAngle: number = -120;\r\n  @Input() angleSpan: number = 240;\r\n  @Input() activeEntries: any[] = [];\r\n  @Input() axisTickFormatting: any;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() valueFormatting: (value: any) => string;\r\n  @Input() showText: boolean = true;\r\n\r\n  // Specify margins\r\n  @Input() margin: any[];\r\n\r\n  @Output() activate: EventEmitter<any> = new EventEmitter();\r\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\r\n\r\n  @ViewChild('textEl') textEl: ElementRef;\r\n\r\n  dims: ViewDimensions;\r\n  domain: any[];\r\n  valueDomain: any;\r\n  valueScale: any;\r\n\r\n  colors: ColorHelper;\r\n  transform: string;\r\n\r\n  outerRadius: number;\r\n  textRadius: number; // max available radius for the text\r\n  resizeScale: number = 1;\r\n  rotation: string = '';\r\n  textTransform: string = 'scale(1, 1)';\r\n  cornerRadius: number = 10;\r\n  arcs: any[];\r\n  displayValue: string;\r\n  legendOptions: any;\r\n\r\n  ngAfterViewInit(): void {\r\n    super.ngAfterViewInit();\r\n    setTimeout(() => this.scaleText());\r\n  }\r\n\r\n  update(): void {\r\n    super.update();\r\n\r\n    if (!this.showAxis) {\r\n      if (!this.margin) {\r\n        this.margin = [10, 20, 10, 20];\r\n      }\r\n    } else {\r\n      if (!this.margin) {\r\n        this.margin = [60, 100, 60, 100];\r\n      }\r\n    }\r\n\r\n    // make the starting angle positive\r\n    if (this.startAngle < 0) {\r\n      this.startAngle = (this.startAngle % 360) + 360;\r\n    }\r\n\r\n    this.angleSpan = Math.min(this.angleSpan, 360);\r\n\r\n    this.dims = calculateViewDimensions({\r\n      width: this.width,\r\n      height: this.height,\r\n      margins: this.margin,\r\n      showLegend: this.legend,\r\n      legendPosition: this.legendPosition\r\n    });\r\n\r\n    this.domain = this.getDomain();\r\n    this.valueDomain = this.getValueDomain();\r\n    this.valueScale = this.getValueScale();\r\n    this.displayValue = this.getDisplayValue();\r\n\r\n    this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2;\r\n\r\n    this.arcs = this.getArcs();\r\n\r\n    this.setColors();\r\n    this.legendOptions = this.getLegendOptions();\r\n\r\n    const xOffset = this.margin[3] + this.dims.width / 2;\r\n    const yOffset = this.margin[0] + this.dims.height / 2;\r\n\r\n    this.transform = `translate(${xOffset}, ${yOffset})`;\r\n    this.rotation = `rotate(${this.startAngle})`;\r\n    setTimeout(() => this.scaleText(), 50);\r\n  }\r\n\r\n  getArcs(): any[] {\r\n    const arcs = [];\r\n\r\n    const availableRadius = this.outerRadius * 0.7;\r\n\r\n    const radiusPerArc = Math.min(availableRadius / this.results.length, 10);\r\n    const arcWidth = radiusPerArc * 0.7;\r\n    this.textRadius = this.outerRadius - this.results.length * radiusPerArc;\r\n    this.cornerRadius = Math.floor(arcWidth / 2);\r\n\r\n    let i = 0;\r\n    for (const d of this.results) {\r\n      const outerRadius = this.outerRadius - i * radiusPerArc;\r\n      const innerRadius = outerRadius - arcWidth;\r\n\r\n      const backgroundArc = {\r\n        endAngle: (this.angleSpan * Math.PI) / 180,\r\n        innerRadius,\r\n        outerRadius,\r\n        data: {\r\n          value: this.max,\r\n          name: d.name\r\n        }\r\n      };\r\n\r\n      const valueArc = {\r\n        endAngle: (Math.min(this.valueScale(d.value), this.angleSpan) * Math.PI) / 180,\r\n        innerRadius,\r\n        outerRadius,\r\n        data: {\r\n          value: d.value,\r\n          name: d.name\r\n        }\r\n      };\r\n\r\n      const arc = {\r\n        backgroundArc,\r\n        valueArc\r\n      };\r\n\r\n      arcs.push(arc);\r\n      i++;\r\n    }\r\n\r\n    return arcs;\r\n  }\r\n\r\n  getDomain(): any[] {\r\n    return this.results.map(d => d.name);\r\n  }\r\n\r\n  getValueDomain(): any[] {\r\n    const values = this.results.map(d => d.value);\r\n    const dataMin = Math.min(...values);\r\n    const dataMax = Math.max(...values);\r\n\r\n    if (this.min !== undefined) {\r\n      this.min = Math.min(this.min, dataMin);\r\n    } else {\r\n      this.min = dataMin;\r\n    }\r\n\r\n    if (this.max !== undefined) {\r\n      this.max = Math.max(this.max, dataMax);\r\n    } else {\r\n      this.max = dataMax;\r\n    }\r\n\r\n    return [this.min, this.max];\r\n  }\r\n\r\n  getValueScale(): any {\r\n    return scaleLinear().range([0, this.angleSpan]).nice().domain(this.valueDomain);\r\n  }\r\n\r\n  getDisplayValue(): string {\r\n    const value = this.results.map(d => d.value).reduce((a, b) => a + b, 0);\r\n\r\n    if (this.textValue && 0 !== this.textValue.length) {\r\n      return this.textValue.toLocaleString();\r\n    }\r\n\r\n    if (this.valueFormatting) {\r\n      return this.valueFormatting(value);\r\n    }\r\n\r\n    return value.toLocaleString();\r\n  }\r\n\r\n  scaleText(repeat: boolean = true): void {\r\n    if (!this.showText) {\r\n      return;\r\n    }\r\n    const { width } = this.textEl.nativeElement.getBoundingClientRect();\r\n    const oldScale = this.resizeScale;\r\n\r\n    if (width === 0) {\r\n      this.resizeScale = 1;\r\n    } else {\r\n      const availableSpace = this.textRadius;\r\n      this.resizeScale = Math.floor((availableSpace / (width / this.resizeScale)) * 100) / 100;\r\n    }\r\n\r\n    if (this.resizeScale !== oldScale) {\r\n      this.textTransform = `scale(${this.resizeScale}, ${this.resizeScale})`;\r\n      this.cd.markForCheck();\r\n      if (repeat) {\r\n        setTimeout(() => this.scaleText(false), 50);\r\n      }\r\n    }\r\n  }\r\n\r\n  onClick(data): void {\r\n    this.select.emit(data);\r\n  }\r\n\r\n  getLegendOptions(): any {\r\n    return {\r\n      scaleType: 'ordinal',\r\n      colors: this.colors,\r\n      domain: this.domain,\r\n      title: this.legendTitle,\r\n      position: this.legendPosition\r\n    };\r\n  }\r\n\r\n  setColors(): void {\r\n    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\r\n  }\r\n\r\n  onActivate(item): void {\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value;\r\n    });\r\n    if (idx > -1) {\r\n      return;\r\n    }\r\n\r\n    this.activeEntries = [item, ...this.activeEntries];\r\n    this.activate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  onDeactivate(item): void {\r\n    const idx = this.activeEntries.findIndex(d => {\r\n      return d.name === item.name && d.value === item.value;\r\n    });\r\n\r\n    this.activeEntries.splice(idx, 1);\r\n    this.activeEntries = [...this.activeEntries];\r\n\r\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\r\n  }\r\n\r\n  isActive(entry): boolean {\r\n    if (!this.activeEntries) return false;\r\n    const item = this.activeEntries.find(d => {\r\n      return entry.name === d.name && entry.series === d.series;\r\n    });\r\n    return item !== undefined;\r\n  }\r\n\r\n  trackBy(index, item): string {\r\n    return item.valueArc.data.name;\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, TemplateRef } from '@angular/core';\r\nimport { formatLabel, escapeLabel } from '../common/label.helper';\r\nimport { ColorHelper } from '../common/color.helper';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-gauge-arc]',\r\n  template: `\r\n    <svg:g\r\n      ngx-charts-pie-arc\r\n      class=\"background-arc\"\r\n      [startAngle]=\"0\"\r\n      [endAngle]=\"backgroundArc.endAngle\"\r\n      [innerRadius]=\"backgroundArc.innerRadius\"\r\n      [outerRadius]=\"backgroundArc.outerRadius\"\r\n      [cornerRadius]=\"cornerRadius\"\r\n      [data]=\"backgroundArc.data\"\r\n      [animate]=\"false\"\r\n      [pointerEvents]=\"false\"\r\n    ></svg:g>\r\n    <svg:g\r\n      ngx-charts-pie-arc\r\n      [startAngle]=\"0\"\r\n      [endAngle]=\"valueArc.endAngle\"\r\n      [innerRadius]=\"valueArc.innerRadius\"\r\n      [outerRadius]=\"valueArc.outerRadius\"\r\n      [cornerRadius]=\"cornerRadius\"\r\n      [fill]=\"colors.getColor(valueArc.data.name)\"\r\n      [data]=\"valueArc.data\"\r\n      [animate]=\"animations\"\r\n      [isActive]=\"isActive\"\r\n      (select)=\"select.emit($event)\"\r\n      (activate)=\"activate.emit($event)\"\r\n      (deactivate)=\"deactivate.emit($event)\"\r\n      ngx-tooltip\r\n      [tooltipDisabled]=\"tooltipDisabled\"\r\n      [tooltipPlacement]=\"'top'\"\r\n      [tooltipType]=\"'tooltip'\"\r\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(valueArc)\"\r\n      [tooltipTemplate]=\"tooltipTemplate\"\r\n      [tooltipContext]=\"valueArc.data\"\r\n    ></svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GaugeArcComponent {\r\n  @Input() backgroundArc: any;\r\n  @Input() valueArc: any;\r\n  @Input() cornerRadius: any;\r\n  @Input() colors: ColorHelper;\r\n  @Input() isActive: boolean = false;\r\n  @Input() tooltipDisabled: boolean = false;\r\n  @Input() valueFormatting: (value: any) => string;\r\n  @Input() tooltipTemplate: TemplateRef<any>;\r\n  @Input() animations: boolean = true;\r\n\r\n  @Output() select = new EventEmitter();\r\n  @Output() activate = new EventEmitter();\r\n  @Output() deactivate = new EventEmitter();\r\n\r\n  tooltipText(arc): string {\r\n    const label = formatLabel(arc.data.name);\r\n    let val;\r\n\r\n    if (this.valueFormatting) {\r\n      val = this.valueFormatting(arc.data.value);\r\n    } else {\r\n      val = formatLabel(arc.data.value);\r\n    }\r\n\r\n    return `\r\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\r\n      <span class=\"tooltip-val\">${val}</span>\r\n    `;\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\r\nimport { line } from 'd3-shape';\r\n\r\n@Component({\r\n  selector: 'g[ngx-charts-gauge-axis]',\r\n  template: `\r\n    <svg:g [attr.transform]=\"rotate\">\r\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\r\n        <svg:path [attr.d]=\"tick.line\" />\r\n      </svg:g>\r\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\r\n        <svg:text\r\n          [style.textAnchor]=\"tick.textAnchor\"\r\n          [attr.transform]=\"tick.textTransform\"\r\n          alignment-baseline=\"central\"\r\n        >\r\n          {{ tick.text }}\r\n        </svg:text>\r\n      </svg:g>\r\n      <svg:g *ngFor=\"let tick of ticks.small\" class=\"gauge-tick gauge-tick-small\">\r\n        <svg:path [attr.d]=\"tick.line\" />\r\n      </svg:g>\r\n    </svg:g>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GaugeAxisComponent implements OnChanges {\r\n  @Input() bigSegments: any;\r\n  @Input() smallSegments: any;\r\n  @Input() min: any;\r\n  @Input() max: any;\r\n  @Input() angleSpan: number;\r\n  @Input() startAngle: number;\r\n  @Input() radius: any;\r\n  @Input() valueScale: any;\r\n  @Input() tickFormatting: any;\r\n\r\n  ticks: any;\r\n  rotationAngle: number;\r\n  rotate: string = '';\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.update();\r\n  }\r\n\r\n  update(): void {\r\n    this.rotationAngle = -90 + this.startAngle;\r\n    this.rotate = `rotate(${this.rotationAngle})`;\r\n    this.ticks = this.getTicks();\r\n  }\r\n\r\n  getTicks(): any {\r\n    const bigTickSegment = this.angleSpan / this.bigSegments;\r\n    const smallTickSegment = bigTickSegment / this.smallSegments;\r\n    const tickLength = 20;\r\n    const ticks = {\r\n      big: [],\r\n      small: []\r\n    };\r\n\r\n    const startDistance = this.radius + 10;\r\n    const textDist = startDistance + tickLength + 10;\r\n\r\n    for (let i = 0; i <= this.bigSegments; i++) {\r\n      const angleDeg = i * bigTickSegment;\r\n      const angle = (angleDeg * Math.PI) / 180;\r\n\r\n      const textAnchor = this.getTextAnchor(angleDeg);\r\n\r\n      let skip = false;\r\n      if (i === 0 && this.angleSpan === 360) {\r\n        skip = true;\r\n      }\r\n\r\n      if (!skip) {\r\n        let text = Number.parseFloat(this.valueScale.invert(angleDeg).toString()).toLocaleString();\r\n        if (this.tickFormatting) {\r\n          text = this.tickFormatting(text);\r\n        }\r\n        ticks.big.push({\r\n          line: this.getTickPath(startDistance, tickLength, angle),\r\n          textAnchor,\r\n          text,\r\n          textTransform: `\r\n            translate(${textDist * Math.cos(angle)}, ${textDist * Math.sin(angle)}) rotate(${-this.rotationAngle})\r\n          `\r\n        });\r\n      }\r\n\r\n      if (i === this.bigSegments) {\r\n        continue;\r\n      }\r\n\r\n      for (let j = 1; j <= this.smallSegments; j++) {\r\n        const smallAngleDeg = angleDeg + j * smallTickSegment;\r\n        const smallAngle = (smallAngleDeg * Math.PI) / 180;\r\n\r\n        ticks.small.push({\r\n          line: this.getTickPath(startDistance, tickLength / 2, smallAngle)\r\n        });\r\n      }\r\n    }\r\n\r\n    return ticks;\r\n  }\r\n\r\n  getTextAnchor(angle) {\r\n    // [0, 45] = 'middle';\r\n    // [46, 135] = 'start';\r\n    // [136, 225] = 'middle';\r\n    // [226, 315] = 'end';\r\n\r\n    angle = (this.startAngle + angle) % 360;\r\n    let textAnchor = 'middle';\r\n    if (angle > 45 && angle <= 135) {\r\n      textAnchor = 'start';\r\n    } else if (angle > 225 && angle <= 315) {\r\n      textAnchor = 'end';\r\n    }\r\n    return textAnchor;\r\n  }\r\n\r\n  getTickPath(startDistance, tickLength, angle): any {\r\n    const y1 = startDistance * Math.sin(angle);\r\n    const y2 = (startDistance + tickLength) * Math.sin(angle);\r\n    const x1 = startDistance * Math.cos(angle);\r\n    const x2 = (startDistance + tickLength) * Math.cos(angle);\r\n\r\n    const points = [\r\n      { x: x1, y: y1 },\r\n      { x: x2, y: y2 }\r\n    ];\r\n    const lineGenerator = line<any>()\r\n      .x(d => d.x)\r\n      .y(d => d.y);\r\n    return lineGenerator(points);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ChartCommonModule } from '../common/chart-common.module';\r\nimport { LinearGaugeComponent } from './linear-gauge.component';\r\nimport { GaugeComponent } from './gauge.component';\r\nimport { GaugeArcComponent } from './gauge-arc.component';\r\nimport { GaugeAxisComponent } from './gauge-axis.component';\r\nimport { PieChartModule } from '../pie-chart/pie-chart.module';\r\nimport { BarChartModule } from '../bar-chart/bar-chart.module';\r\n\r\n@NgModule({\r\n  imports: [ChartCommonModule, PieChartModule, BarChartModule],\r\n  declarations: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent],\r\n  exports: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent]\r\n})\r\nexport class GaugeModule {}\r\n","// The export is needed here to generate a valid polyfills.metadata.json file\r\nexport function ngxChartsPolyfills() {\r\n  // IE11 fix\r\n  // Ref: https://github.com/swimlane/ngx-charts/issues/386\r\n  if (typeof SVGElement !== 'undefined' && typeof SVGElement.prototype.contains === 'undefined') {\r\n    SVGElement.prototype.contains = HTMLDivElement.prototype.contains;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ChartCommonModule } from './common/chart-common.module';\r\nimport { AreaChartModule } from './area-chart/area-chart.module';\r\nimport { BarChartModule } from './bar-chart/bar-chart.module';\r\nimport { BubbleChartModule } from './bubble-chart/bubble-chart.module';\r\nimport { HeatMapModule } from './heat-map/heat-map.module';\r\nimport { LineChartModule } from './line-chart/line-chart.module';\r\nimport { PolarChartModule } from './polar-chart/polar-chart.module';\r\nimport { NumberCardModule } from './number-card/number-card.module';\r\nimport { PieChartModule } from './pie-chart/pie-chart.module';\r\nimport { TreeMapModule } from './tree-map/tree-map.module';\r\nimport { GaugeModule } from './gauge/gauge.module';\r\nimport { ngxChartsPolyfills } from './polyfills';\r\n\r\n@NgModule({\r\n  exports: [\r\n    ChartCommonModule,\r\n    AreaChartModule,\r\n    BarChartModule,\r\n    BubbleChartModule,\r\n    HeatMapModule,\r\n    LineChartModule,\r\n    PolarChartModule,\r\n    NumberCardModule,\r\n    PieChartModule,\r\n    TreeMapModule,\r\n    GaugeModule\r\n  ]\r\n})\r\nexport class NgxChartsModule {\r\n  constructor() {\r\n    ngxChartsPolyfills();\r\n  }\r\n}\r\n","import { timeFormat } from 'd3-time-format';\r\n\r\nexport function tickFormat(fieldType, groupByType): (label: string) => string {\r\n  return function (label: string): string {\r\n    if (label === 'No Value' || label === 'Other') {\r\n      return label;\r\n    }\r\n    if (fieldType === 'date' && groupByType === 'groupBy') {\r\n      const formatter = timeFormat('MM/DD/YYYY');\r\n      return formatter(<any>label);\r\n    }\r\n\r\n    return label.toString();\r\n  };\r\n}\r\n","/*\r\n * Public API Surface of ngx-charts\r\n */\r\n\r\nexport * from './lib/ngx-charts.module';\r\n\r\nexport * from './lib/area-chart/area-chart.module';\r\nexport * from './lib/area-chart/area-chart.component';\r\nexport * from './lib/area-chart/area-chart-normalized.component';\r\nexport * from './lib/area-chart/area-chart-stacked.component';\r\nexport * from './lib/area-chart/area-series.component';\r\n\r\nexport * from './lib/bar-chart/bar-chart.module';\r\nexport * from './lib/bar-chart/bar.component';\r\nexport * from './lib/bar-chart/bar-horizontal.component';\r\nexport * from './lib/bar-chart/bar-horizontal-2d.component';\r\nexport * from './lib/bar-chart/bar-horizontal-normalized.component';\r\nexport * from './lib/bar-chart/bar-horizontal-stacked.component';\r\nexport * from './lib/bar-chart/series-horizontal.component';\r\nexport * from './lib/bar-chart/bar-label.component';\r\nexport * from './lib/bar-chart/bar-vertical.component';\r\nexport * from './lib/bar-chart/bar-vertical-2d.component';\r\nexport * from './lib/bar-chart/bar-vertical-normalized.component';\r\nexport * from './lib/bar-chart/bar-vertical-stacked.component';\r\nexport * from './lib/bar-chart/series-vertical.component';\r\n\r\nexport * from './lib/bubble-chart/bubble-chart.module';\r\nexport * from './lib/bubble-chart/bubble-chart.component';\r\nexport * from './lib/bubble-chart/bubble-chart.utils';\r\nexport * from './lib/bubble-chart/bubble-series.component';\r\n\r\nexport * from './lib/common/chart-common.module';\r\nexport * from './lib/common/legend/legend.component';\r\nexport * from './lib/common/legend/scale-legend.component';\r\nexport * from './lib/common/legend/legend-entry.component';\r\nexport * from './lib/common/legend/advanced-legend.component';\r\n\r\nexport * from './lib/common/tooltip/tooltip.module';\r\nexport * from './lib/common/tooltip/tooltip.service';\r\nexport * from './lib/common/tooltip/tooltip.component';\r\nexport * from './lib/common/tooltip/tooltip.directive';\r\nexport * from './lib/common/tooltip/style.type';\r\nexport * from './lib/common/tooltip/alignment.type';\r\nexport * from './lib/common/tooltip/show.type';\r\n\r\nexport * from './lib/common/axes/axes.module';\r\nexport * from './lib/common/axes/axis-label.component';\r\nexport * from './lib/common/axes/x-axis.component';\r\nexport * from './lib/common/axes/x-axis-ticks.component';\r\nexport * from './lib/common/axes/y-axis.component';\r\nexport * from './lib/common/axes/y-axis-ticks.component';\r\nexport * from './lib/common/axes/ticks.helper';\r\n\r\nexport * from './lib/common/count/count.directive';\r\nexport * from './lib/common/count/count.helper';\r\nexport * from './lib/common/timeline/timeline.component';\r\nexport * from './lib/common/color.helper';\r\nexport * from './lib/common/charts/chart.component';\r\n\r\nexport * from './lib/common/area.component';\r\nexport * from './lib/common/base-chart.component';\r\nexport * from './lib/common/circle.component';\r\nexport * from './lib/common/circle-series.component';\r\nexport * from './lib/common/grid-layout.helper';\r\nexport * from './lib/common/grid-panel.component';\r\nexport * from './lib/common/grid-panel-series.component';\r\nexport * from './lib/common/svg-linear-gradient.component';\r\nexport * from './lib/common/svg-radial-gradient.component';\r\nexport * from './lib/common/tooltip-area.component';\r\nexport * from './lib/common/tick-format.helper';\r\nexport * from './lib/common/trim-label.helper';\r\nexport * from './lib/common/view-dimensions.helper';\r\nexport * from './lib/common/label.helper';\r\nexport * from './lib/common/domain.helper';\r\n\r\nexport * from './lib/gauge/gauge.module';\r\nexport * from './lib/gauge/gauge-arc.component';\r\nexport * from './lib/gauge/gauge-axis.component';\r\nexport * from './lib/gauge/gauge.component';\r\nexport * from './lib/gauge/linear-gauge.component';\r\n\r\nexport * from './lib/heat-map/heat-map.module';\r\nexport * from './lib/heat-map/heat-map.component';\r\nexport * from './lib/heat-map/heat-map-cell.component';\r\nexport * from './lib/heat-map/heat-map-cell-series.component';\r\n\r\nexport * from './lib/line-chart/line-chart.module';\r\nexport * from './lib/line-chart/line-chart.component';\r\nexport * from './lib/line-chart/line.component';\r\nexport * from './lib/line-chart/line-series.component';\r\n\r\nexport * from './lib/models/chart-data.model';\r\n\r\nexport * from './lib/number-card/number-card.module';\r\nexport * from './lib/number-card/number-card.component';\r\nexport * from './lib/number-card/card.component';\r\nexport * from './lib/number-card/card-series.component';\r\n\r\nexport * from './lib/pie-chart/pie-chart.module';\r\nexport * from './lib/pie-chart/advanced-pie-chart.component';\r\nexport * from './lib/pie-chart/pie-chart.component';\r\nexport * from './lib/pie-chart/pie-arc.component';\r\nexport * from './lib/pie-chart/pie-grid.component';\r\nexport * from './lib/pie-chart/pie-grid-series.component';\r\nexport * from './lib/pie-chart/pie-series.component';\r\nexport * from './lib/pie-chart/pie-label.component';\r\n\r\nexport * from './lib/polar-chart/polar-chart.module';\r\nexport * from './lib/polar-chart/polar-chart.component';\r\nexport * from './lib/polar-chart/polar-series.component';\r\n\r\nexport * from './lib/tree-map/tree-map.module';\r\nexport * from './lib/tree-map/tree-map.component';\r\nexport * from './lib/tree-map/tree-map-cell.component';\r\nexport * from './lib/tree-map/tree-map-cell-series.component';\r\n\r\nexport * from './lib/utils/id';\r\nexport * from './lib/utils/color-sets';\r\nexport * from './lib/utils/sort';\r\nexport * from './lib/utils/throttle';\r\nexport * from './lib/utils/color-utils';\r\nexport * from './lib/utils/visibility-observer';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {InjectionRegisteryService as Éµa} from './lib/common/tooltip/injection-registery.service';\nexport {InjectionService as Éµb} from './lib/common/tooltip/injection.service';"],"names":["DomPortalHost","portal","ComponentPortal","Injectable","ApplicationRef","ComponentFactoryResolver","Injector","Component","ViewEncapsulation","ElementRef","Renderer2","Input","ViewChild","HostBinding","HostListener","EventEmitter","ChangeDetectionStrategy","trigger","transition","style","animate","Output","Directive","NgZone","observableFromEvent","debounceTime","ChangeDetectorRef","NgModule","CommonModule","StyleTypes","AlignmentTypes","ShowTypes","ViewContainerRef","select","scaleTime","scaleLinear","scalePoint","brushX","d3event","DomSanitizer","scaleQuantile","scaleOrdinal","range","scaleBand","curveLinear","ContentChild","area","D0Types","line","curveCardinalClosed","lineRadial","arc","interpolate","min","format","pie","max","d3_color.rgb","treemap","stratify","timeFormat"],"mappings":"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"}